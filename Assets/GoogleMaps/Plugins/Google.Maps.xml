<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Google.Maps</name>
    </assembly>
    <members>
        <member name="T:Google.Maps.CacheOptions">
            <summary>
            Encapsulates map data caching parameters.
            </summary></member>
        <member name="F:Google.Maps.CacheOptions.BasePath">
            <summary>
            The base directory used for storing cache files. If this string value is
            empty, then `BasePath` defaults to
            <see cref="P:UnityEngine.Application.temporaryCachePath" />.
            </summary></member>
        <member name="F:Google.Maps.CacheOptions.Directory">
            <summary>
            The directory under `BasePath` used for storing cache files.
            </summary>
            <remarks>
            <strong>Note:</strong> Files in this directory can be deleted on cache
            cleanup. Do not put other files in this directory.
            </remarks></member>
        <member name="F:Google.Maps.CacheOptions.MaxDiskBytes">
            <summary>
            The maximum amount of space (in bytes) to allocate for cache files.
            </summary>
            <remarks>
            The total can exceed this value temporarilyâ€”in between cache cleanup passes.
            Set this value to to *0* to use an unlimited amount of space.
            This maximum is applied independently to two different caches - map features (the Features
            directory) and terrain (the Terrain directory). If terrain is enabled then the actual
            maximum disk space used is double this value.
            <strong>Note:</strong> If you are targeting WebGL (which is not
            officially supported), then set this value to *0*.
            </remarks></member>
        <member name="F:Google.Maps.CacheOptions.DiskTimeoutSeconds">
            <summary>
            Maximum time to wait to read from the disk cache. If a read takes longer than this, the
            disk cache is disabled.
            </summary>
            <remarks>
            Set this value to 0 to wait indefinitely.
            This is a workaround for a known bug that causes Musk to hang waiting for the disk cache.
            When behaving correctly, reading from the disk cache should be fast.
            </remarks></member>
        <member name="M:Google.Maps.CacheOptions.Copy">
            <summary>Creates a shallow copy of this object.</summary></member>
        <member name="T:Google.Maps.Collections.Generic.CandidatePool`1">
            <summary>
            A class to maintain a pool of objects with a leader (when non-empty).
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.CandidatePool`1.Leader">
            <summary>
            Current leader. *null* if pool is empty. Once an object becomes the leader, it stays
            leader until it is removed from the pool.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.CandidatePool`1.Count">
            <summary>
            Returns number of objects in the pool (including the current leader, if any).
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.CandidatePool`1.Candidates">
            <summary>
            Set of all the candidates in the pool.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.CandidatePool`1.AddCandidate(`0)">
            <summary>
            Add a new candidate to the pool.
            </summary>
            <param name="candidate">Candidate to add to pool. Cannot be *null*.</param>
            <exception cref="T:System.InvalidOperationException">An invalid candidate was specified.</exception></member>
        <member name="M:Google.Maps.Collections.Generic.CandidatePool`1.RemoveCandidate(`0)">
            <summary>
            Removes a candidate from the pool. If candidate is leader, then either a new leader or
            no leader will be set after this call.
            </summary>
            <param name="candidate">Candidate to remove from the pool. Cannot be *null*.</param>
            <exception cref="T:System.InvalidOperationException">An invalid candidate was specified.</exception></member>
        <member name="M:Google.Maps.Collections.Generic.CandidatePool`1.TryPickLeader">
            <summary>
            Pick a leader from the available candidates. If there are no candidates, do nothing.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.CandidatePool`1.GetEnumerator">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.CandidatePool`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Collections.Generic.DisjointSet`1">
            <summary>
            A disjoint set is a data structure that maintains a partitioning of a set into disjoint
            subsets (see https://en.wikipedia.org/wiki/Disjoint-set_data_structure).
            </summary>
            <remarks>
            This implementation maintains a Pool of sets with the following operations:
            - Determine if an element is contained in any maintained subset (ContainsElement);
            - Return the set containing the supplied element (GetSetContaining);
            - Combine the sets containing two supplied elements (SubsetUnion) -- implicitly creating new
            single element subset(s) for either element if not currently in a subset;
            - Return a set containing all the subsets in the Pool (GetSets).
            NOTE: This class is designed for simplicity and readability and would not be efficient for
            intensive use with subsets containing hundreds+ elements as a certain amount of copying occurs
            during set combination, it is however fine for large collections of relatively small sets.
            </remarks></member>
        <member name="M:Google.Maps.Collections.Generic.DisjointSet`1.#ctor">
            <summary>
            Creates a new, empty DisjointSet.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.DisjointSet`1.ContainsElement(`0)">
            <summary>
            Returns whether the supplied element is present in a subset of this DisjointSet.
            </summary>
            <param name="element">The element to check.</param>
            <returns>Whether the supplied element is present.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.DisjointSet`1.GetSetContaining(`0)">
            <summary>Returns the set associated with the supplied element.</summary>
            <param name="element">The element for which to return the associated set.</param>
            <returns>The set associated with the supplied element.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            If the supplied element is not associated with a set.
            </exception></member>
        <member name="M:Google.Maps.Collections.Generic.DisjointSet`1.AddInitialEntryIfElementAbsent(`0)">
            <summary>Adds a new element to this DisjointSet if it is not currently present.</summary>
            <param name="element">The element to add if not already present.</param></member>
        <member name="M:Google.Maps.Collections.Generic.DisjointSet`1.SubsetUnion(`0,`0)">
            <summary>
            Combines the subsets associated with the two supplied elements.
            </summary>
            <remarks>
            If either element is not currently in this DisjointSet, a single element subset containing
            that element is created before performing the combination.
            </remarks>
            <param name="element1">The first element.</param>
            <param name="element2">The second element.</param></member>
        <member name="M:Google.Maps.Collections.Generic.DisjointSet`1.GetSetRepresentative(System.Collections.Generic.HashSet{`0})">
            <summary>
            Returns a representative element from the supplied set.
            </summary>
            <remarks>
            A representative element is an arbitrary element contained in the set. This is useful for
            selecting a key with which to identify this set in the pool of subsets in this
            DisjointSet structure (valid because all subsets are disjoint, so the representative
            element cannot also be present in any other subset).
            </remarks>
            <param name="values">The set of values from which to draw a representative.</param>
            <returns>A representative element from the values set.</returns>
            <exception cref="T:System.InvalidOperationException">If the set is empty.</exception></member>
        <member name="M:Google.Maps.Collections.Generic.DisjointSet`1.GetRepresentative(`0)">
            <summary>
            Returns a representative element from the set associated with the supplied element.
            </summary>
            <remarks>
            See <see cref="M:Google.Maps.Collections.Generic.DisjointSet{`0}.GetSetRepresentative(System.Collections.Generic.HashSet{`0})" /> for an explanation of "representative element".
            This is not a stable representative, changing the set associated with the supplied element
            may change the representative returned by this function.
            </remarks>
            <param name="element">
            The element from whose associated subset the returned representative is selected.
            </param>
            <returns>A representative element from the subset associated with element.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            If the element is not associated with any set.
            </exception></member>
        <member name="M:Google.Maps.Collections.Generic.DisjointSet`1.GetSets">
            <summary>
            Returns a set of the subsets currently contained in this DisjointSet.
            </summary>
            <remarks>
            Returns a newly allocated outer HashSet, but the elements within that set are the actual
            subsets stored internally, so these should treated as readonly.
            </remarks>
            <returns>The set of subsets.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.DisjointSet`1.ToString">
            <summary>
            Returns a string displaying contained subsets separated by commas.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.DisjointSet`1.SetToString(System.Collections.Generic.HashSet{`0})">
            <summary>
            Returns a string representing the supplied set in the form "{value1, value2}".
            </summary>
            <param name="values">The set from which to generate a string representation.</param></member>
        <member name="T:Google.Maps.Collections.Generic.InsertionOrderDictionary`2">
            <summary>
            A Dictionary with similar characteristics to
            <see cref="T:System.Collections.Generic.Dictionary`2" />, with the exception that
            key/value pairs are enumerated in insertion order.
            </summary>
            <remarks>
            Performance characteristics are as follows:
            <list type="bullet">
            <item><term>Insertion:</term><description>O(1)</description></item>
            <item><term>Removal:</term><description>O(1)</description></item>
            <item><term>Lookup (by key):</term><description>O(1)</description></item>
            <item><term>Enumeration (per item):</term><description>O(1)</description></item>
            </list>
            </remarks>
            <typeparam name="TKey">The type of the keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam></member>
        <member name="F:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.InsertionOrderList">
            <summary>
            Stores dictionary elements in insertion order.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.KeyToElementMapping">
            <summary>
            Stores a mapping from each key to the <see cref="T:System.Collections.Generic.LinkedListNode`1" /> representing its
            insertion order in <see cref="F:Google.Maps.Collections.Generic.InsertionOrderDictionary{`0,`1}.InsertionOrderList" />.
            </summary>
            <remarks>
            This allows for O(1) lookup and removal of dictionary elements.
            </remarks></member>
        <member name="P:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.Keys">
            <summary>
            Gets a collection containing the keys in
            <see cref="T:Google.Maps.Collections.Generic.InsertionOrderDictionary`2" />, in insertion order.
            </summary>
            <remarks>
            Each key in the returned collection is a reference to the actual key in the dictionary.
            Therefore, changes to the keys in the collection will result in changes to the keys in the
            dictionary.
            </remarks></member>
        <member name="P:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.Values">
            <summary>
            Gets a collection containing the values in
            <see cref="T:Google.Maps.Collections.Generic.InsertionOrderDictionary`2" />, in insertion order.
            </summary>
            <remarks>
            Each value in the returned collection is a reference to the actual value in the dictionary.
            Therefore, changes to the values in the collection will result in changes to the values in
            the dictionary.
            </remarks></member>
        <member name="P:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.Count">
            <inheritdoc /></member>
        <member name="P:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly">
            <inheritdoc /></member>
        <member name="P:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.Item(`0)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.GetEnumerator">
            <summary>
            Returns an Enumerator that iterates through the
            <see cref="T:Google.Maps.Collections.Generic.InsertionOrderDictionary`2" />, in the order in which elements were
            added.
            </summary>
            <remarks>
            For the purposes of enumeration, each item is a <see cref="T:System.Collections.Generic.KeyValuePair`2" />
            representing each key/value pair in the dictionary.
            </remarks></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.Clear">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.Add(`0,`1)">
            <summary>
            Adds the specified key to the dictionary.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">
            The value of the element to add. The value can be null for reference types.
            </param>
            <exception cref="T:System.ArgumentNullException">If the specified key is null.</exception>
            <exception cref="T:System.ArgumentException">
            If an item has already been added with the specified key.
            </exception></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.ContainsKey(`0)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.Remove(`0)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.TryGetValue(`0,`1@)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1" /> to an array of type
            <see cref="T:System.Collections.Generic.KeyValuePair`2" /> starting at the specified array index. Elements are
            copied by insertion order.
            </summary>
            <param name="array">
            The destination array for elements copied from the
            <see cref="T:Google.Maps.Collections.Generic.InsertionOrderDictionary`2" />
            </param>
            <param name="arrayIndex">
            The zero-based index within the array at which copying begins.
            </param>
            <exception cref="T:System.ArgumentNullException">If array is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If arrayIndex is not a valid index within array.
            </exception>
            <exception cref="T:System.ArgumentException">
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1" /> is greater than the
            available space from arrayIndex to the end of the destination array.
            </exception></member>
        <member name="M:Google.Maps.Collections.Generic.InsertionOrderDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Collections.Generic.IQuadTree`2">
            <summary>
            Quadtree interface.
            </summary>
            <typeparam name="K">The type of the keys in the quadtree.</typeparam>
            <typeparam name="V">The type of the values in the quadtree.</typeparam></member>
        <member name="M:Google.Maps.Collections.Generic.IQuadTree`2.Add(`0,`1)">
            <summary>
            Add the given key and value to the quadtree.
            </summary>
            <param name="key">The key of the item to add.</param>
            <param name="value">The value of the item to add.</param></member>
        <member name="M:Google.Maps.Collections.Generic.IQuadTree`2.Remove(`0)">
            <summary>
            Remove an item with the given key from the quadtree.
            </summary>
            <param name="key">The key to search for.</param>
            <returns>True if a value was removed.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.IQuadTree`2.Contains(`0)">
            <summary>
            Returns true if the given key exists in the quadtree.
            </summary>
            <param name="key">The key to check.</param>
            <returns>True if the given key exists in the quadtree.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.IQuadTree`2.Overlaps(UnityEngine.RectInt)">
            <summary>
            Returns true if an item in the quadtree exists inside the given rectangle.
            </summary>
            <param name="rect">The rectangle to test.</param>
            <returns>True if an item in the quadtree exists inside the given rectangle.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.IQuadTree`2.GetOverlaps(UnityEngine.RectInt,System.Collections.Generic.ICollection{`1},System.Int32)">
            <summary>
            Adds items that the given rectangle overlaps in the quadtree to the given collection.
            </summary>
            <param name="rect">The rectangle to test.</param>
            <param name="results">The collection to add to.</param>
            <param name="maxResults">
            The maximum number of items to add to <paramref name="results" />.
            </param>
            <returns>The number of items added to <paramref name="results" />.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.IQuadTree`2.Clear">
            <summary>
            Clears the quadtree.
            </summary></member>
        <member name="T:Google.Maps.Collections.Generic.KeyValueMinHeap`2.KeyComparer">
            <summary>
            Compares a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> by key only.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.KeyValueMinHeap`2.KeyComparer.Compare(System.Collections.Generic.KeyValuePair{`0,`1},System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Compares two <see cref="T:System.Collections.Generic.KeyValuePair`2" /> by key.
            </summary>
            <param name="lhs">The left-hand pair to compare.</param>
            <param name="rhs">The right-hand pair to compare.</param>
            <returns>
            An integer that is negative if <paramref name="lhs" /> is less than <paramref name="rhs" />,
            positive if it is greater, and zero if they are equal.
            </returns></member>
        <member name="M:Google.Maps.Collections.Generic.KeyValueMinHeap`2.Push(`0,`1)">
            <summary>
            Push a new element onto the heap.
            </summary>
            <param name="key">Key for new element.</param>
            <param name="value">New element to push.</param></member>
        <member name="T:Google.Maps.Collections.Generic.MinHeap`1">
            <summary>
            A simple binary min heap.
            </summary>
            <typeparam name="T">The type stored in the heap.</typeparam></member>
        <member name="F:Google.Maps.Collections.Generic.MinHeap`1.DefaultCapacity">
            <summary>
            Default heap capacity if none is specified.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.MinHeap`1.Count">
            <summary>
            The number of elements in the heap.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.MinHeap`1.Capacity">
            <summary>
            The total capacity of the heap. Cannot be set to less than the current Count.
            </summary>
            <exception cref="T:System.ArgumentException">Thrown when trying to set negative capacity.</exception></member>
        <member name="F:Google.Maps.Collections.Generic.MinHeap`1._Comparer">
            <summary>
            The backing <see cref="T:System.Collections.Generic.IComparer`1" /> to use when ordering elements.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.MinHeap`1.Comparer">
            <summary>
            The <see cref="T:System.Collections.Generic.IComparer`1" /> to use when ordering elements.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown when no <see cref="T:System.Collections.Generic.IComparer`1" /> is
            provided and <see cref="P:System.Collections.Generic.Comparer`1.Default" /> is not available.</exception></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Constructs an empty heap with <see cref="F:Google.Maps.Collections.Generic.MinHeap{`0}.DefaultCapacity" /> and
            optional <paramref name="comparer" />.
            </summary>
            <param name="comparer">Comparer to use to determine minimum element,
            or <see cref="P:System.Collections.Generic.Comparer`1.Default" /> if not provided.</param></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.#ctor(System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Construct an empty heap with given <paramref name="capacity" /> and
            optional <paramref name="comparer" />.
            </summary>
            <param name="capacity">Initial capacity of heap.</param>
            <param name="comparer">Comparer to use to determine minimum element,
            or <see cref="P:System.Collections.Generic.Comparer`1.Default" /> if not provided.</param></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.#ctor(System.Collections.Generic.ICollection{`0},System.Collections.Generic.IComparer{`0})">
            <summary>
            Construct a heap from the given <paramref name="elems" /> and
            optional <paramref name="comparer" />.
            The heap capacity is initially sized to the input exactly.
            </summary>
            <param name="elems">Elements to be put in heap.</param>
            <param name="comparer">Comparer to use to determine minimum element,
            or <see cref="P:System.Collections.Generic.Comparer`1.Default" /> if not provided.</param></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.Left(System.Int32)">
            <summary>
            Get the index of the left child of <paramref name="index" /> by heap indexing.
            </summary>
            <param name="index">Element to get left child of.</param>
            <returns>Index of the left child of <paramref name="index" />.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.Right(System.Int32)">
            <summary>
            Get the index of the right child of <paramref name="index" /> by heap indexing.
            </summary>
            <param name="index">Element to get right child of.</param>
            <returns>Index of the right child of <paramref name="index" />.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.Parent(System.Int32)">
            <summary>
            Get the index of the parent of <paramref name="index" /> by heap indexing.
            </summary>
            <param name="index">Element to get the parent of.</param>
            <returns>Index of the parent of <paramref name="index" />.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.HeapifyUp">
            <summary>
            Restore the heap, assuming only the last element may violate the heap property.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.HeapifyDown(System.Int32)">
            <summary>
            Restore the heap, assuming only the root element may violate the heap property.
            If <paramref name="index" /> is given, restoration is performed only on the heap rooted at
            <paramref name="index" />.
            </summary>
            <param name="index">Root of heap subtree to heapify.</param></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.BuildHeap">
            <summary>
            Convert backing array into a heap regardless of current ordering.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.Push(`0)">
            <summary>
            Push a new element onto the heap.
            </summary>
            <param name="val">Item to push.</param></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.Peek">
            <summary>
            Peek at the minimum element of the heap.
            </summary>
            <returns>The minimum element in the heap.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when heap is empty.</exception></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.Pop">
            <summary>
            Pop the minimum element off the top of the heap and return it.
            </summary>
            <returns>The minimum element in the heap before it was removed.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown when heap is empty.</exception></member>
        <member name="M:Google.Maps.Collections.Generic.MinHeap`1.Clear">
            <summary>
            Remove all elements from the heap. The capacity remains unchanged.
            </summary></member>
        <member name="T:Google.Maps.Collections.Generic.RectQuadTree`1">
            <summary>
            A simple, rect-based quadtree.
            </summary>
            <summary>
            When a quadrant in the quadtree is full, it attempts to subdivide if its maximum depth has
            not yet been reached. If the quadrant cannot be subdivided, then items will be added beyond
            its maximum capacity.
            </summary></member>
        <member name="T:Google.Maps.Collections.Generic.RectQuadTree`1.NodeInfo">
            <summary>
            Stores data relating to quadrant in this quadtree.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.NodeInfo.IsLeaf">
            <summary>
            Whether this node is a leaf.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.NodeInfo.Rect">
            <summary>
            The bounds of this quadrant.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.NodeInfo.FirstChildIndex">
            <summary>
            The index of the first child of this node (if it is not a leaf).
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.RectQuadTree`1.NodeInfo.Items">
            <summary>
            The items stored in this node.
            </summary>
            <remarks>
            This list is lazily initialized.
            </remarks></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.NodeInfo._Items">
            <summary>
            Backing field for <see cref="P:Google.Maps.Collections.Generic.RectQuadTree{`0}.NodeInfo.Items" />.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.NodeInfo.#ctor(UnityEngine.RectInt)">
            <summary>
            Leaf node constructor.
            </summary></member>
        <member name="T:Google.Maps.Collections.Generic.RectQuadTree`1.Item">
            <summary>
            An item in the quadtree.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.Item.Rect">
            <summary>
            The bounds of the item.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.Item.Value">
            <summary>
            The value of the item.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.Item.#ctor(UnityEngine.RectInt,`0)">
            <summary>
            Constructor.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.InitialNodeCapacity">
            <summary>
            The initial capacity of <see cref="F:Google.Maps.Collections.Generic.RectQuadTree{`0}.Nodes" />.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.RectQuadTree`1.Count">
            <summary>
            The number of items in this quadtree.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.DefaultMaxQuadrantItemCount">
            <summary>
            The default value for <see cref="F:Google.Maps.Collections.Generic.RectQuadTree{`0}.MaxQuadrantItemCount" />.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.MaxQuadrantItemCount">
            <summary>
            The maximum number of items a single quadrant can hold before subdividing. This limit does
            not apply for quadrants at max depth.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.MaxDepth">
            <summary>
            The maximum depth of this quadtree.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.OverlapsTemp">
            <summary>
            Collection reused in <see cref="M:Google.Maps.Collections.Generic.RectQuadTree{`0}.Overlaps(UnityEngine.RectInt)" /> to reduce garbage.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.NodeCount">
            <summary>
            The number of nodes in this quadtree.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.RectQuadTree`1.Nodes">
            <summary>
            The nodes in this quadtree. The node at index 0 is the root node.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.#ctor(UnityEngine.RectInt,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="rect">The bounds of the quadtree.</param>
            <param name="maxQuadrantItemCount">
            The maximum number of items a single quadrant can hold before subdividing. This limit does
            not apply for quadrants at max depth.
            </param>
            <param name="maxDepth">The maximum depth of the quadtree.</param></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.#ctor(UnityEngine.RectInt)">
            <summary>
            Constructor.
            </summary>
            <param name="rect">The bounds of the quadtree.</param></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.Add(UnityEngine.RectInt,`0)">
            <inheritdoc />
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="rect" /> exists outside the bounds of the quadtree.
            </exception></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.Overlaps(UnityEngine.RectInt)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.GetOverlaps(UnityEngine.RectInt,System.Collections.Generic.ICollection{`0},System.Int32)">
            <inheritdoc />
            <remarks>
            Non-point based entries may be recorded multiple times. If this is undesirable behaviour,
            use a set collection such as <see cref="T:System.Collections.Generic.HashSet`1" />.
            </remarks></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.Remove(UnityEngine.RectInt)">
            <inheritdoc />
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="rect" /> exists outside the bounds of the quadtree.
            </exception></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.Reset(UnityEngine.RectInt)">
            <summary>
            Clears the quadtree and resets its bounds.
            </summary>
            <param name="rect">The new bounds of the quadtree.</param></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.Contains(UnityEngine.RectInt)">
            <inheritdoc />
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="rect" /> exists outside the bounds of the quadtree.
            </exception></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.Clear">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.Initialize(UnityEngine.RectInt)">
            <summary>
            Initializes the quadtree.
            </summary>
            <param name="rect">The bounds of the quadtree.</param></member>
        <member name="M:Google.Maps.Collections.Generic.RectQuadTree`1.Subdivide(System.Int32)">
            <summary>
            Subdivides the node at the given index.
            </summary>
            <param name="nodeIdx">The index of the node to subdivide.</param></member>
        <member name="T:Google.Maps.Collections.Generic.Tree.AVLTree`1">
            <summary>
            An AVL tree, which maintains a balanced binary search tree.
            </summary>
            <typeparam name="T">The type of objects to insert into the tree.</typeparam></member>
        <member name="T:Google.Maps.Collections.Generic.Tree.AVLTree`1.AVLTreeNode">
            <summary>
            The node class used by the AVL tree. It must keep a reference to the tree that created it
            for a sanity check when it is passed to the tree's removal method to ensure it belongs to
            that tree.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.AVLTree`1.AVLTreeNode.Tree">
            <summary>
            The tree that holds this node.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.AVLTree`1.AVLTreeNode.Value">
            <summary>
            The value the node holds.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.AVLTree`1.AVLTreeNode.Parent">
            <summary>
            The node that is a parent of this node.
            </summary>
            <remarks>
            If this is null, this node is the root node.
            </remarks></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.AVLTree`1.AVLTreeNode.Left">
            <summary>
            The left child node of this node.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.AVLTree`1.AVLTreeNode.Right">
            <summary>
            The right child node of this node.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.AVLTree`1.AVLTreeNode.Height">
            <summary>
            The height of the subtree rooted at this node.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.AVLTreeNode.#ctor(`0,Google.Maps.Collections.Generic.Tree.AVLTree{`0},Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Constructor.
            </summary>
            <param name="value">The value the node will hold.</param>
            <param name="tree">The tree this node belongs to.</param>
            <param name="parent">The parent node of this node.</param></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.AVLTreeNode.Successor">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.AVLTreeNode.Predecessor">
            <inheritdoc /></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.AVLTree`1.Count">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Collections.Generic.Tree.AVLTree`1.Comparer">
            <summary>
            The comparer to use when traversing the trees.
            </summary></member>
        <member name="F:Google.Maps.Collections.Generic.Tree.AVLTree`1.Root">
            <summary>
            The root node of the tree.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Constructor. Uses the given comparer for T.
            </summary>
            <param name="comparer">The comparer to use when traversing the tree.</param></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.#ctor">
            <summary>
            Default constructor. Uses the default comparer for T.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.Contains(`0)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.Add(`0)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.Remove(`0)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.Remove(Google.Maps.Collections.Generic.Tree.IBinaryTreeNode{`0})">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.Min">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.Max">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.Upper(`0)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.Lower(`0)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.GetBalance(Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Returns the difference in height between a node's two subtrees.
            </summary>
            <remarks>A positive return value indicates that the right subtree is taller.</remarks>
            <param name="node">The node to check.</param>
            <returns>The difference between a node's two subtrees.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.TryRemove(Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Tries to removes the given node from the tree.
            </summary>
            <param name="node">The node to remove.</param>
            <returns>True if the node was removed from the tree.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.Remove(Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Removes the given node from the tree.
            </summary>
            <param name="node">The node to remove.</param></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.ReplaceNode(Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode,Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Replaces a node by a given node or null.
            </summary>
            <remarks>
            Nodes are replaced rather than simply having their values swapped so that any nodes held
            from the outside do not become invalid.
            </remarks>
            <param name="oldNode">The node to replace.</param>
            <param name="newNode">The node to replace it with.</param></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.RebalanceTree(Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Rebalances the tree after a remove or add operation.
            </summary>
            <param name="node">The parent of the node that was removed or added.</param></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.UpdateHeight(Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Sets the height of the node to be the height of its largest subtree plus one.
            </summary>
            <param name="node">The node to update the height of.</param></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.Restructure(Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode,Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode,Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Performs left or right rotations to remove imbalance on the given node.
            </summary>
            <param name="node">The node to restructure.</param>
            <param name="child">The node's tallest child.</param>
            <param name="grandchild">The child's tallest child.</param>
            <returns>The root node of the rebalanced subtree.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.RotateLeft(Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Performs a left rotation.
            </summary>
            <param name="node">The node to rotate left.</param></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.RotateRight(Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Performs a right rotation.
            </summary>
            <param name="node">The node to rotate right.</param></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.FindNode(`0)">
            <summary>
            Finds a node with the given value in the tree.
            </summary>
            <param name="value">The value to find a node with.</param>
            <returns>The node holding the given value, or null if it doesn't exist.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.GetTallestChild(Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Returns the tallest child of the given node.
            </summary>
            <param name="node">The node to return the tallest child of.</param>
            <returns>The tallest child of the given node.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.AVLTree`1.NewNode(`0,Google.Maps.Collections.Generic.Tree.AVLTree{`0}.AVLTreeNode)">
            <summary>
            Creates a new node in the tree and returns it.
            </summary>
            <param name="value">The value the new node will hold.</param>
            <param name="parent">The parent of the new node.</param>
            <returns>The newly created node.</returns></member>
        <member name="T:Google.Maps.Collections.Generic.Tree.IBinaryTree`1">
            <summary>
            Defines the interface of a binary tree.
            </summary>
            <typeparam name="T">The type of the values that the tree's nodes hold.</typeparam></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.IBinaryTree`1.Root">
            <summary>
            The root node of the tree.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.IBinaryTree`1.Count">
            <summary>
            The number of nodes in the tree.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.IBinaryTree`1.Add(`0)">
            <summary>
            Adds a node to the tree holding a given value.
            </summary>
            <param name="value">The value the new node will hold.</param>
            <returns>The node that was added to the binary tree that holds the given value.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.IBinaryTree`1.Contains(`0)">
            <summary>
            Returns true if the given value exists in the tree.
            </summary>
            <param name="value">The value to check.</param>
            <returns>True if the value exists in the tree.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.IBinaryTree`1.Remove(`0)">
            <summary>
            Removes a node holding the given value from the tree, if it exists.
            </summary>
            <param name="value">The value to remove.</param>
            <returns>
            True if a node holding the given value was found and removed from the tree.
            </returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.IBinaryTree`1.Remove(Google.Maps.Collections.Generic.Tree.IBinaryTreeNode{`0})">
            <summary>
            Removes the given node from the tree, if it exists in the tree.
            </summary>
            <param name="node">The node to remove.</param>
            <returns>True if the given node was found in and removed from the tree.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.IBinaryTree`1.Min">
            <summary>
            Returns the node holding the minimum value in the tree.
            </summary>
            <remarks>
            If the tree is empty, this returns null.
            </remarks>
            <returns>The node holding the minimum value in the tree.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.IBinaryTree`1.Max">
            <summary>
            Returns the node holding the maximum value in the tree.
            </summary>
            <remarks>
            If the tree is empty, this returns null.
            </remarks>
            <returns>The node holding the maximum value in the tree.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.IBinaryTree`1.Upper(`0)">
            <summary>
            Returns the node holding the smallest value greater than but not equal to the given value.
            </summary>
            <remarks>If no such node exists, null is returned.</remarks>
            <param name="value">The value to test against.</param>
            <returns>
            The node holding the smallest value greater than but not equal to the given value.
            </returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.IBinaryTree`1.Lower(`0)">
            <summary>
            Returns the node holding the largest value less than but not equal to the given value.
            </summary>
            <remarks>If no such node exists, null is returned.</remarks>
            <param name="value">The value to test against.</param>
            <returns>
            The node holding the smallest value greater than but not equal to the given value.
            </returns></member>
        <member name="T:Google.Maps.Collections.Generic.Tree.IBinaryTreeNode`1">
            <summary>
            Defines the read-only interface of a binary tree node.
            </summary>
            <typeparam name="T">The type of the value the node holds.</typeparam></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.IBinaryTreeNode`1.Value">
            <summary>
            The value the node holds.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.IBinaryTreeNode`1.Parent">
            <summary>
            The node that is a parent of this node.
            </summary>
            <remarks>
            If this is null, this node is the root node.
            </remarks></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.IBinaryTreeNode`1.Left">
            <summary>
            The left child node of this node.
            </summary></member>
        <member name="P:Google.Maps.Collections.Generic.Tree.IBinaryTreeNode`1.Right">
            <summary>
            The right child node of this node.
            </summary></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.IBinaryTreeNode`1.Successor">
            <summary>
            Returns the successor node of this node.
            </summary>
            <remarks>
            The successor node is the node that would come immediately after this node in an in-order
            traversal. If no such node exists, null is returned.
            </remarks>
            <returns>The successor node of this node.</returns></member>
        <member name="M:Google.Maps.Collections.Generic.Tree.IBinaryTreeNode`1.Predecessor">
            <summary>
            Returns the predecessor node of this node.
            </summary>
            <remarks>
            The predecessor node is the node that would come immediately before this node in an
            in-order traversal. If no such node exists, null is returned.
            </remarks>
            <returns>The predecessor node of this node.</returns></member>
        <member name="T:Google.Maps.Coord.Projection">
            <summary>
            Projection between latitude/longitude and Unity worldspace.
            </summary>
            <remarks>
            <strong>Caution:</strong> You must set the floating origin before
            using the Coordinate System. For more information, see the
            <see cref="M:Google.Maps.MapsService.InitFloatingOrigin(Google.Maps.Coord.LatLng)" /> method.
            </remarks></member>
        <member name="F:Google.Maps.Coord.Projection.Zoom">
            <summary>The zoom level.</summary></member>
        <member name="P:Google.Maps.Coord.Projection.IsFloatingOriginSet">
            <summary>Whether <see cref="P:Google.Maps.Coord.Projection.FloatingOrigin" /> has been set.</summary></member>
        <member name="F:Google.Maps.Coord.Projection._FloatingOrigin">
            <summary>A backing field for <see cref="P:Google.Maps.Coord.Projection.FloatingOrigin" />.</summary></member>
        <member name="P:Google.Maps.Coord.Projection.FloatingOrigin">
            <summary>
            Floating origin, stored as a Vector2D point in Earth-scale Mercator space.
            </summary>
            <remarks>
            When converting to/from %Unity Worldspace, Vector3 values are translated relative to this
            point (in order to avoid single precision floating point number stability issues).
            </remarks></member>
        <member name="F:Google.Maps.Coord.Projection._MercatorScale">
            <summary>A backing field for <see cref="P:Google.Maps.Coord.Projection.MercatorScale" />.</summary></member>
        <member name="P:Google.Maps.Coord.Projection.MercatorScale">
            <summary>Mercator scale factor.</summary>
            <remarks>
            When converting to/from Unity Worldspace, Vector3 values are scaled relative to this value.
            The ideal Unity Worldspace scale is 1:1 (1 unit = 1 meter), however in the Mercator
            Projection, scale varies by latitude (1 at the equator, 2 at 60 degrees and infinity at the
            north pole). Instead of attempting to rescale the world as users move north/south, The SDK
            locks the scale to the initial origin's latitude. This means that the world slowly changes
            size as users move north/south, however in location-based games users are not expected to
            move far enough or fast enough for this to be noticeable.
            </remarks></member>
        <member name="M:Google.Maps.Coord.Projection.#ctor(System.Int32)">
            <summary>Constructor.</summary>
            <param name="zoom">Zoom.</param></member>
        <member name="M:Google.Maps.Coord.Projection.InitFloatingOrigin(Google.Maps.Coord.LatLng)">
            <summary>
            Establishes the initial floating origin and Mercator scale of the coordinate system.
            </summary>
            <param name="floatingOrigin">Initial coordinate system floating origin value.</param>
            <exception cref="T:System.InvalidOperationException">If the floating origin has already been set.
            </exception>
            <seealso cref="M:Google.Maps.Coord.Projection.MoveFloatingOrigin(Google.Maps.Coord.LatLng)" /></member>
        <member name="M:Google.Maps.Coord.Projection.MoveFloatingOrigin(Google.Maps.Coord.LatLng)">
            <summary>
            Moves the floating origin (used when converting <see cref="T:Google.Maps.Coord.LatLng" /> values to/from
            <see cref="T:UnityEngine.Vector3" />).
            </summary>
            <remarks>
            The floating origin should be moved whenever the user moves far enough that floating point
            stability issues become a concern (the density of representable floating point numbers
            decreases as their magnitude increases).
            After calling this method, you should use the returned offset value (<see cref="T:UnityEngine.Vector3" />)
            to translate all <see cref="T:UnityEngine.GameObject" />s in the scene (ie. to reposition them closer to
            the new floating origin and hence reduce the magnitude of their floating point values).
            </remarks>
            <param name="floatingOrigin">New floating origin value.</param>
            <returns>A <see cref="T:UnityEngine.Vector3" /> offset for manually translating <see cref="T:UnityEngine.GameObject" />s
            to reposition them relative to the new floating origin.</returns></member>
        <member name="M:Google.Maps.Coord.Projection.FromLatLngToVector3(Google.Maps.Coord.LatLng)">
            <summary>
            Converts a `LatLng` value into a %Unity Worldspace `Vector3` by way of
            the Spherical Mercator projection:
            - translated relative to the current origin (<see cref="P:Google.Maps.Coord.Projection.FloatingOrigin" />).
            - scaled relative to the latitude of the initial floating origin
            (<see cref="P:Google.Maps.Coord.Projection.MercatorScale" />).
            </summary>
            <param name="latLng">The LatLng value to convert.</param>
            <returns>A Vector3 value in %Unity Worldspace.</returns></member>
        <member name="M:Google.Maps.Coord.Projection.FromVector3ToLatLng(UnityEngine.Vector3)">
            <summary>
            Converts a %Unity Worldspace `Vector3` into a `LatLng`, by way of the
            Spherical Mercator projection.
            </summary>
            <remarks>
            This method is the inverse of the <see cref="M:Google.Maps.Coord.Projection.FromLatLngToVector3(Google.Maps.Coord.LatLng)" /> method. It takes
            into account the fact that the Vector3 has been translated
            relative to the current origin, and scaled relative to the latitude of
            the initial origin.
            </remarks>
            <param name="vector3">The `Vector3` value to convert.</param>
            <returns>The converted `LatLng` value.</returns></member>
        <member name="F:Google.Maps.Coord.Earth.Radius">
            <summary>
            The radius of the Earth, in meters, according to the spherical Earth model used by Google
            Maps (itself based on the major equatorial radius of the WGS 84 ellipsoid).
            </summary></member>
        <member name="F:Google.Maps.Coord.Earth.Circumference">
            <summary>
            The circumference of the Earth, in meters.
            </summary></member>
        <member name="T:Google.Maps.Coord.EarthMercator">
            <summary>
            Earth-scale Spherical Mercator Projection.
            </summary>
            <remarks>
            Scaled so that at the equator, the distance spanned by a full 360 degrees of longitude is
            equal to the circumference of the Earth (in meters).
            </remarks></member>
        <member name="F:Google.Maps.Coord.EarthMercator.Extent">
            <summary>
            Size of Earth-scale Mercator Projection space along the x axis.
            </summary>
            <remarks>
            For square projections (ie. with truncated latitude), this also applies to the y axis.
            </remarks></member>
        <member name="F:Google.Maps.Coord.EarthMercator.MinX">
            <summary>
            Minimum X value in Earth-scale Mercator space.
            </summary>
            <remarks>
            For square projections (ie. with truncated latitude), this also corresponds to the minimum Y
            value.
            </remarks></member>
        <member name="F:Google.Maps.Coord.EarthMercator.MaxX">
            <summary>
            Maximum X value in Earth-scale Mercator space.
            </summary>
            <remarks>
            For square projections (ie. with truncated latitude), this also corresponds to the maximum Y
            value.
            </remarks></member>
        <member name="F:Google.Maps.Coord.EarthMercator.MinY">
            <summary>
            Minimum Y value in Earth-scale Mercator space.
            </summary></member>
        <member name="F:Google.Maps.Coord.EarthMercator.MaxY">
            <summary>
            Maximum Y value in Earth-scale Mercator space.
            </summary></member>
        <member name="M:Google.Maps.Coord.EarthMercator.FromLatLng(Google.Maps.Coord.LatLng)">
            <summary>
            Projects a LatLng value into Mercator space, scaled to the size of the Earth (in meters).
            </summary>
            <param name="latLng">The LatLng value to project.</param>
            <returns>The projected value, in Earth-scale Mercator space.</returns></member>
        <member name="M:Google.Maps.Coord.EarthMercator.FromVector2D(Google.Maps.Coord.Vector2D)">
            <summary>
            Reverses a Mercator projection back into LatLng space. Inverse of <see cref="M:Google.Maps.Coord.EarthMercator.FromLatLng(Google.Maps.Coord.LatLng)" />.
            </summary>
            <param name="vector2D">The Mercator projection value.</param>
            <returns>The LatLng value.</returns></member>
        <member name="T:Google.Maps.Coord.LatLng">
            <summary>
            An immutable representation of a set of geographical coordinates.
            </summary></member>
        <member name="F:Google.Maps.Coord.LatLng.MinLat">
            <summary>
            The minimum latitude value (i.e., the South Pole).
            </summary></member>
        <member name="F:Google.Maps.Coord.LatLng.MaxLat">
            <summary>
            The maximum latitude value (i.e., the North Pole).
            </summary></member>
        <member name="F:Google.Maps.Coord.LatLng.MinLng">
            <summary>
            The minimum longitude value (i.e., the Antimeridian).
            </summary></member>
        <member name="F:Google.Maps.Coord.LatLng.MaxLng">
            <summary>
            The maximum longitude value (i.e., the Antimeridian).
            </summary></member>
        <member name="P:Google.Maps.Coord.LatLng.Lat">
            <summary>
            The latitude value.
            </summary>
            <remarks>
            Valid values are in the range: [-90, 90]. Values outside this range are
            clamped (rounded). For example, the value 100 would become 90, and the
            value -100 would become -90.
            </remarks></member>
        <member name="F:Google.Maps.Coord.LatLng._Lat">
            <summary>
            Serializable Latitude field exposed to the Unity inspector. Its value can be accessed
            programmatically through <see cref="P:Google.Maps.Coord.LatLng.Lat" />.
            </summary></member>
        <member name="P:Google.Maps.Coord.LatLng.Lng">
            <summary>
            The longitude value.
            </summary>
            <remarks>
            Valid values are in the closed interval: [-180, 180]. Values outside
            this range are wrapped. For example, the value -190 would become 170,
            and the value 190 would become -170. This is because longitudes wrap
            around the globe. Both -180 and 180 are allowed (they both correspond to
            the Antimeridian).
            </remarks></member>
        <member name="F:Google.Maps.Coord.LatLng._Lng">
            <summary>
            Serializable Latitude field exposed to the Unity inspector. Its value can be accessed
            programmatically through <see cref="P:Google.Maps.Coord.LatLng.Lng" />.
            </summary></member>
        <member name="F:Google.Maps.Coord.LatLng.Epsilon">
            <summary>
            Epsilon value for equality testing (when comparing individual Lat or Lng double values).
            </summary></member>
        <member name="M:Google.Maps.Coord.LatLng.#ctor(System.Double,System.Double)">
            <summary>
            The `%LatLng` constructor.
            </summary></member>
        <member name="M:Google.Maps.Coord.LatLng.ConstrainLatLng">
            <summary>
            Constrains <see cref="F:Google.Maps.Coord.LatLng._Lat" /> and <see cref="F:Google.Maps.Coord.LatLng._Lng" /> within the appropriate bounds.
            <see cref="F:Google.Maps.Coord.LatLng._Lat" /> is clamped to [-90, 90], and <see cref="F:Google.Maps.Coord.LatLng._Lng" /> is wrapped to
            [-180, 180].
            </summary></member>
        <member name="M:Google.Maps.Coord.LatLng.ToString">
            <summary>
            Returns the formatted string representation of this `%LatLng`.
            </summary></member>
        <member name="M:Google.Maps.Coord.LatLng.Equals(Google.Maps.Coord.LatLng)">
            <summary>
            Implements the <see cref="T:System.IEquatable`1" /> interface.
            </summary>
            <param name="other">A `LatLng` object to compare with this one.</param>
            <returns>Indicates whether the specified `LatLng` is equal to this
            `LatLng`.</returns></member>
        <member name="M:Google.Maps.Coord.LatLng.Equals(System.Object)">
            <summary>
            Overrides the `%Equals()` method.
            </summary></member>
        <member name="M:Google.Maps.Coord.LatLng.GetHashCode">
            <summary>
            Overrides the `%GetHashCode()` method.
            </summary></member>
        <member name="M:Google.Maps.Coord.LatLng.OnBeforeSerialize">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Coord.LatLng.OnAfterDeserialize">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Coord.Mercator">
            <summary>
            Implementation of the Spherical Mercator Projection, also known as the "Web Mercator"
            projection (see https://en.wikipedia.org/wiki/Web_Mercator).
            </summary>
            <remarks>
            Mercator space is finite in width (x) but infinite in height (y). "x" corresponds to longitude
            (in radians), while "y" is a function of latitude and spans an infinite range. As "y" gets
            larger, points get closer to the north pole but never quite reach it. The north and south
            poles have infinite "y" values.
            </remarks></member>
        <member name="F:Google.Maps.Coord.Mercator.MinX">
            <summary>
            Minimum X value in Mercator space.
            </summary></member>
        <member name="F:Google.Maps.Coord.Mercator.MaxX">
            <summary>
            Maximum X value in Mercator space.
            </summary></member>
        <member name="F:Google.Maps.Coord.Mercator.MinY">
            <summary>
            Minimum Y value in Mercator space.
            </summary></member>
        <member name="F:Google.Maps.Coord.Mercator.MaxY">
            <summary>
            Maximum Y value in Mercator space.
            </summary></member>
        <member name="M:Google.Maps.Coord.Mercator.FromLatLng(Google.Maps.Coord.LatLng)">
            <summary>
            Projects a LatLng value into Mercator space.
            </summary>
            <param name="latLng">The LatLng value to project.</param>
            <returns>The projected value, in Mercator space.</returns></member>
        <member name="M:Google.Maps.Coord.Mercator.FromVector2D(Google.Maps.Coord.Vector2D)">
            <summary>
            Reverses a Mercator projection back into LatLng space. Inverse of <see cref="M:Google.Maps.Coord.Mercator.FromLatLng(Google.Maps.Coord.LatLng)" />.
            </summary>
            <param name="vector2D">The Mercator projection value.</param>
            <returns>The LatLng value.</returns></member>
        <member name="T:Google.Maps.Coord.MercatorTileCoords">
            <summary>
            An immutable representation of the x,y coordinates of a %Google %Maps
            tile.
            </summary>
            <remarks>
            For more information, see
            <a href="/maps/documentation/javascript/coordinates">
            Map and Tile Coordinates</a>.
            </remarks></member>
        <member name="F:Google.Maps.Coord.MercatorTileCoords.X">
            <summary>The x coordinate.</summary>
            <remarks>
            This value is returned by the `MaxValue()` method.
            The X coordinates wrap. For more information, see
            <a href="/maps/documentation/javascript/coordinates">
            Map and Tile Coordinates</a>.
            </remarks></member>
        <member name="F:Google.Maps.Coord.MercatorTileCoords.Y">
            <summary>The y coordinate.</summary>
            <remarks>
            The Y coordinates are clamped. For more information, see
            <a href="/maps/documentation/javascript/coordinates">
            Map and Tile Coordinates</a>.
            </remarks></member>
        <member name="F:Google.Maps.Coord.MercatorTileCoords.Zoom">
            <summary>The zoom level.</summary></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>The `%TileCoord` constructor.</summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="zoom">The zoom level.</param>
            <param name="normalize">
            If this parameter is true, then the x coordinate is wrapped, and the y
            coordinate is clamped to the extent of the tile coordinate space at this
            zoom level.
            </param></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.MaxValue(System.Int32)">
            <summary>Maximum allowed tile coord value (same for both x and y).</summary>
            <param name="zoom">Zoom</param>
            <returns>Max value.</returns></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.MinValue(System.Int32)">
            <summary>Minimum allowed tile coord value (same for both x and y).</summary>
            <param name="zoom">Zoom</param>
            <returns>Min value.</returns></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.Extent(System.Int32)">
            <summary>Size of TileCoord space along the x and y axes.</summary>
            <param name="zoom">Zoom</param>
            <returns>TileCoord extent.</returns></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.TileSize(System.Int32)">
            <summary>Size of a tile at the equator, in meters (same along the x and y axes).</summary>
            <param name="zoom">Zoom</param>
            <returns>Tile size.</returns></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.GetChildTileCoords(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Calculates all child tiles of tileCoord by subdividing it into four corresponding
            <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s  of the next incrementing zoom level.
            </summary>
            <remarks>
            Note: One <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> of zoom level i is comprised of four
            <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s of zoom level (i+1).
            The relationship between tileCoord and its child tiles:
            Before subdivision:
            -----------------
            |                 |
            |                 |
            |                 |
            |      x, y       |
            |                 |
            |                 |
            |                 |
            -----------------
            After subdividing into its child tiles:
            -------- --------
            |        |        |
            |   2x,  | 2x + 1,|
            |   2y   |   2y   |
            -------- --------
            |        |        |
            |   2x,  | 2x + 1,|
            | 2y + 1 | 2y + 1 |
            -------- --------
            </remarks>
            <param name="mercatorTileCoords">Tile Coordinates.</param>
            <returns>List of tileCoord's child tiles.</returns></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.IsAncestorOf(Google.Maps.Coord.MercatorTileCoords)">
            <summary>Returns whether this tile is an ancestor of another.</summary>
            <remarks>A tile is trivially considered to be an ancestor of itself.</remarks>
            <param name="descendant">Descendant tile coord.</param></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.AncestorAtZoom(System.Int32)">
            <summary>Returns this tile's ancestor at the specified zoom level.</summary>
            <param name="zoom">
            Zoom level of the ancestor. Must be less than or equal to <see cref="F:Google.Maps.Coord.MercatorTileCoords.Zoom" />.
            </param></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.Parent">
            <summary>Returns this tile's parent.</summary></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.West(Google.Maps.Coord.MercatorTileCoords@,System.Boolean)">
            <summary>
            Produces the <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to the immediate west of this tile
            coordinate. Returns true if the coordinate to the west falls within the valid bounds of the
            tile coordinate space before any optional wrapping is applied. False if not.
            </summary>
            <param name="west">
            This parameter is filled with the tile coordinate to the immediate west of this one.
            </param>
            <param name="normalize">Whether the returned coordinate should be normalized.</param></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.East(Google.Maps.Coord.MercatorTileCoords@,System.Boolean)">
            <summary>
            Produces the <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to the immediate east of this tile
            coordinate. Returns true if the coordinate to the east falls within the valid bounds of the
            tile coordinate space before any optional wrapping is applied. False if not.
            </summary>
            <param name="east">
            This parameter is filled with the tile coordinate to the immediate east of this one.
            </param>
            <param name="normalize">Whether the returned coordinate should be normalized.</param></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.North(Google.Maps.Coord.MercatorTileCoords@,System.Boolean)">
            <summary>
            Produces the <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to the immediate north of this tile
            coordinate. Returns true if the coordinate to the north falls within the valid bounds of
            the tile coordinate space before any optional wrapping is applied. False if not.
            </summary>
            <param name="north">
            This parameter is filled with the tile coordinate to the immediate north of this one.
            </param>
            <param name="normalize">Whether the returned coordinate should be normalized.</param></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.South(Google.Maps.Coord.MercatorTileCoords@,System.Boolean)">
            <summary>
            Produces the <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to the immediate south of this tile
            coordinate. Returns true if the coordinate to the south falls within the valid bounds of
            the tile coordinate space before any optional wrapping is applied. False if not.
            </summary>
            <param name="south">
            This parameter is filled with the tile coordinate to the immediate south of this one.
            </param>
            <param name="normalize">Whether the returned coordinate should be normalized.</param></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.Offset(Google.Maps.Coord.MercatorTileCoords@,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Produces the <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> offset from this tile coordinate by the
            specified X and Y. Returns true if this coordinate falls within the valid bounds of the
            tile coordinate space before any optional wrapping is applied. False if not.
            </summary>
            <param name="offset">
            This parameter is filled with the tile coordinate whose position relative to this one is
            specified by xOffset and yOffset.
            </param>
            <param name="xOffset">
            The number of tiles to move to the east (negative for west, zero to stay in place).
            </param>
            <param name="yOffset">
            The number of tiles to move to the south (negative for north, zero to stay in place).
            </param>
            <param name="normalize">Whether the returned coordinate should be normalized.</param></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.Neighbors(System.Boolean)">
            <summary>
            Generates an array of coordinates for the tiles surrounding the supplied tile, accounting
            for boundaries, without wrapping.
            </summary>
            <param name="normalize">
            If true, neighbours on the other side of the anti-meridian will be included, otherwise only
            tiles on the same edge of the map will be returned.
            </param>
            <returns>The coordinates of neighboring tiles</returns></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.ToString">
            <summary>
            Returns the formatted string representation of this `%TileCoord`.
            </summary></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.Equals(Google.Maps.Coord.MercatorTileCoords)">
            <summary>Implements the <see cref="T:System.IEquatable`1" /> interface.</summary>
            <param name="other">The other `%TileCoord` to compare with this one.</param>
            <returns>A boolean value that indicates whether the specified
            `%TileCoord` and this one are equal.</returns></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.Equals(System.Object)">
            <summary>
            Overrides the `%Equals()` method.
            </summary>
            <param name="obj">The other object to compare with this `%TileCoord`.</param></member>
        <member name="M:Google.Maps.Coord.MercatorTileCoords.GetHashCode">
            <summary>
            Overrides the `%GetHashCode()` method.
            </summary></member>
        <member name="T:Google.Maps.Coord.TileLocalCoord">
            <summary>
            Static utility class for working with Tile-local Coordinates.
            </summary>
            <remarks>
            Tile-local coordinates are used by map tiles when encoding vertex geometry.
            </remarks></member>
        <member name="F:Google.Maps.Coord.TileLocalCoord.Extent">
            <summary>
            Size of TileLocalCoord space along the x and y axes.
            </summary></member>
        <member name="F:Google.Maps.Coord.TileLocalCoord.BuildingHeightResolution">
            <summary>
            The scaling factor used to convert raw building heights to tile-local coords.
            </summary>
            <remarks>
            Does not use VertexResolution as building heights are always in 1/16ths of a pixel.
            </remarks></member>
        <member name="T:Google.Maps.Coord.Vector2D">
            <summary>
            Immutable struct representing double-based (x,y) coordinates.
            </summary>
            <remarks>
            Equivalent to Unity's Vector2 struct (albeit much less full-featured), for situations where
            single-precision floating point arithmetic is insufficient (typically used for representing
            points in Earth-scale Mercator space, <see cref="T:Google.Maps.Coord.EarthMercator" />).
            The "D" stands for "double".
            </remarks></member>
        <member name="F:Google.Maps.Coord.Vector2D.X">
            <summary>
            The X value.
            </summary></member>
        <member name="F:Google.Maps.Coord.Vector2D.Y">
            <summary>
            The Y value.
            </summary></member>
        <member name="M:Google.Maps.Coord.Vector2D.#ctor(System.Double,System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="x">X value.</param>
            <param name="y">Y value.</param></member>
        <member name="M:Google.Maps.Coord.Vector2D.ToString">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Coord.Vector2D.Equals(Google.Maps.Coord.Vector2D)">
            <summary>
            Implements the <see cref="T:System.IEquatable`1" /> interface.
            </summary>
            <param name="other">The other object to compare against.</param>
            <returns>Whether the objects are equal.</returns></member>
        <member name="M:Google.Maps.Coord.Vector2D.Equals(System.Object)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Coord.Vector2D.GetHashCode">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Coord.Vector2D.op_Multiply(Google.Maps.Coord.Vector2D,System.Double)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Coord.Vector2D.op_Division(Google.Maps.Coord.Vector2D,System.Double)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Coord.Vector2D.op_Subtraction(Google.Maps.Coord.Vector2D,Google.Maps.Coord.Vector2D)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Coord.Vector2D.op_Addition(Google.Maps.Coord.Vector2D,Google.Maps.Coord.Vector2D)">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Coord.Vector2D.Zero">
            <summary>
            The zero vector.
            </summary></member>
        <member name="M:Google.Maps.Coord.Vector2D.Dot(Google.Maps.Coord.Vector2D,Google.Maps.Coord.Vector2D)">
            <summary>
            Calculates the dot product between two vectors.
            </summary>
            <param name="v1">A vector.</param>
            <param name="v2">Another vector.</param>
            <returns>Result of the dot product between the input vectors.</returns></member>
        <member name="M:Google.Maps.Coord.Vector2D.Normalize">
            <summary>
            Normalize a vector.
            </summary>
            <remarks>
            If the magnitude is too small the zero vector is returned to avoid underflow.
            </remarks></member>
        <member name="T:Google.Maps.CountryProvider">
            <summary>
            The superclass of scripts that determine the user's country.
            </summary></member>
        <member name="F:Google.Maps.CountryProvider.DefaultCountryCode">
            <summary>
            The fallback country code. Indicates that the user's country can not be
            determined.
            </summary></member>
        <member name="M:Google.Maps.CountryProvider.GetCountry">
            <inheritdoc /></member>
        <member name="M:Google.Maps.CountryProvider.GetCountryOrDefault(Google.Maps.TileLoading.ICountryProvider)">
            <summary>
            Gets the country code from a `CountryProvider`. If the provider is null,
            or if it returns a null or empty country, then this method returns
            <see cref="F:Google.Maps.CountryProvider.DefaultCountryCode" />.
            </summary>
            <param name="provider">The country provider.</param></member>
        <member name="T:Google.Maps.Event.DidCreateEventArgs`2">
            <summary>
            The base class for `DidCreate` event arguments.
            </summary></member>
        <member name="F:Google.Maps.Event.DidCreateEventArgs`2.MapFeature">
            <summary>
            The immutable <see cref="T:Google.Maps.Feature.MapFeature" /> that corresponds to the
            newly created game object. It contains all known type, geometry, and
            metadata information.
            </summary></member>
        <member name="F:Google.Maps.Event.DidCreateEventArgs`2.Style">
            <summary>
            The immutable <see cref="T:Google.Maps.Feature.Style.IStyle" /> that was applied during
            <see cref="T:UnityEngine.GameObject" /> creation.
            </summary></member>
        <member name="F:Google.Maps.Event.DidCreateEventArgs`2.GameObject">
            <summary>
            The newly created game object.
            </summary></member>
        <member name="M:Google.Maps.Event.DidCreateEventArgs`2.#ctor(`0,`1,UnityEngine.GameObject)">
            <summary>
            The `%DidCreateEventArgs` class constructor.
            </summary>
            <param name="mapFeature">The <see cref="T:Google.Maps.Feature.MapFeature" /> associated with the
            newly created GameObject.</param>
            <param name="style">The style applied during <see cref="T:UnityEngine.GameObject" />
            creation.</param>
            <param name="gameObject">The newly created <see cref="T:UnityEngine.GameObject" />.</param></member>
        <member name="T:Google.Maps.Event.DidCreateExtrudedStructureArgs">
            <summary>
            %Event arguments for <see cref="T:Google.Maps.Feature.ExtrudedStructure" />
            <see cref="F:Google.Maps.Event.ExtrudedStructureEvents.DidCreate" /> events.
            </summary></member>
        <member name="M:Google.Maps.Event.DidCreateExtrudedStructureArgs.#ctor(Google.Maps.Feature.ExtrudedStructure,Google.Maps.Feature.Style.ExtrudedStructureStyle,UnityEngine.GameObject)">
            <summary>
            The `%DidCreateExtrudedStructureArgs` class constructor.
            </summary></member>
        <member name="T:Google.Maps.Event.DidCreateModeledStructureArgs">
            <summary>
            %Event arguments for <see cref="T:Google.Maps.Feature.ModeledStructure" />
            <see cref="F:Google.Maps.Event.ModeledStructureEvents.DidCreate" /> events.
            </summary></member>
        <member name="M:Google.Maps.Event.DidCreateModeledStructureArgs.#ctor(Google.Maps.Feature.ModeledStructure,Google.Maps.Feature.Style.ModeledStructureStyle,UnityEngine.GameObject)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.DidCreateRegionArgs">
            <summary>
            %Event arguments for <see cref="T:Google.Maps.Feature.Region" />
            <see cref="F:Google.Maps.Event.RegionEvents.DidCreate" /> events.
            </summary></member>
        <member name="M:Google.Maps.Event.DidCreateRegionArgs.#ctor(Google.Maps.Feature.Region,Google.Maps.Feature.Style.RegionStyle,UnityEngine.GameObject)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.DidCreateAreaWaterArgs">
            <summary>
            %Event arguments for <see cref="T:Google.Maps.Feature.AreaWater" />
            <see cref="F:Google.Maps.Event.AreaWaterEvents.DidCreate" /> events.
            </summary></member>
        <member name="M:Google.Maps.Event.DidCreateAreaWaterArgs.#ctor(Google.Maps.Feature.AreaWater,Google.Maps.Feature.Style.AreaWaterStyle,UnityEngine.GameObject)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.DidCreateSegmentArgs">
            <summary>
            %Event arguments for <see cref="T:Google.Maps.Feature.Segment" />
            <see cref="F:Google.Maps.Event.SegmentEvents.DidCreate" /> events.
            </summary></member>
        <member name="M:Google.Maps.Event.DidCreateSegmentArgs.#ctor(Google.Maps.Feature.Segment,Google.Maps.Feature.Style.SegmentStyle,UnityEngine.GameObject)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.DidCreateLineWaterArgs">
            <summary>
            %Event arguments for <see cref="T:Google.Maps.Feature.LineWater" />
            <see cref="F:Google.Maps.Event.LineWaterEvents.DidCreate" /> events.
            </summary></member>
        <member name="M:Google.Maps.Event.DidCreateLineWaterArgs.#ctor(Google.Maps.Feature.LineWater,Google.Maps.Feature.Style.LineWaterStyle,UnityEngine.GameObject)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.DidCreateIntersectionArgs">
            <summary>
            Encapsulates event arguments for <see cref="T:Google.Maps.Feature.Segment" />
            <see cref="F:Google.Maps.Event.SegmentEvents.WillCreate" /> events.
            </summary></member>
        <member name="M:Google.Maps.Event.DidCreateIntersectionArgs.#ctor(Google.Maps.Unity.Intersections.IntersectionFeature,Google.Maps.Feature.Style.SegmentStyle,UnityEngine.GameObject)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.Events">
            <summary>
            Encapsulates the set of all events fired by the SDK.
            </summary>
            <remarks>
            %Events are part of a mechanism that allows you to style map feature
            <see cref="T:UnityEngine.GameObject" />s. They are fired from various stages of the map feature
            construction pipeline. The SDK fires `WillCreate` and `DidCreate`
            events whenever it constructs a <see cref="T:Google.Maps.Feature.MapFeature" /> and its
            corresponding <see cref="T:UnityEngine.GameObject" /> during map loading. These events
            contain geometry and metadata information that you can use to style map
            feature <see cref="T:UnityEngine.GameObject" />s.<br /><br />
            For more information, see
            [GameObject creation](/maps/documentation/gaming/tt/concepts_musk#gameobject_creation).
            </remarks></member>
        <member name="F:Google.Maps.Event.Events._ExtrudedStructureEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.ExtrudedStructureEvents" />.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.ExtrudedStructureEvents">
            <summary>
            <see cref="T:Google.Maps.Feature.ExtrudedStructure" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._ModeledStructureEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.ModeledStructureEvents" />.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.ModeledStructureEvents">
            <summary>
            <see cref="T:Google.Maps.Feature.ModeledStructure" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._SegmentEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.SegmentEvents" />.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.SegmentEvents">
            <summary>
            <see cref="T:Google.Maps.Feature.Segment" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._IntersectionEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.IntersectionEvents" />
            </summary></member>
        <member name="P:Google.Maps.Event.Events.IntersectionEvents">
            <summary>
            Events related to road intersections.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._RegionEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.RegionEvents" />.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.RegionEvents">
            <summary>
            <see cref="T:Google.Maps.Feature.Region" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._AreaWaterEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.AreaWaterEvents" />.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.AreaWaterEvents">
            <summary>
            <see cref="T:Google.Maps.Feature.AreaWater" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._LineWaterEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.LineWaterEvents" />.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.LineWaterEvents">
            <summary>
            <see cref="T:Google.Maps.Feature.LineWater" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._RoadLatticeEvents">
            <summary>
            Backing field for %RoadLatticeEvents.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.RoadLatticeEvents">
            <summary>
            Events relating to the <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" /> representing the road network of the
            currently loaded map.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._MapEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.MapEvents" />.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.MapEvents">
            <summary>
            %Events related to the entire map.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._MapFeatureEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.MapFeatureEvents" />.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.MapFeatureEvents">
            <summary>
            %Events related to individual map features.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._TerrainEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.TerrainEvents" />.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.TerrainEvents">
            <summary>
            %Events related to Terrain.
            </summary></member>
        <member name="F:Google.Maps.Event.Events._FloatingOriginEvents">
            <summary>
            Backing field for <see cref="T:Google.Maps.Event.FloatingOriginEvents" />.
            </summary></member>
        <member name="P:Google.Maps.Event.Events.FloatingOriginEvents">
            <summary>
            %Events related to the floating origin.
            </summary></member>
        <member name="T:Google.Maps.Event.WillCreateExtrudedStructureEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.ExtrudedStructure" /> WillCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.DidCreateExtrudedStructureEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.ExtrudedStructure" /> DidCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.ExtrudedStructureEvents">
            <summary>
            Encapsulates <see cref="T:Google.Maps.Feature.ExtrudedStructure" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.ExtrudedStructureEvents.WillCreate">
            <summary>
            Fired when the SDK is about to create an extruded structure
            <see cref="T:UnityEngine.GameObject" />.
            </summary>
            <remarks>
            <strong>Note:</strong> To prevent <see cref="T:Google.Maps.Feature.ExtrudedStructure" />
            <see cref="T:UnityEngine.GameObject" /> creation, set `WillCreateEventArgs&lt; TM,
            TS &gt;.Cancel` to *true*.
            </remarks></member>
        <member name="F:Google.Maps.Event.ExtrudedStructureEvents.DidCreate">
            <summary>
            Fired after creating an extruded structure <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="T:Google.Maps.Event.FloatingOriginMoveEvent">
            <inheritdoc cref="FloatingOriginMoveEvent" /></member>
        <member name="T:Google.Maps.Event.FloatingOriginEvents">
            <summary>
            A container for events relating to <see cref="T:Google.Maps.Feature.MapFeature" />s.
            </summary></member>
        <member name="F:Google.Maps.Event.FloatingOriginEvents.Move">
            <summary>
            An event that is triggered when the floating origin is moved. Supplied with
            an offset that can be applied to the position of objects to keep them in
            sync with the updated floating origin.
            </summary></member>
        <member name="T:Google.Maps.Event.FloatingOriginMoveArgs">
            <summary>
            Event arguments for <see cref="T:Google.Maps.Event.FloatingOriginMoveEvent" /> events.
            </summary></member>
        <member name="F:Google.Maps.Event.FloatingOriginMoveArgs.Offset">
            <summary>
            Offset by which to translate game objects to stay in sync with the new floating origin.
            </summary></member>
        <member name="M:Google.Maps.Event.FloatingOriginMoveArgs.#ctor(UnityEngine.Vector3)">
            <summary>
            Constructor.
            </summary>
            <param name="offset">
            Translation offset corresponding to the movement of the floating origin.
            </param></member>
        <member name="T:Google.Maps.Event.WillCreateIntersectionEvent">
            <summary>
            Encapsulates an <see cref="T:Google.Maps.Unity.Intersections.Intersection" /> WillCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.DidCreateIntersectionEvent">
            <summary>
            Encapsulates an <see cref="T:Google.Maps.Unity.Intersections.Intersection" /> DidCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.IntersectionEvents">
            <summary>
            Encapsulates <see cref="T:Google.Maps.Unity.Intersections.Intersection" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.IntersectionEvents.WillCreate">
            <summary>
            Fired when the SDK is about to begin constructing an <see cref="T:Google.Maps.Unity.Intersections.Intersection" />
            <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="F:Google.Maps.Event.IntersectionEvents.DidCreate">
            <summary>
            Fired when the SDK finishes constructing an <see cref="T:Google.Maps.Unity.Intersections.Intersection" />
            <see cref="T:UnityEngine.GameObject" />, and adding it to the %Unity scene.
            </summary></member>
        <member name="T:Google.Maps.Event.ListenerCountingUnityEvent`1">
            <summary>
            A subclass of UnityEvent that keeps track of the number of runtime-added event listeners.
            </summary>
            <typeparam name="T">The argument type used in callbacks.</typeparam></member>
        <member name="F:Google.Maps.Event.ListenerCountingUnityEvent`1.NonPersistentListenerCount">
            <summary>
            The total number of non-persistent event listeners.
            </summary></member>
        <member name="M:Google.Maps.Event.ListenerCountingUnityEvent`1.AddListener(UnityEngine.Events.UnityAction{`0})">
            <summary>
            Adds a listener.
            </summary>
            <param name="call">The callback.</param></member>
        <member name="M:Google.Maps.Event.ListenerCountingUnityEvent`1.RemoveListener(UnityEngine.Events.UnityAction{`0})">
            <summary>
            Removes a listener.
            </summary>
            <param name="call">The callback to remove.</param></member>
        <member name="M:Google.Maps.Event.ListenerCountingUnityEvent`1.GetTotalListenerCount">
            <summary>
            Gets the total number of listeners, including persistent ones.
            </summary></member>
        <member name="T:Google.Maps.Event.DidModifyRoadLatticeArgs">
            <summary>
            Encapsulates event arguments for DidModifyRoadLatticeEvent.
            </summary></member>
        <member name="F:Google.Maps.Event.DidModifyRoadLatticeArgs.RoadLattice">
            <summary>The RoadLattice.</summary></member>
        <member name="M:Google.Maps.Event.DidModifyRoadLatticeArgs.#ctor(Google.Maps.Unity.Intersections.RoadLattice)">
            <summary>Constructor.</summary>
            <param name="roadLattice">The current road lattice</param></member>
        <member name="T:Google.Maps.Event.DidModifyRoadLatticeEvent">
            <summary>
            Encapsulates a DidModifyRoadLattice event.
            </summary></member>
        <member name="T:Google.Maps.Event.RoadLatticeEvents">
            <summary>
            Encapsulates a collection of <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" /> events.
            </summary></member>
        <member name="F:Google.Maps.Event.RoadLatticeEvents.DidModify">
            <summary>
            Fired immediately after the current road lattice is modified due to the loading or unloading
            of part of the current map.
            </summary></member>
        <member name="T:Google.Maps.Event.WillCreateTerrainArgs">
            <summary>
            %Event arguments for Terrain DidCreate events.
            </summary></member>
        <member name="F:Google.Maps.Event.WillCreateTerrainArgs.Style">
            <summary>
            Style settings to be used to create <see cref="N:Google.Maps.Terrain" /> object.
            </summary></member>
        <member name="M:Google.Maps.Event.WillCreateTerrainArgs.#ctor(Google.Maps.Terrain.TerrainStyle)">
            <summary>
            Constructor.
            </summary>
            <param name="style">
            Style settings to be used to create <see cref="N:Google.Maps.Terrain" /> object.
            </param></member>
        <member name="T:Google.Maps.Event.DidCreateTerrainArgs">
            <summary>
            %Event arguments for Terrain DidCreate events.
            </summary></member>
        <member name="F:Google.Maps.Event.DidCreateTerrainArgs.Terrain">
            <summary>
            The <see cref="T:UnityEngine.Terrain" /> that was created.
            </summary>
            <remarks>
            Avoid storing a reference to this <see cref="T:UnityEngine.Terrain" /> object outside of the event
            handler. As part of map unloading, <see cref="T:UnityEngine.Terrain" /> tiles are destroyed as
            opposed to de-referenced and garbage collected, resulting in errors if a reference to this
            object is then accessed. This is a consequence of some Unity objects being backed by
            unmanaged native objects.
            </remarks></member>
        <member name="M:Google.Maps.Event.DidCreateTerrainArgs.#ctor(UnityEngine.Terrain)">
            <summary>
            Constructor.
            </summary>
            <param name="terrain">The <see cref="T:UnityEngine.Terrain" /> that was created.</param></member>
        <member name="T:Google.Maps.Event.WillCreateFeatureMaskTextureArgs">
            <summary>
            %Event arguments for WillCreateFeatureMaskTexture events.
            </summary></member>
        <member name="F:Google.Maps.Event.WillCreateFeatureMaskTextureArgs.FeatureMaskRenderTextureDescriptor">
            <summary>
            <see cref="T:UnityEngine.RenderTextureDescriptor" /> used for generating the <see cref="T:UnityEngine.RenderTexture" />
            into which the feature mask will be rendered using a <see cref="T:UnityEngine.Camera" />. Provided to the
            handler by the SDK.
            </summary></member>
        <member name="M:Google.Maps.Event.WillCreateFeatureMaskTextureArgs.#ctor(UnityEngine.RenderTextureDescriptor)">
            <summary>
            Constructor.
            </summary></member>
        <member name="T:Google.Maps.Event.FeatureMaskPreRenderArgs">
            <summary>
            %Event arguments for FeatureMaskPreRender events.
            </summary></member>
        <member name="F:Google.Maps.Event.FeatureMaskPreRenderArgs.FeatureMaskCamera">
            <summary>
            <see cref="T:UnityEngine.Camera" /> used to render the feature mask. Provided to the handler by the SDK.
            </summary></member>
        <member name="M:Google.Maps.Event.FeatureMaskPreRenderArgs.#ctor(UnityEngine.Camera)">
            <summary>
            Constructor.
            </summary></member>
        <member name="T:Google.Maps.Event.AlphaMapsNeedPaintArgs">
            <summary>
            %Event arguments for AlphaMapsNeedPaint events.
            </summary></member>
        <member name="F:Google.Maps.Event.AlphaMapsNeedPaintArgs.Terrain">
            <summary>
            <see cref="T:UnityEngine.Terrain" /> component whose alpha maps need painting. Provided to handler
            by the SDK.
            </summary></member>
        <member name="F:Google.Maps.Event.AlphaMapsNeedPaintArgs.FeatureMaskRenderTexture">
            <summary>
            <see cref="T:UnityEngine.RenderTexture" /> containing the feature mask. Provided to the handler by the
            SDK.
            </summary></member>
        <member name="F:Google.Maps.Event.AlphaMapsNeedPaintArgs.PaintingCoroutine">
            <summary>
            Coroutine to paint the alpha maps. Will be stepped to completion or until painting needs
            to be aborted. Should be initialized in the event handler by the user of the SDK.
            </summary></member>
        <member name="F:Google.Maps.Event.AlphaMapsNeedPaintArgs.RegisterFinalizer">
            <summary>
            Finalizer to be executed when either the coroutine has finished executing or painting is
            aborted. Should be used by the event handler and coroutine to ensure that any resources
            created for painting are cleaned up correctly.
            </summary></member>
        <member name="M:Google.Maps.Event.AlphaMapsNeedPaintArgs.#ctor(UnityEngine.Terrain,UnityEngine.RenderTexture,System.Action{System.Action})">
            <summary>
            Constructor.
            </summary></member>
        <member name="T:Google.Maps.Event.DidPaintTerrainArgs">
            <summary>
            %Event arguments for Terrain DidPaint events.
            </summary></member>
        <member name="F:Google.Maps.Event.DidPaintTerrainArgs.Terrain">
            <summary>
            The <see cref="T:UnityEngine.Terrain" /> that was painted.
            </summary>
            <remarks>
            Avoid storing a reference to this <see cref="T:UnityEngine.Terrain" /> object outside of the event
            handler. As part of map unloading, <see cref="T:UnityEngine.Terrain" /> tiles are destroyed as
            opposed to de-referenced and garbage collected, resulting in errors if a reference to this
            object is then accessed. This is a consequence of some Unity objects being backed by
            unmanaged native objects.
            </remarks></member>
        <member name="M:Google.Maps.Event.DidPaintTerrainArgs.#ctor(UnityEngine.Terrain)">
            <summary>
            Constructor.
            </summary>
            <param name="terrain">The <see cref="T:UnityEngine.Terrain" /> that was created.</param></member>
        <member name="T:Google.Maps.Event.WillCreateTerrainEvent">
            <summary>
            Encapsulates a <see cref="N:Google.Maps.Terrain" /> WillCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.DidCreateTerrainEvent">
            <summary>
            Encapsulates a <see cref="N:Google.Maps.Terrain" /> DidCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.FeatureMaskPreRenderEvent">
            <summary>
            Encapsulates a FeatureMaskPreRender event.
            </summary></member>
        <member name="T:Google.Maps.Event.WillCreateFeatureMaskTextureEvent">
            <summary>
            Encapsulates a WillCreateFeatureMaskTexture event.
            </summary></member>
        <member name="T:Google.Maps.Event.AlphaMapsNeedPaintEvent">
            <summary>
            Encapsulates a AlphaMapsNeedPaint event.
            </summary></member>
        <member name="T:Google.Maps.Event.DidPaintTerrainEvent">
            <summary>
            Encapsulates a <see cref="N:Google.Maps.Terrain" /> DidPaint event.
            </summary></member>
        <member name="T:Google.Maps.Event.TerrainEvents">
            <summary>
            Encapsulates a collection of <see cref="N:Google.Maps.Terrain" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.TerrainEvents.WillCreate">
            <summary>
            Fired before creating a <see cref="T:UnityEngine.Terrain" /> <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="F:Google.Maps.Event.TerrainEvents.DidCreate">
            <summary>
            Fired immediately after creating a <see cref="T:UnityEngine.Terrain" />
            <see cref="T:UnityEngine.GameObject" />..
            </summary></member>
        <member name="F:Google.Maps.Event.TerrainEvents.FeatureMaskPreRender">
            <summary>
            Fired immediately before the feature mask is rendered. Can be used to perform additional
            <see cref="T:UnityEngine.Camera" /> setup before rendering.
            </summary></member>
        <member name="F:Google.Maps.Event.TerrainEvents.WillCreateFeatureMaskTexture">
            <summary>
            Fired immediately before the creation of the <see cref="T:UnityEngine.RenderTexture" /> into
            which the feature mask will be rendered. Can be used to perform additional configuration
            of the <see cref="T:UnityEngine.RenderTexture" /> before the feature mask is rendered into it.
            </summary></member>
        <member name="F:Google.Maps.Event.TerrainEvents.AlphaMapsNeedPaint">
            <summary>
            Fired when a coroutine is needed to paint the alpha maps for a <see cref="T:UnityEngine.Terrain" />
            <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="F:Google.Maps.Event.TerrainEvents.DidPaint">
            <summary>
            Fired immediately after painting a <see cref="T:UnityEngine.Terrain" />
            <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="T:Google.Maps.Event.UnloadMapChunkArgs">
            <summary>
            Arguments for <see cref="T:Google.Maps.Event.UnloadMapChunkEvent" /> events.
            </summary></member>
        <member name="F:Google.Maps.Event.UnloadMapChunkArgs.ChunkId">
            <summary>
            Id of the chunk to unload.
            </summary></member>
        <member name="M:Google.Maps.Event.UnloadMapChunkArgs.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="chunkId">The id of the chunk to unload.</param></member>
        <member name="T:Google.Maps.Event.LoadMapChunkEvent">
            <summary>
            Event that is triggered after the collection of map features belonging to a chunk has
            been fetched <see cref="T:Google.Maps.MapsService" /> and is ready to be loaded into the game world (e.g.
            through the creation of game objects). The collection supersedes any collection previously
            loaded for the chunk. Chunks do not share features. The features belonging to a chunk may
            change over time. This event may be triggered multiple times for the same chunk without any
            intervening invocation of <see cref="T:Google.Maps.Event.UnloadMapChunkEvent" /> for that chunk.
            Chunks are distinguished by identifiers valid only with reference to a particular
            <see cref="T:Google.Maps.MapsService" /> instance.
            This event triggers in tandem with other map feature loading processes, e.g. the creation
            of gameplay objects, but there are no specific guarantees about their relative ordering
            or timing.
            This event can be used to create extra game objects or load other data structures derived
            from map features.
            </summary></member>
        <member name="T:Google.Maps.Event.UnloadMapChunkEvent">
            <summary>
            Event that is triggered when a chunk is ready to be unloaded from the game world. This can be
            used to destroy extra game objects or unload other data created using
            <see cref="T:Google.Maps.Event.LoadMapChunkEvent" />. This event may be triggered multiple times for the same
            chunk without any intervening invocation of <see cref="T:Google.Maps.Event.LoadMapChunkEvent" />.
            </summary></member>
        <member name="T:Google.Maps.Event.MapFeatureEvents">
            <summary>
            Events relating to <see cref="T:Google.Maps.Feature.MapFeature" />s.
            </summary></member>
        <member name="F:Google.Maps.Event.MapFeatureEvents.Load">
            <summary>
            See documentation for <see cref="T:Google.Maps.Event.LoadMapChunkEvent" />.
            </summary></member>
        <member name="F:Google.Maps.Event.MapFeatureEvents.Unload">
            <summary>
            See documentation for <see cref="T:Google.Maps.Event.UnloadMapChunkEvent" />.
            </summary></member>
        <member name="T:Google.Maps.Event.WillCreateLineWaterEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.LineWater" /> WillCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.DidCreateLineWaterEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.LineWater" /> DidCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.LineWaterEvents">
            <summary>
            Encapsulates <see cref="T:Google.Maps.Feature.LineWater" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.LineWaterEvents.WillCreate">
            <summary>
            Fired when the SDK is about to create a <see cref="T:UnityEngine.GameObject" /> from a
            <see cref="T:Google.Maps.Feature.LineWater" /> MapFeature.
            </summary>
            <remarks>
            <strong>Note:</strong> To prevent <see cref="T:Google.Maps.Feature.LineWater" />
            <see cref="T:UnityEngine.GameObject" /> creation, set `WillCreateEventArgs&lt; TM,
            TS &gt;.Cancel` to *true*.
            </remarks></member>
        <member name="F:Google.Maps.Event.LineWaterEvents.DidCreate">
            <summary>
            Fired immediately after creating a <see cref="T:Google.Maps.Feature.LineWater" />
            <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="T:Google.Maps.Event.MapLoadStartEvent">
            <summary>
            Encapsulates a map load start event (<see cref="F:Google.Maps.Event.MapEvents.LoadStart" />).
            </summary></member>
        <member name="T:Google.Maps.Event.MapLoadedEvent">
            <summary>
            Encapsulates a map loaded event (<see cref="F:Google.Maps.Event.MapEvents.Loaded" />).
            </summary></member>
        <member name="T:Google.Maps.Event.MapLoadErrorEvent">
            <summary>
            Encapsulates a map load error event (<see cref="F:Google.Maps.Event.MapEvents.LoadError" />).
            </summary></member>
        <member name="T:Google.Maps.Event.MapLoadProgressEvent">
            <summary>
            Encapsulates a map part loaded event (<see cref="F:Google.Maps.Event.MapEvents.Progress" />).
            </summary></member>
        <member name="T:Google.Maps.Event.MapEvents">
            <summary>
            Encapsulates the set of events related to fetching and loading the map.
            </summary></member>
        <member name="F:Google.Maps.Event.MapEvents.LoadStart">
            <summary>
            Fired immediately before a part of the map begins to load after calling
            <see cref="M:Google.Maps.MapsService.LoadMap(UnityEngine.Bounds,Google.Maps.GameObjectOptions)" />.
            </summary>
            <remarks>
            <para>
            If you call `LoadMap` more than once before earlier calls have finished
            loading (e.g., while quickly panning around the map), then the event is triggered only once.
            </para>
            <para>
            Be careful when loading or unloading map regions within this callback as this may cause
            infinite callback loops. To be safe, consider deferring additional loading until after the
            LoadStart event has completed.
            </para>
            </remarks></member>
        <member name="F:Google.Maps.Event.MapEvents.Loaded">
            <summary>
            Fired when all <see cref="T:Google.Maps.Feature.MapFeature" /> and <see cref="N:Google.Maps.Terrain" /> objects from calls
            to <see cref="M:Google.Maps.MapsService.LoadMap(UnityEngine.Bounds,Google.Maps.GameObjectOptions)" /> have been loaded.
            </summary>
            <remarks>
            If you call `LoadMap` with an area that has already been loaded, then it
            triggers the event immediately.
            <para>
            If you call `LoadMap` more than once before earlier calls have finished
            loading (e.g., while quickly panning around the map), then the event
            is triggered only onceâ€”after everything has loaded.
            </para>
            If there are errors while loading, then <see cref="F:Google.Maps.Event.MapLoadedArgs.Errors" /> will be non-zero,
            and some MapFeatures might not be ready. Call LoadMap again to retry.
            <para>
            Be careful when loading or unloading map regions within this callback as this may cause
            infinite callback loops. To be safe, consider deferring additional loading until after the
            Loaded event has completed.
            </para>
            </remarks></member>
        <member name="F:Google.Maps.Event.MapEvents.LoadError">
            <summary>
            Fired when part of the map fails to load.
            </summary>
            <remarks>
            You get fine-grained control over retry behavior by modifying the
            arguments to this event. For more information, see
            <see cref="T:Google.Maps.Event.MapLoadErrorArgs" />.
            </remarks></member>
        <member name="F:Google.Maps.Event.MapEvents.Progress">
            <summary>
            Fired whenever a part of the map finishes loading.
            </summary>
            <remarks>
            This event allows you to track map loading progress. So for example, you
            could use it to drive a progress bar.
            </remarks></member>
        <member name="M:Google.Maps.Event.MapEvents.InvokeLoadError(Google.Maps.Event.MapLoadErrorArgs)">
            <summary>
            Invokes <see cref="F:Google.Maps.Event.MapEvents.LoadError" />, or writes the error to the console if there is no error
            listener.
            </summary></member>
        <member name="T:Google.Maps.Event.ErrorArgs">
            <summary>
            The base class for error arguments.
            </summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.HttpResponseCode">
            <summary>
            The HTTP response code, or <em>0</em> if there was no HTTP response.
            </summary>
            <remarks>
            <strong>Note:</strong> This value can be 200 when the HTTP request
            succeeds, but contains unexpected content.
            </remarks></member>
        <member name="T:Google.Maps.Event.ErrorArgs.DetailedErrorEnum">
            <summary>Contains a set of values that specify additional error
            information.</summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.None">
            <summary>No additional error information.</summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.UnsupportedClientVersion">
            <summary>
            This version of the SDK is unsupported, possibly in combination with
            this API key. <strong>Note:</strong> You should provide an upgrade
            path and/or a new API key.
            </summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.ClientError">
            <summary>
            The request to the Semantic Tile API succeeded, but an error occurred on
            the client.
            </summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.NetworkError">
            <summary>
            An error occurred at the network level. The SDK did not receive a
            response from the Semantic Tile API.
            </summary>
            <remarks>
            Common causes are:
            <ul>
            <li>Loss of network connection. Consider checking
            <see cref="P:UnityEngine.Application.internetReachability" />.</li>
            <li>The request exceeded its deadline. Consider increasing
            <see cref="F:Google.Maps.Event.MapLoadErrorArgs.TimeoutSeconds" />.</li>
            </ul>
            </remarks></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.InvalidRequest">
            <summary>The request sent from the SDK to the Semantic Tile API was
            invalid.</summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.PermissionDenied">
            <summary>
            The API key does not have permission to make requests to the Semantic
            Tile API. Ensure the following:
            <ul>
            <li>The value of <see cref="F:Google.Maps.MapsService.ApiKey" /> is valid.</li>
            <li>The Semantic Tile API is enabled.</li>
            <li>A valid billing account is set up.</li>
            <li>The API key restrictions are met.</li>
            </ul>
            </summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.NotFound">
            <summary>
            Nothing exists at the URL that you used to query the Semantic Tile API.
            Verify the value of <see cref="F:Google.Maps.MapsService.FeatureTileApiUrlFormat" /> and
            <see cref="F:Google.Maps.MapsService.TerrainTileApiUrlFormat" />.
            </summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.OutOfQuota">
            <summary>You exceeded the quota for the Semantic Tile API.</summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.ServerError">
            <summary>An error occurred at the Semantic Tile API server.</summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.Unknown">
            <summary>
            An unknown error occurred. Check <see cref="F:Google.Maps.Event.ErrorArgs.Message" /> for
            further details.
            </summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.DetailedErrorCode">
            <summary>Additional information about the cause of the error.</summary></member>
        <member name="F:Google.Maps.Event.ErrorArgs.Message">
            <summary>Error message.</summary></member>
        <member name="M:Google.Maps.Event.ErrorArgs.#ctor(System.Int64,Google.Maps.Event.ErrorArgs.DetailedErrorEnum,System.String)">
            <summary>
            The `ErrorArgs` constructor. It includes the HTTP response code, along
            with the detailed error code and error message.
            </summary></member>
        <member name="M:Google.Maps.Event.ErrorArgs.#ctor(Google.Maps.Event.ErrorArgs.DetailedErrorEnum,System.String)">
            <summary>
            The `ErrorArgs` constructor. Use this constructor for client errors.
            I.e., when an HTTP request wasn't involved.
            </summary></member>
        <member name="M:Google.Maps.Event.ErrorArgs.HttpCodeToDetailedError(System.Int64)">
            <summary>
            Converts an HTTP response code to the corresponding
            <see cref="T:Google.Maps.Event.ErrorArgs.DetailedErrorEnum" />.
            </summary></member>
        <member name="M:Google.Maps.Event.ErrorArgs.ToString">
            <summary>
            A string representation of the error. This includes the detailed error
            code, the HTTP response code, and the error message.
            </summary></member>
        <member name="T:Google.Maps.Event.MapLoadStartArgs">
            <summary>
            Encapsulates arguments for <see cref="F:Google.Maps.Event.MapEvents.LoadStart" />.
            </summary></member>
        <member name="T:Google.Maps.Event.MapLoadedArgs">
            <summary>
            Encapsulates arguments for <see cref="F:Google.Maps.Event.MapEvents.Loaded" />.
            </summary></member>
        <member name="F:Google.Maps.Event.MapLoadedArgs.Errors">
            <summary>
            The number of network errors since the last `MapLoaded` event.
            </summary>
            <remarks>
            If this value is zero, then all <see cref="T:UnityEngine.GameObject" />s from calls to
            <see cref="M:Google.Maps.MapsService.LoadMap(UnityEngine.Bounds,Google.Maps.GameObjectOptions)" /> before this event are ready. If this
            value is non-zero, then there might be parts of the map that didn't load
            successfully. To retry, call <see cref="M:Google.Maps.MapsService.LoadMap(UnityEngine.Bounds,Google.Maps.GameObjectOptions)" /> again.
            </remarks></member>
        <member name="M:Google.Maps.Event.MapLoadedArgs.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="errors"><see cref="F:Google.Maps.Event.MapLoadedArgs.Errors" />.</param></member>
        <member name="T:Google.Maps.Event.MapLoadErrorArgs">
            <summary>
            Encapsulates the set of arguments for <see cref="F:Google.Maps.Event.MapEvents.LoadError" />.
            </summary>
            <remarks>
            When part of the map fails to load after a call to <see cref="M:Google.Maps.MapsService.LoadMap(UnityEngine.Bounds,Google.Maps.GameObjectOptions)" />,
            a <see cref="F:Google.Maps.Event.MapEvents.LoadError" /> event is fired before attempting to load it again.
            A listener can modify the fields of `MapLoadErrorArgs` to change whether
            it will retry, and if so, after what delay.
            The default behavior starts with a delay of <em>0.5</em> seconds with
            <em>1.0</em> jitter, doubling the delay with each attempt, up to
            <em>3</em> attempts.
            <h3>Recommendations</h3>
            <ul>
            <li>Handle <see cref="F:Google.Maps.Event.MapEvents.LoadError" /> events and log
            <see cref="M:Google.Maps.Event.ErrorArgs.ToString" /> to the console.</li>
            <li>On <see cref="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.UnsupportedClientVersion" />, notify
            the user that they must update the app.</li>
            <li>If requests regularly time-out (<see cref="F:Google.Maps.Event.ErrorArgs.DetailedErrorEnum.NetworkError" />
            with <see cref="F:Google.Maps.Event.ErrorArgs.Message" /> == "Request timeout"), then consider
            increasing <see cref="F:Google.Maps.MapsService.NetworkTimeoutSeconds" />.</li>
            <li>If requests time-out mainly on slow networks, consider increasing
            the number of retries instead (set <see cref="F:Google.Maps.Event.MapLoadErrorArgs.Retry" /> to <em>true</em> if
            <see cref="F:Google.Maps.Event.MapLoadErrorArgs.Attempts" /> &lt;= a value greater than <em>3</em>).</li>
            <li>Don't change <see cref="F:Google.Maps.Event.MapLoadErrorArgs.TimeoutSeconds" /> or <see cref="F:Google.Maps.Event.MapLoadErrorArgs.DelaySeconds" />.</li>
            </ul>
            <h3>Example</h3>
            </remarks>
            <example>
            <pre>
            <c>
            mapsService.Events.MapEvents.LoadError.AddListener(e =&gt; {
            if (e.DetailedErrorCode == DetailedErrorEnum.UnsupportedClientVersion) {
            log.Error("Update app to latest version");
            return;
            }<br />
            // Retry up to 5 attempts.
            e.Retry = e.Attempts &lt;= 5;<br />
            // Log to the console.
            if (e.Retry &amp;&amp; e.IsRetriable) {
            log.Warning(e);
            } else {
            log.Error(e);
            }
            });
            </c>
            </pre>
            </example></member>
        <member name="F:Google.Maps.Event.MapLoadErrorArgs.Attempts">
            <summary>
            The number of attempts at loading this part of the map.
            </summary></member>
        <member name="F:Google.Maps.Event.MapLoadErrorArgs.IsRetriable">
            <summary>Indicates whether the request can be retried.</summary></member>
        <member name="F:Google.Maps.Event.MapLoadErrorArgs.Retry">
            <summary>
            Indicates whether to retry loading this part of the map.
            </summary>
            <remarks>
            %Event listeners can modify this value to change the behavior.
            But it has no effect if <see cref="F:Google.Maps.Event.MapLoadErrorArgs.IsRetriable" /> is <em>true</em>.
            </remarks></member>
        <member name="F:Google.Maps.Event.MapLoadErrorArgs.TimeoutSeconds">
            <summary>
            The number of seconds to wait for the response from the server after sending the next
            request.
            </summary>
            <remarks>
            If set to <em>0</em>, the next attempts waits forever.
            </remarks></member>
        <member name="F:Google.Maps.Event.MapLoadErrorArgs.DelaySeconds">
            <summary>
            The length of time to wait before retrying.
            </summary>
            <remarks>
            %Event listeners can modify this value to change the behavior.
            </remarks></member>
        <member name="F:Google.Maps.Event.MapLoadErrorArgs.Coords">
            <summary>
            The <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> of the area that failed to load.
            </summary></member>
        <member name="M:Google.Maps.Event.MapLoadErrorArgs.#ctor(System.Int64,Google.Maps.Event.ErrorArgs.DetailedErrorEnum,System.String,System.Int32,System.Boolean,System.Boolean,System.Int32,System.Single,Google.Maps.Coord.MercatorTileCoords)">
            <summary>Constructor for `MapLoadErrorArgs`.</summary></member>
        <member name="M:Google.Maps.Event.MapLoadErrorArgs.#ctor(Google.Maps.Event.ErrorArgs.DetailedErrorEnum,System.String)">
            <summary>
            A constructor that takes only a <see cref="T:Google.Maps.Event.ErrorArgs.DetailedErrorEnum" />, and a
            message; and sets all other fields to their defaults. In particular,
            the error is not retriable, so all retry parameters (<see cref="F:Google.Maps.Event.MapLoadErrorArgs.TimeoutSeconds" />,
            <see cref="F:Google.Maps.Event.MapLoadErrorArgs.DelaySeconds" />) are ignored.
            </summary>
            <param name="detailedError">The detailed error code.</param>
            <param name="message">A string that contains the error message.</param></member>
        <member name="M:Google.Maps.Event.MapLoadErrorArgs.GetBounds(Google.Maps.Coord.Projection)">
            <summary>Gets the bounds of the area that failed to load.</summary>
            <param name="projection">
            The coordinate system of the <see cref="T:Google.Maps.MapsService" /> (<see cref="T:Google.Maps.Coord.Projection" />).
            </param></member>
        <member name="T:Google.Maps.Event.MapLoadProgressArgs">
            <summary>
            Arguments for <see cref="F:Google.Maps.Event.MapEvents.Progress" />.
            </summary></member>
        <member name="F:Google.Maps.Event.MapLoadProgressArgs.Progress">
            <summary>
            The progress of requested areas that have finished loading, between
            <em>0</em> and <em>1</em>.
            </summary>
            <remarks>
            This value can go down in subsequent events if more areas are requested.
            </remarks></member>
        <member name="F:Google.Maps.Event.MapLoadProgressArgs.TileCoords">
            <summary>
            The <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s of tiles that finished loading since the last
            <see cref="F:Google.Maps.Event.MapEvents.Progress" /> event was fired.
            </summary></member>
        <member name="M:Google.Maps.Event.MapLoadProgressArgs.#ctor(System.Single,Google.Maps.Coord.MercatorTileCoords[])">
            <summary>
            Constructor.
            </summary>
            <param name="progress"><see cref="F:Google.Maps.Event.MapLoadProgressArgs.Progress" /></param>
            <param name="coords">
            The list of <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s of the areas that finished loading.
            </param></member>
        <member name="M:Google.Maps.Event.MapLoadProgressArgs.GetBounds(Google.Maps.Coord.Projection)">
            <summary>
            Gets an array of the bounds of the areas that were loaded successfully
            since the last <see cref="F:Google.Maps.Event.MapEvents.Progress" /> event was fired.
            </summary>
            <param name="projection">
            The coordinate system of the <see cref="T:Google.Maps.MapsService" /> (Coord.Coords`).
            </param></member>
        <member name="T:Google.Maps.Event.WillCreateModeledStructureEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.ModeledStructure" /> WillCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.DidCreateModeledStructureEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.ModeledStructure" /> DidCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.ModeledStructureEvents">
            <summary>
            Encapsulates a collection of <see cref="T:Google.Maps.Feature.ModeledStructure" />
            construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.ModeledStructureEvents.WillCreate">
            <summary>
            Fired when the SDK is about to create a modeled structure
            <see cref="T:UnityEngine.GameObject" />.
            </summary>
            <remarks>
            To prevent object creation, set `WillCreateModeledStructureArgs.Cancel`
            to <em>true</em>.
            </remarks></member>
        <member name="F:Google.Maps.Event.ModeledStructureEvents.DidCreate">
            <summary>
            Fired immediately after creating a modeled structure <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="T:Google.Maps.Event.WillCreateRegionEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.Region" /> WillCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.DidCreateRegionEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.Region" /> DidCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.RegionEvents">
            <summary>
            Encapsulates a collection of <see cref="T:Google.Maps.Feature.Region" /> construction
            pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.RegionEvents.WillCreate">
            <summary>
            Fired when the SDK is about to create a region <see cref="T:UnityEngine.GameObject" />.
            </summary>
            <remarks>
            To prevent object creation, set `WillCreateRegionArgs.Cancel`
            to <em>true</em>.
            </remarks></member>
        <member name="F:Google.Maps.Event.RegionEvents.DidCreate">
            <summary>
            Fired immediately after creating a region <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="T:Google.Maps.Event.WillCreateSegmentEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.Segment" /> WillCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.DidCreateSegmentEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.Segment" /> DidCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.SegmentEvents">
            <summary>
            Encapsulates a collection of <see cref="T:Google.Maps.Feature.Segment" /> construction
            pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.SegmentEvents.WillCreate">
            <summary>
            Fired when the SDK is about to create a segment <see cref="T:UnityEngine.GameObject" />.
            </summary>
            <remarks>
            To prevent object creation, set `WillCreateSegmentArgs.Cancel`
            to <em>true</em>.
            </remarks></member>
        <member name="F:Google.Maps.Event.SegmentEvents.DidCreate">
            <summary>
            Fired immediately after creating a segment <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="T:Google.Maps.Event.WillCreateAreaWaterEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.AreaWater" /> WillCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.DidCreateAreaWaterEvent">
            <summary>
            Encapsulates a <see cref="T:Google.Maps.Feature.AreaWater" /> DidCreate event.
            </summary></member>
        <member name="T:Google.Maps.Event.AreaWaterEvents">
            <summary>
            Encapsulates <see cref="T:Google.Maps.Feature.AreaWater" /> construction pipeline events.
            </summary></member>
        <member name="F:Google.Maps.Event.AreaWaterEvents.WillCreate">
            <summary>
            Fired when the SDK is about to begin constructing a <see cref="T:Google.Maps.Feature.AreaWater" />
            <see cref="T:UnityEngine.GameObject" />.
            </summary>
            <remarks>
            <strong>Note:</strong> To prevent <see cref="T:Google.Maps.Feature.AreaWater" />
            <see cref="T:UnityEngine.GameObject" /> creation, set `WillCreateAreaWaterArgs.Cancel`
            to <em>true</em>.
            </remarks></member>
        <member name="F:Google.Maps.Event.AreaWaterEvents.DidCreate">
            <summary>
            Fired when the SDK finishes constructing a <see cref="T:Google.Maps.Feature.AreaWater" />
            <see cref="T:UnityEngine.GameObject" />, and adding it to the %Unity scene.
            </summary></member>
        <member name="T:Google.Maps.Event.WillCreateEventArgs`2">
            <summary>
            The base class for `WillCreate` event arguments.
            </summary></member>
        <member name="F:Google.Maps.Event.WillCreateEventArgs`2.MapFeature">
            <summary>
            An immutable <see cref="T:Google.Maps.Feature.MapFeature" /> that corresponds to the
            <see cref="T:UnityEngine.GameObject" /> being created.
            </summary>
            <remarks>
            Contains all known type, geometry, and metadata information.
            </remarks></member>
        <member name="F:Google.Maps.Event.WillCreateEventArgs`2.Style">
            <summary>
            An immutable <see cref="N:Google.Maps.Feature.Style" /> that will be applied during
            <see cref="T:UnityEngine.GameObject" /> creation.
            </summary>
            <remarks>
            To change styles, create a new <see cref="T:Google.Maps.Feature.Style.IStyle" />
            instance, and assign it to this property.
            </remarks></member>
        <member name="F:Google.Maps.Event.WillCreateEventArgs`2.Cancel">
            <summary>
            Determines whether to prevent <see cref="T:UnityEngine.GameObject" /> creation for this
            map feature.
            </summary></member>
        <member name="F:Google.Maps.Event.WillCreateEventArgs`2.StaticBatchingPolicy">
            <summary>
            Determines whether to generate the resulting <see cref="T:UnityEngine.GameObject" /> as static.
            Static <see cref="T:UnityEngine.GameObject" />s that share the same material can be batched
            together to save draw calls, but they cannot be transformed. For more
            information, see
            [Draw call batching](https://docs.unity3d.com/Manual/DrawCallBatching.html).
            </summary></member>
        <member name="M:Google.Maps.Event.WillCreateEventArgs`2.#ctor(`0,`1)">
            <summary>
            The `%WillCreateEventArgs` class constructor.
            </summary>
            <param name="mapFeature">The `MapFeature` associated with this
            <see cref="T:UnityEngine.GameObject" />.</param>
            <param name="style">The `Style` that is about to be applied to the
            <see cref="T:UnityEngine.GameObject" />.</param></member>
        <member name="T:Google.Maps.Event.WillCreateExtrudedStructureArgs">
            <summary>
            Encapsulates event arguments for <see cref="T:Google.Maps.Feature.ExtrudedStructure" />
            `WillCreate events.
            </summary>
            <remarks>See <see cref="F:Google.Maps.Event.ExtrudedStructureEvents.WillCreate" /></remarks></member>
        <member name="M:Google.Maps.Event.WillCreateExtrudedStructureArgs.#ctor(Google.Maps.Feature.ExtrudedStructure,Google.Maps.Feature.Style.ExtrudedStructureStyle)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.WillCreateModeledStructureArgs">
            <summary>
            Encapsulates event arguments for <see cref="T:Google.Maps.Feature.ModeledStructure" />
            WillCreate events.
            </summary>
            <remarks>See <see cref="F:Google.Maps.Event.ModeledStructureEvents.WillCreate" /></remarks></member>
        <member name="M:Google.Maps.Event.WillCreateModeledStructureArgs.#ctor(Google.Maps.Feature.ModeledStructure,Google.Maps.Feature.Style.ModeledStructureStyle)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.WillCreateRegionArgs">
            <summary>
            Encapsulates event arguments for <see cref="T:Google.Maps.Feature.Region" /> WillCreate
            events.
            </summary>
            <remarks>See <see cref="F:Google.Maps.Event.RegionEvents.WillCreate" /></remarks></member>
        <member name="M:Google.Maps.Event.WillCreateRegionArgs.#ctor(Google.Maps.Feature.Region,Google.Maps.Feature.Style.RegionStyle)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.WillCreateAreaWaterArgs">
            <summary>
            Encapsulates event arguments for <see cref="T:Google.Maps.Feature.AreaWater" />
            WillCreate events.
            </summary>
            <remarks>See <see cref="F:Google.Maps.Event.AreaWaterEvents.WillCreate" /></remarks></member>
        <member name="M:Google.Maps.Event.WillCreateAreaWaterArgs.#ctor(Google.Maps.Feature.AreaWater,Google.Maps.Feature.Style.AreaWaterStyle)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.WillCreateSegmentArgs">
            <summary>
            Encapsulates event arguments for <see cref="T:Google.Maps.Feature.Segment" />
            WillCreate events.
            </summary>
            <remarks>See <see cref="F:Google.Maps.Event.SegmentEvents.WillCreate" /></remarks></member>
        <member name="M:Google.Maps.Event.WillCreateSegmentArgs.#ctor(Google.Maps.Feature.Segment,Google.Maps.Feature.Style.SegmentStyle)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.WillCreateLineWaterArgs">
            <summary>
            Encapsulates event arguments for <see cref="T:Google.Maps.Feature.LineWater" />
            WillCreate events.
            </summary>
            <remarks>See <see cref="F:Google.Maps.Event.LineWaterEvents.WillCreate" /></remarks></member>
        <member name="M:Google.Maps.Event.WillCreateLineWaterArgs.#ctor(Google.Maps.Feature.LineWater,Google.Maps.Feature.Style.LineWaterStyle)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.WillCreateIntersectionArgs">
            <summary>
            Encapsulates event arguments for <see cref="T:Google.Maps.Unity.Intersections.IntersectionFeature" />
            WillCreate events.
            </summary>
            <remarks>See <see cref="F:Google.Maps.Event.IntersectionEvents.WillCreate" /></remarks></member>
        <member name="M:Google.Maps.Event.WillCreateIntersectionArgs.#ctor(Google.Maps.Unity.Intersections.IntersectionFeature,Google.Maps.Feature.Style.SegmentStyle)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Event.LoadMapChunkArgs">
            <summary>
            Arguments for <see cref="T:Google.Maps.Event.LoadMapChunkEvent" /> events.
            </summary></member>
        <member name="F:Google.Maps.Event.LoadMapChunkArgs.ChunkId">
            <summary>
            The id of the chunk these features belong to. Features are always unloaded by chunk id.
            </summary></member>
        <member name="F:Google.Maps.Event.LoadMapChunkArgs.MapFeatures">
            <summary>
            The features to load. The <see cref="T:Google.Maps.Feature.MapFeature" /> instances are not guaranteed to remain
            valid or retain a coherent identity outside the lifetime of the call to the event handler.
            The same <see cref="T:Google.Maps.Feature.MapFeature" /> instance must occur only once in each event.
            </summary></member>
        <member name="M:Google.Maps.Event.LoadMapChunkArgs.#ctor(System.Object,System.Collections.Generic.IEnumerable{Google.Maps.Feature.MapFeature})">
            <summary>
            Constructor.
            </summary>
            <param name="chunkId">The id of the chunk to which the features belong.</param>
            <param name="mapFeatures">The features to load.</param></member>
        <member name="T:Google.Maps.Exception.MapsException">
            <summary>
            The base class for %Google.Maps exceptions.
            </summary></member>
        <member name="M:Google.Maps.Exception.MapsException.#ctor">
            <summary>
            The `%MapsException` class default constructor.
            </summary></member>
        <member name="M:Google.Maps.Exception.MapsException.#ctor(System.String)">
            <summary>
            The `%MapsException` class constructor that takes a message string.
            </summary></member>
        <member name="M:Google.Maps.Exception.MapsException.#ctor(System.String,System.Exception)">
            <summary>
            The `%MapsException` class constructor that takes a message string and an inner exception.
            </summary></member>
        <member name="T:Google.Maps.Exception.FloatingOriginNotSetException">
            <summary>
            Thrown when you use <see cref="T:Google.Maps.Coord.Projection" /> prior to setting the
            origin.
            </summary></member>
        <member name="M:Google.Maps.Exception.FloatingOriginNotSetException.#ctor">
            <summary>
            The `%FloatingOriginNotSetException` class constructor.
            </summary></member>
        <member name="T:Google.Maps.Exception.MapsServiceNotInitializedException">
            <summary>
            Exception thrown when attempting to use an un-initialized <see cref="T:Google.Maps.MapsService" />.
            </summary></member>
        <member name="M:Google.Maps.Exception.MapsServiceNotInitializedException.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="T:Google.Maps.Exception.ShaderNotFoundException">
            <summary>
            The exception that is thrown when a shader could not be found.
            </summary></member>
        <member name="M:Google.Maps.Exception.ShaderNotFoundException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary></member>
        <member name="T:Google.Maps.Exception.TileParsingException">
            <summary>
            Thrown when a tile from the network can't be parsed.
            </summary></member>
        <member name="M:Google.Maps.Exception.TileParsingException.#ctor(Google.Maps.Coord.MercatorTileCoords,System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="coords">The coordinates of the tile being parsed.</param>
            <param name="requestOptions">The options used for requesting tiles from tile server.</param>
            <param name="exception">The exception happened during tile parsing.</param></member>
        <member name="T:Google.Maps.Exception.UnhandledException">
            <summary>
            An unexpected exception thrown within the SDK. This includes exceptions thrown by user code
            that is run within the SDK (e.g. through a delegate).
            You can access the original exception object through
            <see cref="P:System.Exception.InnerException" />.
            </summary></member>
        <member name="M:Google.Maps.Exception.UnhandledException.#ctor(System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="innerException">The exception that was not handled.</param></member>
        <member name="T:Google.Maps.FakeDiagnosableService">
            <summary>
            A class that can have diagnostics enabled or disabled.
            </summary></member>
        <member name="P:Google.Maps.FakeDiagnosableService.DiagnosticsEnabled">
            <summary>
            Whether diagnostics are enabled.
            </summary></member>
        <member name="T:Google.Maps.Feature.AreaWater">
            <summary>
            A <see cref="T:Google.Maps.Feature.MapFeature" /> that represents a 2D body of water.
            For example, a lake.
            </summary></member>
        <member name="P:Google.Maps.Feature.AreaWater.DefaultGameObjectName">
            <summary>
            The default name to use for the associated GameObject.
            </summary>
            <remarks>
            This name is used when the <see cref="T:Google.Maps.Feature.MapFeatureMetadata" /> does not
            have an explicit display name.
            </remarks></member>
        <member name="M:Google.Maps.Feature.AreaWater.GetShape">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Feature.AreaWater.Shape">
            <summary>
            A geometric representation of the Water.
            </summary></member>
        <member name="P:Google.Maps.Feature.AreaWater.Metadata">
            <summary>
            The feature metadata as a <see cref="T:Google.Maps.Feature.WaterMetadata" />
            </summary></member>
        <member name="M:Google.Maps.Feature.AreaWater.#ctor(Google.Maps.Feature.Shape.Area,Google.Maps.Coord.MercatorTileCoords,Google.Maps.Feature.WaterMetadata)">
            <summary>
            The %AreaWater calss constructor.
            </summary>
            <param name="shape">A geometric representation of the Water.</param>
            <param name="mercatorTileCoords">
            The coordinates of the tile containing this feature.
            </param>
            <param name="metadata">Associated metadata.</param></member>
        <member name="T:Google.Maps.Feature.ExtrudedStructure">
            <summary>
            A <see cref="T:Google.Maps.Feature.MapFeature" /> that represents an extruded structure.
            </summary>
            <remarks>
            For example, a building extruded from footprint and height data.
            Backed by <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea" /> shape geometry.
            </remarks></member>
        <member name="P:Google.Maps.Feature.ExtrudedStructure.DefaultGameObjectName">
            <summary>
            The default name to use for the associated GameObject.
            </summary>
            <remarks>
            This name is used when the <see cref="T:Google.Maps.Feature.MapFeatureMetadata" /> doesn't
            have an explicit display name.
            </remarks></member>
        <member name="M:Google.Maps.Feature.ExtrudedStructure.GetShape">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.ExtrudedStructure.TranslateOrigin(UnityEngine.Vector2)">
            <summary>
            Translates this <see cref="T:Google.Maps.Feature.ExtrudedStructure" /> by the given offset.
            </summary>
            <param name="offset">The relative offset by which to translate the origin.</param></member>
        <member name="F:Google.Maps.Feature.ExtrudedStructure.Shape">
            <summary>
            A geometric representation of the %ExtrudedStructure.
            </summary></member>
        <member name="P:Google.Maps.Feature.ExtrudedStructure.Metadata">
            <summary>
            The feature metadata as a <see cref="T:Google.Maps.Feature.StructureMetadata" />.
            </summary></member>
        <member name="M:Google.Maps.Feature.ExtrudedStructure.#ctor(Google.Maps.Feature.Shape.ExtrudedArea,Google.Maps.Coord.MercatorTileCoords,Google.Maps.Feature.StructureMetadata)">
            <summary>
            The %ExtrudedStructure class constructor.
            </summary>
            <param name="shape">A geometric representation of the Structure.</param>
            <param name="mercatorTileCoords">
            The coordinates of the tile containing this feature.
            </param>
            <param name="metadata">Associated metadata.</param></member>
        <member name="M:Google.Maps.Feature.ExtrudedStructure.ToString">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Feature.IntersectionMetadata">
            <summary>
            Unity-independent representation of immutable properties of an intersection feature.
            </summary></member>
        <member name="M:Google.Maps.Feature.IntersectionMetadata.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="placeId">The <see cref="T:Google.Maps.Unity.Intersections.Intersection" />'s pseudo-place ID.</param>
            <param name="name">The name of this feature, used to name generated Unity objects.</param></member>
        <member name="T:Google.Maps.Feature.ITileContent">
            <summary>
            Tile content that can be stored in a <see cref="T:Google.Maps.TileLoading.TileCache`1" />.
            </summary></member>
        <member name="M:Google.Maps.Feature.ITileContent.TranslateAndUpdateFloatingOriginFromCoords(Google.Maps.Coord.Projection)">
            <summary>
            Updates this tile's floating origin, and translates all geometry in the tile to accommodate
            the origin change.
            </summary>
            <param name="projection">
            The Coords from which to extract the new floating origin; and to use to calculate the
            necessary translation.
            </param></member>
        <member name="T:Google.Maps.Feature.PlaceIdGenerator">
            <summary>
            Static methods for generating place IDs.
            </summary></member>
        <member name="M:Google.Maps.Feature.PlaceIdGenerator.MakeMercatorTilePlaceId(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Make place ID for a Mercator tile feature.
            </summary>
            <param name="mercatorTileCoords">Coordinates of the Mercator tile.</param>
            <returns>Place ID for the specified Mercator tile.</returns></member>
        <member name="T:Google.Maps.Feature.RegionMetadata">
            <summary>
            A %Unity-independent representation of immutable properties of a land
            region.
            </summary></member>
        <member name="F:Google.Maps.Feature.RegionMetadata.BeachColor">
            <summary>
            The default color of beaches.
            </summary></member>
        <member name="F:Google.Maps.Feature.RegionMetadata.ForestColor">
            <summary>
            The default color of forests.
            </summary></member>
        <member name="F:Google.Maps.Feature.RegionMetadata.ParkColor">
            <summary>
            The default color of parks.
            </summary></member>
        <member name="F:Google.Maps.Feature.RegionMetadata.GenericRegionColor">
            <summary>
            The default color of generic Regions.
            </summary></member>
        <member name="F:Google.Maps.Feature.RegionMetadata.UndefinedRegionColor">
            <summary>
            The default color of undefined Regions.
            </summary></member>
        <member name="T:Google.Maps.Feature.RegionMetadata.UsageType">
            <summary>
            A set of values the specify how a %Region is used.
            </summary></member>
        <member name="F:Google.Maps.Feature.RegionMetadata.UsageType.Unspecified">
            <summary>
            The usage type is unspecified.
            </summary></member>
        <member name="F:Google.Maps.Feature.RegionMetadata.UsageType.Park">
            <summary>
            A park or botanical garden.
            </summary></member>
        <member name="F:Google.Maps.Feature.RegionMetadata.UsageType.Beach">
            <summary>
            A beach.
            </summary></member>
        <member name="F:Google.Maps.Feature.RegionMetadata.UsageType.Forest">
            <summary>
            An area of land covered by trees.
            </summary></member>
        <member name="F:Google.Maps.Feature.RegionMetadata.Usage">
            <summary>
            Specifies the way in which the %Region is used.
            </summary></member>
        <member name="M:Google.Maps.Feature.RegionMetadata.#ctor(System.String,System.String,Google.Maps.Feature.RegionMetadata.UsageType)">
            <summary>
            The %RegionMetadata class constructor.
            </summary>
            <param name="placeId">The %Region's Place ID.</param>
            <param name="name">The name of this feature, used to name generated Unity objects.</param>
            <param name="usage">The way in which the Region is used.</param></member>
        <member name="M:Google.Maps.Feature.RegionMetadata.DefaultColorForUsageType(Google.Maps.Feature.RegionMetadata.UsageType)">
            <summary>
            Returns the default color for the given UsageType.
            </summary>
            <param name="featureType">The type of feature.</param>
            <returns>The color for the UsageType.</returns></member>
        <member name="T:Google.Maps.Feature.SegmentMetadata">
            <summary>
            A %Unity-independent representation of immutable properties of a 2D path.
            For example, of a road.
            </summary></member>
        <member name="T:Google.Maps.Feature.SegmentMetadata.UsageType">
            <summary>
            A set of values that specify how a %Segment is used.
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.UsageType.Unspecified">
            <summary>
            The usage type is unspecified.
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.UsageType.Road">
            <summary>
            A thoroughfare intended for use by motor vehicles.
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.UsageType.LocalRoad">
            <summary>
            Roads that have the lowest speed limit, that carry low volumes of
            traffic. In some areas, local roads are unpaved.
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.UsageType.ArterialRoad">
            <summary>
            A  high-capacity urban road. Delivers traffic from collector roads to
            highways.
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.UsageType.Highway">
            <summary>
            Limited access freeways, state highways, motorways, and toll roads.
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.UsageType.ControlledAccessHighway">
            <summary>
            A highway with grade-separated crossings that is accessed exclusively by
            ramps. These are usually called "freeways" or "motorways".
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.UsageType.Footpath">
            <summary>
            A pedestrian way, walking trail, or nature trail. These thoroughfares
            are intended for use solely by pedestrians, and not for other forms of
            traffic like motorized vehicles, cycles, or horses.
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.UsageType.Rail">
            <summary>
            A railroad.
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.UsageType.Ferry">
            <summary>
            A route over water that is part of the road network, but that is
            travelled by car-carrying vessels.
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.Usage">
            <summary>
            Specifies the way in which the %Segment is used.
            </summary></member>
        <member name="F:Google.Maps.Feature.SegmentMetadata.IsPrivate">
            <summary>
            Indicates whether the segment is marked as private.  E.g., a road that has signage
            discouraging or prohibiting use by the general public such as signs that say "Private",
            or "No trespassing."
            </summary></member>
        <member name="M:Google.Maps.Feature.SegmentMetadata.#ctor(System.String,System.String,Google.Maps.Feature.SegmentMetadata.UsageType,System.Boolean)">
            <summary>
            The %SegmentMetadata class constructor.
            </summary>
            <param name="placeId">The %Segment's Place ID.</param>
            <param name="name">The name of this feature, used to name generated %Unity objects.</param>
            <param name="usage">The way in which the %Segment is used.</param>
            <param name="isPrivate">Indicates whether the segment is a private road.</param></member>
        <member name="M:Google.Maps.Feature.SegmentMetadata.Clone">
            <summary>
            Creates a deep copy of this <see cref="T:Google.Maps.Feature.SegmentMetadata" />.
            </summary>
            <returns>A deep copy.</returns></member>
        <member name="T:Google.Maps.Feature.Shape.GlobalCoordinate">
            <summary>
            An immutable representation of a point combining floating point and integer representations of
            a position the integer coordinates being absolute  coordinates on a mercator projection, and
            the floating point coordinates being relative to a Unity world space origin.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.GlobalCoordinate.CanonicalTileSize">
            <summary>
            The canonical reference size for a tile (hitorically, raster tile pixel count)
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.GlobalCoordinate.PointInTileCoordScaleFactor">
            <summary>
            The scale factor by which coordinates served by Factile are scaled relative to the canonical
            tile size.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.GlobalCoordinate.PointInTileCoordinateRange">
            <summary>The range of integer coordinates within a tile.</summary></member>
        <member name="F:Google.Maps.Feature.Shape.GlobalCoordinate.MaxMercatorZoom">
            <summary>
            The maximum supported zoom level.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.GlobalCoordinate.MinMercatorZoom">
            <summary>
            The minimum supported zoom level.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.GlobalCoordinate.MercatorCoordinates">
            <summary>Immutable Global Mercator Space integer coordinate.</summary>
            <remarks>
            For the finest supported tile zoom factor (18) these values will range over:
            [0, 2^18 * 4096].
            Also note: the Y coordinate of the 2D integer coordinate increases to the north, as
            opposed to the canonical coordinates-within-tile representation in which Y value grows to
            the south.
            </remarks></member>
        <member name="F:Google.Maps.Feature.Shape.GlobalCoordinate.WorldSpaceCoordinates">
            <summary>Mutable Unity world space coordinates.</summary>
            <remarks>
            Note: Y value increases to the north, as opposed to the canonical coordinates-within-tile
            representation in which Y value grows to the south.
            </remarks></member>
        <member name="M:Google.Maps.Feature.Shape.GlobalCoordinate.#ctor(UnityEngine.Vector2Int,UnityEngine.Vector2)">
            <summary>
            Creates a GlobalCoordinate from integer and floating point location.
            </summary>
            <remarks>
            This should become obsolete as we transition to using GlobalCoordinates everywhere, and as
            such the constructor from TileCoord and Vector2Int should be prefered where possible.
            </remarks>
            <param name="mercatorCoordinates">MercatorCoordinates Value</param>
            <param name="worldSpaceCoordinates">WorldSpaceCoordinates Value</param></member>
        <member name="M:Google.Maps.Feature.Shape.GlobalCoordinate.CopyWithOffset(UnityEngine.Vector2)">
            <summary>
            Makes a copy of this GlobalCoordinate with offset WordSpaceCoordinates.
            </summary>
            <param name="offset">The amount to offset WorldSpaceCoordinates.</param>
            <returns>The modified copy.</returns></member>
        <member name="M:Google.Maps.Feature.Shape.GlobalCoordinate.ToString">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.GlobalCoordinate.Lerp(Google.Maps.Feature.Shape.GlobalCoordinate,Google.Maps.Feature.Shape.GlobalCoordinate,System.Single)">
            <summary>
            Linearly interpolates between two GlobalCoordinates using the supplied parametric value.
            </summary>
            <param name="a">First GlobalCoordinate</param>
            <param name="b">Second GlobalCoordinate</param>
            <param name="parametricAtoB">Interpolation amount</param>
            <returns></returns></member>
        <member name="M:Google.Maps.Feature.Shape.GlobalCoordinate.FromPointInTile(Google.Maps.Coord.MercatorTileCoords,UnityEngine.Vector2Int,System.Single)">
            <summary>
            Constructs a GlobalCoordinate from a tile coordinate and a point within that tile.
            </summary>
            <remarks>
            This method ensures that <paramref name="pointInTile" /> is in a compatible reference frame
            to construct a <see cref="T:Google.Maps.Feature.Shape.GlobalCoordinate" /> from, such that all integer coordinates
            have the same, canonical meaning.
            The WorldSpaceCoordinates are initialized relative to the origin of the tile, i.e.,
            assuming the world space origin corresponds to the south west corner of the tile.
            </remarks>
            <param name="mercatorTileCoords">The coordinates of the source tile</param>
            <param name="pointInTile">The location within the source tile</param>
            <param name="tileSize">Word space size of the tile.</param></member>
        <member name="M:Google.Maps.Feature.Shape.GlobalCoordinate.ToMaxMercatorZoom(UnityEngine.Vector2Int,System.Int32)">
            <summary>
            Projects the given integer coordinates to zoom level <see cref="F:Google.Maps.Feature.Shape.GlobalCoordinate.MaxMercatorZoom" />.
            </summary>
            <returns>
            <paramref name="mercatorCoordinates" /> projected to <see cref="F:Google.Maps.Feature.Shape.GlobalCoordinate.MaxMercatorZoom" />.
            </returns></member>
        <member name="M:Google.Maps.Feature.Shape.GlobalCoordinate.ValidateZoomLevel(System.Int32)">
            <summary>
            Validates the given zoom level, logging a warning if it is unsupported.
            </summary>
            <param name="mercatorZoom">The zoom level to validate.</param>
            <returns>True if the zoom level is valid.</returns></member>
        <member name="T:Google.Maps.Feature.StructureMetadata">
            <summary>
            A %Unity-independent representation of immutable properties of a
            structure. For example, of an extruded or modeled building.
            </summary></member>
        <member name="T:Google.Maps.Feature.StructureMetadata.UsageType">
            <summary>
            A set of values that specify how a Structure is used.
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.UsageType.Unspecified">
            <summary>
            The usage type is unspecified.
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.UsageType.Bar">
            <summary>
            A retail business establishment that serves alcoholic beverages, such
            as beer, wine, and liquor.
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.UsageType.Bank">
            <summary>
            A financial institution that accepts deposits from the public, and
            creates credit.
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.UsageType.Lodging">
            <summary>
            A type of residential accommodation. People who travel and stay away
            from home for more than a day need lodging for sleep, food, and
            shelter.
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.UsageType.Cafe">
            <summary>
            A retail business establishment that sells coffee, tea, and sometimes
            light meals.
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.UsageType.Restaurant">
            <summary>
            A retail business establishment that prepares and serves food and
            drinks to customers in exchange for money.
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.UsageType.EventVenue">
            <summary>
            A public or private location that hosts performances or sporting
            events.
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.UsageType.TouristDestination">
            <summary>
            A place of interest to tourists, typically for natural or cultural
            value.
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.UsageType.Shopping">
            <summary>
            A public location that contains retail businesses (a shopping center).
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.UsageType.School">
            <summary>
            Institution where young people receive general (not vocation or professional) education.
            </summary></member>
        <member name="F:Google.Maps.Feature.StructureMetadata.Usage">
            <summary>
            Specifies the way in which the %Structure is used.
            </summary></member>
        <member name="M:Google.Maps.Feature.StructureMetadata.#ctor(System.String,System.String,Google.Maps.Feature.StructureMetadata.UsageType)">
            <summary>
            The %StructureMetadata class constructor.
            </summary>
            <param name="placeId">The Place ID.</param>
            <param name="name"> The name of this feature, used to name generated Unity objects.
            </param>
            <param name="usage">The way in which the Structure is used.</param></member>
        <member name="T:Google.Maps.Feature.LineWater">
            <summary>
            A <see cref="T:Google.Maps.Feature.MapFeature" /> that represents a line-like water feature.
            For example, a river.
            </summary></member>
        <member name="P:Google.Maps.Feature.LineWater.DefaultGameObjectName">
            <summary>
            The default name to use for the associated GameObject.
            </summary>
            <remarks>
            This name is used when the <see cref="T:Google.Maps.Feature.MapFeatureMetadata" /> doesn't
            have an explicit display name.
            </remarks></member>
        <member name="M:Google.Maps.Feature.LineWater.GetShape">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Feature.LineWater.Shape">
            <summary>
            A geometric representation of the Water.
            </summary></member>
        <member name="P:Google.Maps.Feature.LineWater.Metadata">
            <summary>
            The feature metadata as a <see cref="T:Google.Maps.Feature.WaterMetadata" />
            </summary></member>
        <member name="M:Google.Maps.Feature.LineWater.#ctor(Google.Maps.Feature.Shape.LineGroup,Google.Maps.Coord.MercatorTileCoords,Google.Maps.Feature.WaterMetadata)">
            <summary>
            The %LineWater class constructor.
            </summary>
            <param name="shape">Geometric representation of the Water.</param>
            <param name="mercatorTileCoords">
            The coordinates of the tile containing this feature.
            </param>
            <param name="metadata">Associated metadata.</param></member>
        <member name="T:Google.Maps.Feature.MapFeatureMetadata">
            <summary>
            A %Unity-independent representation of immutable properties of a
            geographical feature.
            </summary>
            <remarks>
            A single %MapFeatureMetadata object exists for each geographical feature
            (PlaceId).
            <strong>Note:</strong> Due to chunking, geographical features can be split
            across multiple <see cref="T:Google.Maps.Feature.MapFeature" />s and corresponding
            <see cref="T:UnityEngine.GameObject" />s.
            </remarks></member>
        <member name="F:Google.Maps.Feature.MapFeatureMetadata.PlaceId">
            <summary>
            An alphanumeric string that uniquely identifies a geographic feature in
            the %Google Places database, and on %Google maps. For example,
            *ChIJzRqWFBWuEmsRFiCT1SLJHY8*.
            </summary>
            <remarks>
            You can store and use Place IDs across SDK sessions. For example,
            you can store the Place ID of a 3D building, and then use it later to
            suppress the building, or to swap it out with a custom mesh.
            For more information, see [Place IDs](/places/place-id).
            </remarks></member>
        <member name="F:Google.Maps.Feature.MapFeatureMetadata.Name">
            <summary>
            The name of this %MapFeatureMetadata object.
            </summary></member>
        <member name="M:Google.Maps.Feature.MapFeatureMetadata.#ctor(System.String,System.String)">
            <summary>
            The %MapFeatureMetadata class constructor.
            </summary>
            <param name="placeId">The map feature's Place ID.</param>
            <param name="name">The %MapFeature's name.</param></member>
        <member name="M:Google.Maps.Feature.MapFeatureMetadata.ToString">
            <summary>
            Returns the string representation of this %MapFeatureMetadata. object.
            I.e., the `Name` and `PlaceId`.
            </summary></member>
        <member name="T:Google.Maps.Feature.MapTile">
            <summary>
            A collection of MapFeatures on a single tile.
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.MercatorTileCoords">
            <summary>
            The coordinates of the tile.
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.Providers">
            <summary>
            The providers of this map tile.
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.TileScale">
            <summary>
            Scaling multiplier used to stretch map tile geometry (in "tile local" coords) into Unity
            Worldspace (Vector3).
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.FloatingOrigin">
            <summary>
            The origin specifying the reference frame for the coordinates of all features in this tile.
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.ExtrudedStructures">
            <summary>
            Extruded Structures found on the tile.
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.ModeledStructures">
            <summary>
            Modelled Structures found on the tile.
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.Regions">
            <summary>
            Regions found on the tile.
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.Segments">
            <summary>
            Segments found on the tile.
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.LineWater">
            <summary>
            LineWater found on the tile.
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.AreaWater">
            <summary>
            AreaWater found on the tile.
            </summary></member>
        <member name="F:Google.Maps.Feature.MapTile.RoadLattice">
            <summary>
            Lattice representing roads present on the tile.
            </summary></member>
        <member name="M:Google.Maps.Feature.MapTile.#ctor(Google.Maps.Coord.MercatorTileCoords,System.Single,Google.Maps.Coord.Vector2D,System.Collections.Generic.IList{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="mercatorTileCoords">Tile coordinate.</param>
            <param name="tileScale">Tile scale.</param>
            <param name="floatingOrigin">
            The floating origin providing the reference frame for  coordinates of features in this tile.
            </param>
            <param name="providers">The providers of this map tile.</param></member>
        <member name="M:Google.Maps.Feature.MapTile.TranslateAndUpdateFloatingOriginFromCoords(Google.Maps.Coord.Projection)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.MapTile.TranslateOrigin(UnityEngine.Vector2)">
            <summary>
            Translates the origin of each <see cref="T:Google.Maps.Feature.MapFeature" /> in the tile.
            </summary>
            <param name="offset">
            An offset vector used for translating each <see cref="T:Google.Maps.Feature.Shape.MapFeatureShape" />.
            </param></member>
        <member name="M:Google.Maps.Feature.MapTile.TranslateRoadLatticeOrigin(UnityEngine.Vector2)">
            <summary>
            Moves the RoadLattice by the provided offset.
            </summary>
            <remarks>
            This is a separate method as it is necessary to invoke it independently of other feature
            translation once, when the tile is decoded by the FeatureTileDecoder, and the road lattice
            is generated outside the FeatureTileDecoder.
            </remarks>
            <param name="offset">The amount by which to move the road lattice</param></member>
        <member name="M:Google.Maps.Feature.MapTile.GetMapFeatures">
            <summary>
            Returns an enumerable including all of the <see cref="T:Google.Maps.Feature.MapFeature" />s on this tile.
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance for all map features on this tile.
            </returns></member>
        <member name="M:Google.Maps.Feature.MapTile.GenerateRoadLattice(System.Boolean)">
            <summary>
            Updates the road lattice of this tile based on the segments in this tile.
            </summary>
            <param name="extraIntersections">
            Whether to search for intersections optimized away in the source data.
            </param></member>
        <member name="T:Google.Maps.Feature.ModeledStructure">
            <summary>
            A <see cref="T:Google.Maps.Feature.MapFeature" /> that represents a modeled structure. For
            example, a building with detailed vertex/triangle data.
            </summary>
            <remarks>
            Backed by <see cref="T:Google.Maps.Feature.Shape.ModeledVolume" /> shape geometry.
            </remarks></member>
        <member name="P:Google.Maps.Feature.ModeledStructure.DefaultGameObjectName">
            <summary>
            The default name to use for the associated GameObject.
            </summary>
            <remarks>
            This name is used when the <see cref="T:Google.Maps.Feature.MapFeatureMetadata" /> doesn't
            have an explicit display name.
            </remarks></member>
        <member name="M:Google.Maps.Feature.ModeledStructure.GetShape">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Feature.ModeledStructure.Shape">
            <summary>
            A geometric representation of the %ModeledStructure.
            </summary></member>
        <member name="P:Google.Maps.Feature.ModeledStructure.Metadata">
            <summary>
            The feature metadata as a <see cref="T:Google.Maps.Feature.StructureMetadata" />
            </summary></member>
        <member name="M:Google.Maps.Feature.ModeledStructure.#ctor(Google.Maps.Feature.Shape.ModeledVolume,Google.Maps.Coord.MercatorTileCoords,Google.Maps.Feature.StructureMetadata)">
            <summary>
            The %ModeledStructure class constructor.
            </summary>
            <param name="shape">A geometric representation of the Structure.</param>
            <param name="mercatorTileCoords">
            The coordinates of the tile that contains this feature.
            </param>
            <param name="metadata">Associated metadata.</param></member>
        <member name="T:Google.Maps.Feature.MapFeature">
            <summary>
            Mutable data associated with a map feature.
            </summary>
            <remarks>
            There's a one-to-one correspondence between MapFeatures and generated
            %Unity GameObjects. Due to feature chunking, there can be multiple
            GameObjects representing a feature in the %Unity scene, with each one
            having a unique %MapFeature but with all sharing a common
            <see cref="T:Google.Maps.Feature.MapFeatureMetadata" />.
            <strong>Note:</strong> The tile coordinates and geometry of this feature
            can change if additional feature chunks are combined for the same PlaceId
            through feature chunk stitching.
            </remarks></member>
        <member name="F:Google.Maps.Feature.MapFeature.MapFeatureMetadata">
            <summary>
            Metadata associated with this %MapFeature.
            </summary>
            <remarks>
            Due to chunking, multiple %MapFeatures can reference the same
            <see cref="T:Google.Maps.Feature.MapFeatureMetadata" />
            </remarks></member>
        <member name="P:Google.Maps.Feature.MapFeature.DefaultGameObjectName">
            <summary>
            The default name to use for the associated GameObject.
            </summary>
            <remarks>
            This name is used when the <see cref="T:Google.Maps.Feature.MapFeatureMetadata" /> doesn't
            have an explicit display name.
            </remarks></member>
        <member name="M:Google.Maps.Feature.MapFeature.GetShape">
            <summary>
            Returns the shape of a <see cref="T:Google.Maps.Feature.MapFeature" /> if it has one.
            </summary>
            <returns>
            Returns a <see cref="T:Google.Maps.Feature.Shape.MapFeatureShape" /> instance representing the shape of the feature
            if it has one, otherwise returns null.
            </returns></member>
        <member name="F:Google.Maps.Feature.MapFeature.MercatorTileCoords">
            <summary>
            The (x,y) coordinates of the %Google %Maps tiles that contain this map
            feature.
            </summary>
            <remarks>
            For more information, see
            [Map and Tile Coordinates](/maps/documentation/javascript/coordinates).
            </remarks></member>
        <member name="M:Google.Maps.Feature.MapFeature.GameObjectName">
            <summary>
            The name used for the GameObject associated with this %MapFeature.
            </summary></member>
        <member name="M:Google.Maps.Feature.MapFeature.#ctor(Google.Maps.Feature.MapFeatureMetadata,Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            The %MapFeature class constructor.
            </summary>
            <param name="mapFeatureMetadata">Metadata associated with this feature.</param>
            <param name="mercatorTileCoords">Tile Coordinates.</param></member>
        <member name="M:Google.Maps.Feature.MapFeature.GetMapFeatureMetadata``1">
            <summary>
            Returns the metadata from this feature, cast to a feature-specific type.
            </summary>
            <returns>The cast metadata.</returns>
            <typeparam name="T">The type to cast the metadata to.</typeparam></member>
        <member name="T:Google.Maps.Feature.Region">
            <summary>
            A <see cref="T:Google.Maps.Feature.MapFeature" /> that represents a 2D region. For example, a
            park.
            </summary>
            <remarks>
            Backed by <see cref="T:Google.Maps.Feature.Shape.Area" /> shape geometry.
            </remarks></member>
        <member name="P:Google.Maps.Feature.Region.DefaultGameObjectName">
            <summary>
            The default name to use for the associated GameObject.
            </summary>
            <remarks>
            This name is used when the <see cref="T:Google.Maps.Feature.MapFeatureMetadata" /> doesn't
            have an explicit display name.
            </remarks></member>
        <member name="M:Google.Maps.Feature.Region.GetShape">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Feature.Region.Shape">
            <summary>
            Contains the geometric representation of the %Region.
            </summary></member>
        <member name="P:Google.Maps.Feature.Region.Metadata">
            <summary>
            The feature metadata as a <see cref="T:Google.Maps.Feature.RegionMetadata" />.
            </summary></member>
        <member name="M:Google.Maps.Feature.Region.#ctor(Google.Maps.Feature.Shape.Area,Google.Maps.Coord.MercatorTileCoords,Google.Maps.Feature.RegionMetadata)">
            <summary>
            The %Region class constructor.
            </summary>
            <param name="shape">A geometric representation of the %Region.</param>
            <param name="mercatorTileCoords">
            The coordinates of the tile that contains this feature.
            </param>
            <param name="metadata">Associated metadata</param></member>
        <member name="M:Google.Maps.Feature.Region.ToString">
            <summary>
            A string representation of this %Region. I.e., its `PlaceID`.
            </summary></member>
        <member name="T:Google.Maps.Feature.Segment">
            <summary>
            A <see cref="T:Google.Maps.Feature.MapFeature" /> that represents a 2D path. For example, a road.
            </summary>
            <remarks>
            Backed by <see cref="T:Google.Maps.Feature.Shape.LineGroup" /> shape geometry.
            </remarks></member>
        <member name="P:Google.Maps.Feature.Segment.DefaultGameObjectName">
            <summary>
            The default name to use for the associated GameObject.
            </summary>
            <remarks>
            This name is used when the <see cref="T:Google.Maps.Feature.MapFeatureMetadata" /> doesn't
            have an explicit display name.
            </remarks></member>
        <member name="M:Google.Maps.Feature.Segment.GetShape">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Feature.Segment.Shape">
            <summary>
            A geometric representation of the %Segment.
            </summary></member>
        <member name="M:Google.Maps.Feature.Segment.GameObjectName">
            <summary>
            The name of the GameObject associated with this
            <see cref="T:Google.Maps.Feature.MapFeature" />.
            </summary></member>
        <member name="P:Google.Maps.Feature.Segment.Metadata">
            <summary>
            The feature metadata as a <see cref="T:Google.Maps.Feature.SegmentMetadata" />.
            </summary></member>
        <member name="M:Google.Maps.Feature.Segment.#ctor(Google.Maps.Feature.Shape.LineGroup,Google.Maps.Coord.MercatorTileCoords,Google.Maps.Feature.SegmentMetadata)">
            <summary>
            The %Segment class constructor.
            </summary>
            <param name="shape">A geometric representation of the %Segment.</param>
            <param name="mercatorTileCoords">
            The coordinates of the tile that contains this feature.
            </param>
            <param name="metadata">Associated metadata.</param></member>
        <member name="M:Google.Maps.Feature.Segment.Clone">
            <summary>
            Creates a deep copy of this <see cref="T:Google.Maps.Feature.Segment" />.
            </summary>
            <returns>A deep copy of this.</returns></member>
        <member name="T:Google.Maps.Feature.Shape.Area">
            <summary>
            A geometric representation of a flat %MapFeature. For example, a park.
            </summary></member>
        <member name="T:Google.Maps.Feature.Shape.Area.EdgeSequence">
            <summary>
            Represents a contiguous sequence of edges. Each vertex appears only
            once, unless this represents a closed loop (in which case the first and
            last verticies are identical). A sequence of n vertices represents n - 1
            contiguous edges: [v0, v1], [v1, v2], ..., [v(n - 2), v(n - 1)].
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Area.EdgeSequence.Vertices">
            <summary>
            The vertices of the edge sequence.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.Area.EdgeSequence.#ctor(System.Collections.Generic.List{UnityEngine.Vector2})">
            <summary>Constructor.</summary>
            <param name="vertices">The vertices of the contiguous edge sequence.</param></member>
        <member name="T:Google.Maps.Feature.Shape.Area.EdgeSequenceListBuilder">
            <summary>
            Class used for building up edge sequences.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Area.EdgeSequenceListBuilder.edgeSequences">
            <summary>
            The edge sequences that we're building up.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Area.EdgeSequenceListBuilder.currentSequence">
            <summary>
            The vertices in the current edge sequence.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.Area.EdgeSequenceListBuilder.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.Area.EdgeSequenceListBuilder.AddVertex(UnityEngine.Vector2)">
            <summary>
            Add a vertex to the current sequence.
            </summary>
            <param name="vertex">The vertex to add.</param></member>
        <member name="M:Google.Maps.Feature.Shape.Area.EdgeSequenceListBuilder.TerminateSequence">
            <summary>
            Terminates the current sequence and adds it to the list of sequences.
            </summary>
            <remarks>
            If the current sequence is degenerate (contains only one vertex) it will not be added.
            </remarks></member>
        <member name="M:Google.Maps.Feature.Shape.Area.EdgeSequenceListBuilder.GetEdgeSequences">
            <summary>
            Get the list of edge sequences built so far.
            </summary>
            <remarks>
            If there is a partial, unterminated current sequence, it will be ignored. So it is
            important to call TerminateSequence on the last edge sequence.
            </remarks>
            <returns>The list of edge sequences built so far.</returns></member>
        <member name="T:Google.Maps.Feature.Shape.Area.WindingOrder">
            <summary>
            Specifies the winding order of a triangle. Degenerate indicates that
            triangle has zero area, and thus no determinable winding order.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Area.Vertices">
            <summary>
            Vertices that make up the Area's border. This is relative to the
            <see cref="P:Google.Maps.Feature.Shape.MapFeatureShape.Origin" />.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Area.VertexBreaks">
            <summary>
            Separates the Area's vertices into discrete intervals, each one that
            describes an individual polygon.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Area.Triangles">
            <summary>
            Triangles that make up an Area's polygon. A triangle is represented as a
            triplet of indices into the Area's Vertices array.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Area.ZOrder">
            <summary>
            The z-order of this area, as returned in the tile data from Factile.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Area.NextVertexInLoop">
            For each vertex, stores the next vertex in the polygon boundary loop.
            You can use this to check whether an edge is external to the polygon.</member>
        <member name="F:Google.Maps.Feature.Shape.Area.ExternalEdges">
            <summary>
            Contains whether each edge in the area is external to the feature. An external edge is one
            that borders another feature.
            These external edges may be used for styling. For example, when drawing borders around
            regions, they should only be drawn on the external edges of the area.
            Currently, this field is only supported for the AdministrativeArea1, Locality, and
            Sublocality feature types.
            This array will always have the same number of elements as the Vertices array. For each
            vertex index i, the edge from vertex i to NextVertexInLoop[i] is external iff
            ExternalEdges[i] is true.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.Area.#ctor(System.Collections.Generic.ICollection{UnityEngine.Vector2},System.Collections.Generic.ICollection{System.Int32},System.Collections.Generic.ICollection{System.Int32},System.Int32,System.Boolean)">
            <summary>
            Constructs an area with no external edges. Included for backwards compatibility.
            </summary>
            <param name="vertices">The vertices that make up the Area's border.</param>
            <param name="vertexBreaks">When you separate the Area's vertices into
            discrete intervals, each one describes an individual boundary loop of
            the area. You can use this to check whether an edge is external to the
            area. Each vertex break is an index into the vertices array, and
            indicates the start of a new loop. For example, if there are 10
            vertices, and a break at vertex index five, then vertices 0-4 comprise
            one loop, and vertices 5-9 comprise another loop.
            </param>
            <param name="triangles">A collection of integer triples that make up the
            Area's triangles. Each integer is an index into the collection of
            vertices.
            </param>
            <param name="zOrder">The z-order of this Area. Defaults to zero.</param>
            <param name="recenter">Determines whether the newly created Area will
            have its coordinates modified to be relative to the center of its
            bounding box. See also, Recenter().</param></member>
        <member name="M:Google.Maps.Feature.Shape.Area.#ctor(System.Collections.Generic.ICollection{UnityEngine.Vector2},System.Collections.Generic.ICollection{System.Int32},System.Collections.Generic.ICollection{System.Int32},System.Collections.Generic.ICollection{System.Boolean},System.Int32,System.Boolean)">
            <summary>
            The %Area class constructor.
            </summary>
            <param name="vertices">The vertices that make up the Area's border.</param>
            <param name="vertexBreaks">When you separate the Area's vertices into
            discrete intervals, each one describes an individual boundary loop of
            the area. You can use this to check whether an edge is external to the
            area. Each vertex break is an index into the vertices array, and
            indicates the start of a new loop. For example, if there are 10
            vertices, and a break at vertex index five, then vertices 0-4 comprise
            one loop, and vertices 5-9 comprise another loop.
            </param>
            <param name="triangles">A collection of integer triples that make up the
            Area's triangles. Each integer is an index into the collection of
            vertices.</param>
            <param name="externalEdges">Indicates which of the edges are external to the area and border
            another feature. This should be the same size as the vertices parameter.
            </param>
            <param name="zOrder">The z-order of this Area. Defaults to zero.</param>
            <param name="recenter">Determines whether the newly created Area will
            have its coordinates modified to be relative to the center of its
            bounding box. See also, Recenter().</param></member>
        <member name="M:Google.Maps.Feature.Shape.Area.CalculateLocalBoundingBox">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.Area.Empty">
            <summary>
            Constructs an empty Area. That is, an Area that has no vertex, vertex
            break, or triangle information.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.Area.IsEmpty">
            <summary>
            Determines whether this Area is empty. An Area is empty if it doesn't
            contain a vertex, a vertex break, or triangle data.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.Area.IsEdgeExternal(System.Int32,System.Int32)">
            <summary>
            Determines whether the edge between the verticies at index v1 and v2 is
            external to the polygon.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.Area.TranslateGeometry(UnityEngine.Vector2)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.Area.ToString">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.Area.CombineAreas(Google.Maps.Feature.Shape.Area[],System.Int32,System.Boolean)">
            <summary>
            Combines all the areas in the supplied array into a single area.
            </summary>
            <remarks>
            Concatenates the vertex lists and adjusted triangle and breaks lists where the indices in
            the latter two are adjusted for the new positions of their respective vertices in the
            combined vertex lists.
            </remarks>
            <param name="areas">The areas to combine.</param>
            <param name="zOrder">The zOrder for the new, combined area.</param>
            <param name="recenter"></param>
            <returns>The combined area.</returns></member>
        <member name="M:Google.Maps.Feature.Shape.Area.RescaleCoordinates(System.Single)">
            <summary>
            Rescale the coordinates of this <see cref="T:Google.Maps.Feature.Shape.Area" />,
            modifying vertices, origin and tile boundary crossing points.
            </summary>
            <param name="scale">Scale factor.</param></member>
        <member name="M:Google.Maps.Feature.Shape.Area.Equals(System.Object)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.Area.Equals(Google.Maps.Feature.Shape.Area)">
            <summary>Type specific equality method.</summary></member>
        <member name="M:Google.Maps.Feature.Shape.Area.GetHashCode">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.Area.GetTriangleWindingOrder(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Returns the winding order of the triangle described by the supplied vertices considered in
            the supplied order.
            </summary>
            <param name="v1">First vertex</param>
            <param name="v2">Second vertex</param>
            <param name="v3">Third vertex</param>
            <returns>Winding order</returns></member>
        <member name="M:Google.Maps.Feature.Shape.Area.SwapVertices(UnityEngine.Vector2@,UnityEngine.Vector2@,System.Int32@,System.Int32@)">
            <summary>
            Swap two vertices and associated indices.
            </summary>
            <param name="vertex1">First vertex.</param>
            <param name="vertex2">Second vertex.</param>
            <param name="index1">First vertex index.</param>
            <param name="index2">Second vertex index.</param></member>
        <member name="M:Google.Maps.Feature.Shape.Area.GenerateBoundaryEdges">
            <summary>
            Returns a list of lists of vertices, each inner list representing a contiguous edge run for
            this Area.
            </summary>
            <remarks>
            The returned edge runs will form closed loops in anticlockwise winding order. This means
            that the outside of the Area is to the right of each edge.
            </remarks>
            <returns>
            A List of connected edge sequences, each sequence represented by a list of
            vertices where each a list of n vertices represents n - 1 contiguous edges: [v0, v1],
            [v1, v2], ..., etc. The vertices are in world space.
            </returns></member>
        <member name="M:Google.Maps.Feature.Shape.Area.GenerateExternalBoundaryEdges">
            <summary>
            Returns a list of lists of vertices, each inner list representing a contiguous edge run for
            this Area. Only external boundary edges will be returned.
            </summary>
            <remarks>
            The returned edge runs will form closed loops in anticlockwise winding order. This means
            that the outside of the Area is to the right of each edge.
            This method will return only the edges that are external to the map feature (that is, they
            border another feature). This makes this method good for adding borders to regions.
            </remarks>
            <returns>
            A List of connected edge sequences, each sequence represented by a list of
            vertices where each a list of n vertices represents n - 1 contiguous edges: [v0, v1],
            [v1, v2], ..., etc. The vertices are in world space.
            </returns></member>
        <member name="M:Google.Maps.Feature.Shape.Area.getNextVertexInLoop(System.Int32)">
            <summary>
            Returns the next vertex in an edge loop. Useful for getting the boundaries of an area.
            </summary>
            <param name="index">An index into the Vertices list.</param>
            <returns>
            An index into the Vertices list representing the next vertex in the edge loop.
            </returns></member>
        <member name="M:Google.Maps.Feature.Shape.Area.MakeAnticlockwise">
            <summary>
            Changes the edge loops and triangle indices of the area so that they form anticlockwise
            loops.
            </summary>
            <remarks>
            This makes it easier to construct extruded buildings with the walls facing the right way.
            </remarks></member>
        <member name="T:Google.Maps.Feature.Shape.ExtrudedArea">
            <summary>
            A geometric representation of a %MapFeature made up of a collection of extrusions.
            </summary></member>
        <member name="T:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion">
            <summary>
            A footprint together with base and top heights.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.MinZ">
            <summary>
            The height of the Extrusion's base.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.MaxZ">
            <summary>
            The height of the Extrusion's top.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.FootPrint">
            <summary>
            The extrusion's footprint.
            </summary></member>
        <member name="P:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.Height">
            <summary>
            The height of the Extrusion.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.#ctor(Google.Maps.Feature.Shape.Area,System.Single,System.Single)">
            <summary>
            An `%Extrusion` class onstructor.
            </summary>
            <param name="footprint">Footprint of the extrusion.</param>
            <param name="minZ">Altitude of the Extrusion's base.</param>
            <param name="maxZ">Altitude of the Extrusion's top.</param></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.#ctor(Google.Maps.Feature.Shape.Area)">
            <summary>
            An `%Extrusion` class onstructor. Extrusions constructed from this
            constructor have no supplied height information.
            </summary>
            <param name="footprint">The footprint of the extrusion.</param></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.#ctor(System.Collections.Generic.ICollection{UnityEngine.Vector2},System.Collections.Generic.ICollection{System.Int32},System.Collections.Generic.ICollection{System.Int32},System.Single,System.Single)">
            <summary>
            An `%Extrusion` class constructor.
            </summary>
            <param name="vertices">The vertices that make up the Extrusion's footprint.</param>
            <param name="vertexBreaks">The footprint's vertices separated into
            discrete intervals, with each one describing an individual polygon.</param>
            <param name="triangles">A collection of integer-triples that make up
            the footprint's triangles. Each integer is an index into the supplied
            collection of vertices.</param>
            <param name="minZ">The height of the %Extrusion's base.</param>
            <param name="maxZ">The height of the %Extrusion's top.</param></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.GetBounds">
            <summary>
            Gets a bounding box for all of the geometry represented by this
            object.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.ShallowCloneWithMinMaxZ(System.Single,System.Single)">
            <summary>
            Creates a clone of this %Extrusion, sharing a reference to this
            %Extrusion's Footprint, but with modified MinZ and MaxZ values.
            </summary>
            <param name="minZ">The new MinZ value for the clone.</param>
            <param name="maxZ">New MaxZ value for the clone.</param>
            <returns>A clone of this Extrusion with new MinZ and MaxZ.</returns></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.ToString">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Feature.Shape.ExtrudedArea.FlatThreshold">
            <summary>
            Value under which height is considered to be effectively zero.
            </summary></member>
        <member name="P:Google.Maps.Feature.Shape.ExtrudedArea.Extrusions">
            <summary>
            The %Extrusions that make up this `%ExtrudedArea`.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.ExtrudedArea.HasServerHeight">
            <summary>
            True if the height data is as reported by the server. If not then the
            value was generated by other means as is the case, for example, when
            the server sends no height data in the first place.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.ExtrudedArea.Overhangs">
            <summary>
            Specifies whether the geometry of this %ExtrudedArea crosses a tile
            boundary.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.#ctor(System.Collections.Generic.ICollection{Google.Maps.Feature.Shape.ExtrudedArea.Extrusion},System.Boolean,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="extrusions">Collection of Extrusions that make up the ExtrudedArea.</param>
            <param name="hasServerHeight">Is the height value server-supplied?</param>
            <param name="overhangs">Whether any geometry crosses a tile boundary.</param></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.#ctor(System.Collections.Generic.ICollection{Google.Maps.Feature.Shape.ExtrudedArea.Extrusion},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Private constructor that allows the suppression of recentering of
            generated ExtrudedArea around the origin of the
            <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea" />'s bounding box.
            </summary>
            <param name="extrusions">A collection of Extrusions that make up the ExtrudedArea.</param>
            <param name="hasServerHeight">Is the height value server-supplied?</param>
            <param name="overhangs">Whether any geometry crosses a tile boundary.</param>
            <param name="recenter">Whether to transform the coordinates of this ExtrudedArea to be
            relative to the center of the bounding box of the ExtrudedArea (see Recenter method).
            </param></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.TranslateGeometry(UnityEngine.Vector2)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.CalculateLocalBoundingBox">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.ToString">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.CloneWithHeight(System.Single,System.Boolean)">
            <summary>
            Creates a clone of this extruded area with the height (MaxZ) of all
            extrusions set to the supplied height.
            </summary>
            <remarks>
            Each extrusion of the generated clone shares a reference to the
            footprint of the cloned extrusion. For more information, see
            <see cref="M:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.ShallowCloneWithMinMaxZ(System.Single,System.Single)" />.
            </remarks>
            <param name="height">The height to set the MaxZ of each cloned extrusion to.</param>
            <param name="isServerHeight">Does the height come from the server?</param>
            <returns>A clone with all extrusions set to the supplied height.</returns></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.CloneWithScaledHeight(System.Single,System.Boolean)">
            <summary>
            Constructs a new %ExtrudedArea as a linearly-scaled clone of the this
            %ExtrudedArea.
            </summary>
            <remarks>
            Each extrusion of the generated clone shares a reference to the
            footprint of cloned extrusion. For more information, see
            <see cref="M:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.ShallowCloneWithMinMaxZ(System.Single,System.Single)" />.
            </remarks>
            <param name="height">The height to scale this %ExtrudedArea to.</param>
            <param name="isServerHeight">Does the height come from the server?</param>
            <returns>A scaled clone of this %ExtrudedArea</returns></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.CloneWithMinBaseHeight(System.Single)">
            <summary>
            Constructs a new %ExtrudedArea as a clone of this %ExtrudedArea, with all MaxZ values raised
            such that the lowest Extrusions are of at least the specified height.
            </summary>
            <remarks><para>
            The lowest <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion" />s are defined as all of the <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion" />s with
            the lowest minimum z value. Where multiple <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion" />s share the same value,
            the shortest one is used to determine the height delta applied to the entire
            <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea" />. The delta is applied to the entire <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea" /> to
            ensure it otherwise retains its profile.
            </para><para>
            If the shortest base-level <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion" /> is taller than minBaseHeight, no height
            adjustment occurs.
            </para><para>
            Each extrusion of the generated clone shares a reference to the footprint of cloned
            extrusion. For more information, see <see cref="M:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion.ShallowCloneWithMinMaxZ(System.Single,System.Single)" />.
            </para></remarks>
            <param name="minBaseHeight">
            The minimum height of the shorted base-level <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea" />.
            </param>
            <returns>A scaled clone of this %ExtrudedArea</returns></member>
        <member name="M:Google.Maps.Feature.Shape.ExtrudedArea.CloneHelper(System.Collections.Generic.ICollection{Google.Maps.Feature.Shape.ExtrudedArea.Extrusion},System.Boolean,System.Boolean)">
            <summary>
            Helper function for producing modified clones of this <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea" />.
            </summary>
            <remarks>
            The main job of this method is to preserve the Origin in the clone. This is achieved by
            setting the recenter parameter to the <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea" /> constructor to false (to
            prevent modification of the supplied <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea.Extrusion" />s) then copying the Origin
            by calling <see cref="M:Google.Maps.Feature.Shape.MapFeatureShape.TranslateOrigin(UnityEngine.Vector2)" /> on the clone.</remarks>
            <param name="extrusions">Extrusions to include in the clone.</param>
            <param name="hasServerHeight">Is the height value server-supplied?</param>
            <param name="overhangs">Overhangs property of the clone.</param>
            <returns>The generated ExtrudedArea.</returns></member>
        <member name="T:Google.Maps.Feature.Shape.Line">
            <summary>
            A geometric representation of a 2D path on a map.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Line.BoundaryEpsilon">
            <summary>
            Closeness factor used to determine if a vertex is close to a boundary.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Line.CanonicalTileSize">
            <summary>Tile size in unscaled tile coordinates.</summary></member>
        <member name="F:Google.Maps.Feature.Shape.Line.Vertices">
            <summary>
            The vertices that make up the Line.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Line.IntVertices">
            <summary>
            Integer versions of the vertices that make up the Line, locating the vertices in a world
            scale Mercator based integer coordinate system.
            </summary>
            <remarks>
            The coordinate system combines tile coordinates and infra-tile coordinates, essentially:
            TileCoordinate * 4096 + InfraTileCoordinate
            These integer vertex values are globally unique, immutable (in that they are not affected by
            <see cref="M:Google.Maps.Feature.Shape.Line.TranslateGeometry(UnityEngine.Vector2)" /> or <see cref="M:Google.Maps.Feature.Shape.Line.RescaleCoordinates(System.Single)" />), and maintained in
            addition to the floating point vertices for the purpose of more accurate feature coordinate
            matching for intersection detection and road lattice generation.
            As this is a publicly visible feature class, Vector2 and Vector2Int values are stored in
            parallel in order not to break existing client code that accesses the float vertices.
            This will be required til such time as we move to a unified integer-plus-float
            representation of vertices throughout the SDK, such as the <see cref="T:Google.Maps.Feature.Shape.GlobalCoordinate" />
            type.
            </remarks></member>
        <member name="F:Google.Maps.Feature.Shape.Line.VertexOnTileBoundary">
            <summary>
            Indicates whether the corresponding vertex in the  <see cref="F:Google.Maps.Feature.Shape.Line.Vertices" /> array lies on a
            tile boundary.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.Line.ZOrder">
            <summary>
            The z-ordering of the line. Lines with a higher z-order are rendered
            above lines with a lower z-order.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.Line.#ctor(System.Collections.Generic.ICollection{UnityEngine.Vector2},System.Collections.Generic.ICollection{UnityEngine.Vector2Int},System.Int32)">
            <summary>
            Private utility constructor to support both Vector2 constructor and GlobalCoordinate
            constructor.
            </summary>
            <param name="vertices">Collection of Vector2s that make up the segment.</param>
            <param name="intVertices">Vector2Ints corresponding to the supplied Vector2s</param>
            <param name="zOrder">Z-order of the line.</param></member>
        <member name="M:Google.Maps.Feature.Shape.Line.#ctor(System.Collections.Generic.ICollection{UnityEngine.Vector2},System.Int32)">
            <summary>
            The `%Line` class constructor.
            </summary>
            <remarks>
            Legacy constructor to support client code that predates addition of integer vertices.
            </remarks>
            <param name="vertices">Collection of Vector2s that make up the segment.</param>
            <param name="zOrder">Z-order of the line.</param></member>
        <member name="M:Google.Maps.Feature.Shape.Line.#ctor(System.Collections.Generic.ICollection{Google.Maps.Feature.Shape.GlobalCoordinate},System.Int32)">
            <summary>
            A `%Line` constructor that accepts both float and integer versions of vertices in the form
            of <see cref="T:Google.Maps.Feature.Shape.GlobalCoordinate" /> values.
            </summary>
            <remarks>
            See comments <see cref="F:Google.Maps.Feature.Shape.Line.IntVertices" /> for an explanation of why we need to extract the
            integer and float versions into separate arrays rather than storing the original
            GlobalCoordinate values.
            The provision of arguments in the form of <see cref="T:Google.Maps.Feature.Shape.GlobalCoordinate" /> values obivates the
            need to provide some kind of error handling for the case where the number of integer and
            float vertices does not match, and provides a path to a potential future where all
            coordinates are specified this way.
            </remarks>
            <param name="vertices">Collections of vertices in integer-plus-float format</param>
            <param name="zOrder">Z-order of the line</param></member>
        <member name="M:Google.Maps.Feature.Shape.Line.ExtractIntVertices(System.Collections.Generic.ICollection{Google.Maps.Feature.Shape.GlobalCoordinate})">
            <summary>
            Utility method to extract integer components from a collections of GlobalCoordinate values.
            </summary>
            <param name="vertices">GlobalCoordinate values.</param>
            <returns>A collection of the Vector2Int values extracted from the input vertices.</returns></member>
        <member name="M:Google.Maps.Feature.Shape.Line.ExtractFloatVertices(System.Collections.Generic.ICollection{Google.Maps.Feature.Shape.GlobalCoordinate})">
            <summary>
            Utility method to extract float components from a collections of GlobalCoordinate values.
            </summary>
            <param name="vertices">GlobalCoordinate values.</param>
            <returns>A collection of the Vector2 values extracted from the input vertices.</returns></member>
        <member name="M:Google.Maps.Feature.Shape.Line.IsIndexedVertexOnTileBoundary(System.Int32)">
            <summary>
            Returns whether the vertex indicated by the supplied index lies on a tile boundary.
            </summary>
            <param name="index">Index of vertex to test.</param>
            <returns>If the indexed vertex is on a tile boundary.</returns></member>
        <member name="M:Google.Maps.Feature.Shape.Line.TranslateGeometry(UnityEngine.Vector2)">
            <summary>
            Translates the shape by the supplied offset.
            </summary>
            <param name="offset">An offset vector used for translation.</param></member>
        <member name="M:Google.Maps.Feature.Shape.Line.RescaleCoordinates(System.Single)">
            <summary>
            Scales the shape by the supplied scale.
            </summary>
            <param name="scale">Scale factor.</param></member>
        <member name="M:Google.Maps.Feature.Shape.Line.CalculateLocalBoundingBox">
            <summary>
            Calculates and returns a bounding box for all the geometry represented by this object.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.Line.FindBoundaryVertices(UnityEngine.Vector2[],System.Single,System.Single)">
            <summary>
            Calculates which vertices lie on the border of a square of given size.
            </summary>
            <param name="vertices">Vertices to check for boundary proximity</param>
            <param name="boundsSize">Size of the boundary square</param>
            <param name="epsilon">
            How close coordinates of a vertex must be to the boundary to be considered on the boundary
            </param>
            <returns>
            A boolean array indicating for each supplied vertex if that vertex lies within the supplied
            epsilon distance of any edge of the square ranging from (0, 0) to (boundsSize, boundsSize).
            </returns></member>
        <member name="M:Google.Maps.Feature.Shape.Line.Clone">
            <summary>
            Creates a deep copy of this <see cref="T:Google.Maps.Feature.Shape.Line" />.
            </summary>
            <returns>A deep copy of this.</returns></member>
        <member name="T:Google.Maps.Feature.Shape.LineGroup">
            <summary>
            Represents a collection of Shape.Lines used to represent a 2D path on a
            map, such as a road, train line or ferry route.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.LineGroup.Lines">
            <summary>
            The Lines that make up the LineGroup.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.LineGroup.#ctor(System.Collections.Generic.ICollection{Google.Maps.Feature.Shape.Line})">
            <summary>
            Constructor.
            </summary>
            <param name="lines">Collection of Lines that make up the LineGroup.</param></member>
        <member name="M:Google.Maps.Feature.Shape.LineGroup.TranslateGeometry(UnityEngine.Vector2)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.LineGroup.CalculateLocalBoundingBox">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.LineGroup.Clone">
            <summary>
            Creates a deep copy of this <see cref="T:Google.Maps.Feature.Shape.LineGroup" />.
            </summary>
            <returns>A deep copy of this.</returns></member>
        <member name="M:Google.Maps.Feature.Shape.LineGroup.ShallowClone">
            <summary>
            Creates a shallow copy of this <see cref="T:Google.Maps.Feature.Shape.LineGroup" />. The shallow clone references a
            new list of <see cref="T:Google.Maps.Feature.Shape.Line" />s but the list contains the same Line objects as this
            LineGroup.
            </summary>
            <returns>A shallow clone of this.</returns></member>
        <member name="T:Google.Maps.Feature.Shape.MapFeatureShape">
            <summary>
            Describes the geometric information for a Feature (such as a building or
            road).
            </summary>
            <remarks>
            All geometry in this class is relative to the <see cref="P:Google.Maps.Feature.Shape.MapFeatureShape.Origin" />.
            </remarks></member>
        <member name="F:Google.Maps.Feature.Shape.MapFeatureShape.BoundingBoxValid">
            <summary>
            Indicates whether the current value of CachedBoundingBox is up to date.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.MapFeatureShape.CachedBoundingBox">
            <summary>
            The value of the bounding box last generated by a call to CalculateBoundingBox.
            </summary></member>
        <member name="P:Google.Maps.Feature.Shape.MapFeatureShape.BoundingBox">
            <summary>
            The bounding box of all of the geometries in this %MapFeatureShape.
            </summary>
            <remarks>
            This is always relative to the parent <see cref="T:UnityEngine.GameObject" />.
            </remarks></member>
        <member name="P:Google.Maps.Feature.Shape.MapFeatureShape.Origin">
            <summary>
            The two-dimensional origin of the coordinate system for all contained
            vertices. I.e., all vertices in FootPrints of Extrusions are measured
            relative to this origin.
            </summary>
            <remarks>
            This origin is relative to the parent of the
            <see cref="T:Google.Maps.Feature.Shape.MapFeatureShape" />, which is either the
            <see cref="T:UnityEngine.GameObject" /> that contains a <see cref="T:Google.Maps.MapsService" />, or
            another MapFeatureShape.
            </remarks></member>
        <member name="M:Google.Maps.Feature.Shape.MapFeatureShape.#ctor">
            <summary>
            Constructs a GeometricMapFeature with empty BoundingBox at (0,0,0).
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.MapFeatureShape.Recenter">
            <summary>
            Sets the <see cref="P:Google.Maps.Feature.Shape.MapFeatureShape.Origin" /> to be the center of its bounding box, and transforms all
            contained geometries to be relative to this origin.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.MapFeatureShape.TranslateGeometry(UnityEngine.Vector2)">
            <summary>
            Translates the geometry by the supplied offset. This does not change the position of the
            <see cref="P:Google.Maps.Feature.Shape.MapFeatureShape.Origin" />.
            </summary>
            <param name="offset">An offset vector used for translation.</param></member>
        <member name="M:Google.Maps.Feature.Shape.MapFeatureShape.TranslateOrigin(UnityEngine.Vector2)">
            <summary>
            Moves the <see cref="P:Google.Maps.Feature.Shape.MapFeatureShape.Origin" /> by the supplied offset.
            </summary>
            <param name="offset">An offset vector used for translation.</param></member>
        <member name="M:Google.Maps.Feature.Shape.MapFeatureShape.CalculateLocalBoundingBox">
            <summary>
            Calculates and returns a local bounding box for all of the geometry
            represented by this object.
            </summary>
            <remarks>
            The bounding box is located relative to the Shape's origin, which means
            that the center of it might not be at (0, 0) if the <see cref="P:Google.Maps.Feature.Shape.MapFeatureShape.Origin" />
            is not at the center of all of the vertices.
            </remarks></member>
        <member name="M:Google.Maps.Feature.Shape.MapFeatureShape.InvalidateBoundingBox">
            <summary>
            Marks the cached value of CachedBoundingBox as out of date.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.MapFeatureShape.VerticesToBounds(System.Collections.Generic.IEnumerable{UnityEngine.Vector3})">
            <summary>
            Return a %Unity `Bounds` object that encapsulates the supplied vertices.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.MapFeatureShape.VerticesToBounds(System.Collections.Generic.IEnumerable{UnityEngine.Vector2})">
            <summary>
            Return a %Unity `Bounds` object that encapsulates the supplied vertices.
            </summary></member>
        <member name="T:Google.Maps.Feature.Shape.ModeledVolume">
            <summary>
            A geometric representation of a 3D volume constructed by explicitly
            specifying geometry data.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.ModeledVolume.Vertices">
            <summary>
            The %ModeledVolume's vertices.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.ModeledVolume.VertexBreaks">
            <summary>
            Separates the %ModeledVolume's vertices into discrete intervals, where
            each interval describes an individual mesh.
            </summary></member>
        <member name="F:Google.Maps.Feature.Shape.ModeledVolume.Triangles">
            <summary>
            The triangles that make up the %ModeledVolume. Each triangle is
            represented as a triplet of indexes into the %ModeledVolume's Vertices
            array.
            </summary></member>
        <member name="M:Google.Maps.Feature.Shape.ModeledVolume.#ctor(System.Collections.Generic.ICollection{UnityEngine.Vector3},System.Collections.Generic.ICollection{System.Int32},System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            The %ModeledVolume class constructor.
            </summary>
            <param name="vertices">The vertices that make up the mesh.</param>
            <param name="vertexBreaks">The %ModeledVolume's vertices, separated into
            discrete intervals, with each one describing an individual polygon.</param>
            <param name="triangles">A list of vertex indices that make up the mesh
            triangles. Each triplet represents a distinct triangle.</param></member>
        <member name="M:Google.Maps.Feature.Shape.ModeledVolume.TranslateGeometry(UnityEngine.Vector2)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Feature.Shape.ModeledVolume.CalculateLocalBoundingBox">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Feature.Style.Attachment.StyleAttachment">
            <summary>
            Attaches styling settings to any <see cref="T:Google.Maps.MapsService" /> components residing on the
            same <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Attachment.StyleAttachment.AreaWaterStyleSettings">
            <summary>
            Style settings for area water features.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Attachment.StyleAttachment.LineWaterStyleSettings">
            <summary>
            Style settings for line water features.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Attachment.StyleAttachment.RegionStyleSettings">
            <summary>
            Style settings for region features.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Attachment.StyleAttachment.SegmentStyleSettings">
            <summary>
            Style settings for segment features.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Attachment.StyleAttachment.ModeledStructureStyleSettings">
            <summary>
            Style settings for modeled structure features.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Attachment.StyleAttachment.ExtrudedStructureStyleSettings">
            <summary>
            Style settings for extruded structure features.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Attachment.StyleAttachment.GetSettings">
            <summary>
            Enumerate all of the attached <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings" /> instances.
            </summary>
            <returns>
            An enumerator for all of the attached <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings" /> instances.
            </returns></member>
        <member name="F:Google.Maps.Feature.Style.Attachment.StyleAttachment.SettingsChangeListeners">
            <summary>
            Listens for changes to the <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings" /> instances attached to
            this component.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Attachment.StyleAttachment.MapsService">
            <summary>
            Reference to a <see cref="T:Google.Maps.MapsService" /> instance. Used to refresh the
            <see cref="T:Google.Maps.MapsService" /> instance whenever one of the settings assets reports a change.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Attachment.StyleAttachment.OnEnableComplete">
            <summary>
            Has <see cref="M:Google.Maps.Feature.Style.Attachment.StyleAttachment.OnEnable" /> finished executing?
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Attachment.StyleAttachment.OnSettingsChanged(Google.Maps.Feature.Style.Settings.AbstractStyleSettings.ChangeEventArgs)">
            <summary>
            Listen for changes to the settings assets and refresh the <see cref="T:Google.Maps.MapsService" />
            instance if any are detected.
            </summary>
            <param name="args">
            Arguments to <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings.ChangeEventClass" />.
            </param></member>
        <member name="M:Google.Maps.Feature.Style.Attachment.StyleAttachment.OnEnable">
            <summary>
            Handle OnEnable event.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Attachment.StyleAttachment.OnDisable">
            <summary>
            Handle OnDisable event.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Attachment.StyleAttachment.Reset">
            <summary>
            Handle Reset event.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Attachment.StyleAttachment.OnValidate">
            <summary>
            Intended to handle a change to any of the references to a settings asset. Refreshes
            <see cref="T:Google.Maps.MapsService" /> and ensures that <see cref="F:Google.Maps.Feature.Style.Attachment.StyleAttachment.SettingsChangeListeners" /> is
            installed on the correct settings assets.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Attachment.StyleAttachment.UpdateGameObjectOptions(Google.Maps.GameObjectOptions)">
            <summary>
            Update a <see cref="T:Google.Maps.GameObjectOptions" /> instance with the style settings attached to
            this attachment.
            </summary>
            <param name="gameObjectOptions">The <see cref="T:Google.Maps.GameObjectOptions" /> to update.</param></member>
        <member name="T:Google.Maps.Feature.Style.ExtrudedStructureStyle">
            <summary>
            Encapsulates immutable styling information used to control how GameObjects
            are generated from <see cref="T:Google.Maps.Feature.ExtrudedStructure" />s.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.ExtrudedStructureStyle.RoofMaterialAlignmentType">
            <summary>
            A set of values that specify how the roof material is aligned.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.ExtrudedStructureStyle.RoofMaterialAlignmentType.AlignToWorld">
            <summary>
            Align the material in the XZ-axes of the parent
            <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.ExtrudedStructureStyle.RoofMaterialAlignmentType.AlignToDirection">
            <summary>
            Align the material in the direction of the
            <see cref="T:Google.Maps.Feature.ExtrudedStructure" />.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder">
            <summary>
            The %ExtrudedStructureStyle builder.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder.RoofMaterialAlignment">
            <summary>
            The type of alignment used to align the roof material, as one of the
            ExtrudedStructureStyle.RoofMaterialAlignmentType enumeration values.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder.ApplyFixedHeight">
            <summary>
            Specifies whether to override the ExtrudedStructure's height with
            FixedHeight. The default value is *false*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder.FixedHeight">
            <summary>
            When ApplyFixedHeight is set to *true*, the ExtrudedStructure is
            scaled to this height, measured in meters. The default value is *1*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder.ExtrudedBuildingFootprintHeight">
            <summary>
            The height applied to buildings extruded from a footprint only. This
            applies to buildings that contain no height information. The default
            value is *10*.
            </summary>
            <remarks>
            When the value of this property is *0*, footprint-only buildings aren't
            extruded, and appear on the map as normal regions.
            </remarks></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder.Prefab">
            <summary>
            If this property is set with a value, then it replaces all of the
            GamesObjects that the style is applied toâ€”with this prefab. The
            default value is *null*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder.RoofMaterial">
            <summary>
            The ExtrudedStructure's roof material. The default value is *null*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder.WallMaterial">
            <summary>
            The ExtrudedStructure's wall material. The default value is *null*.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder.#ctor">
            <summary>
            The %Builder class default constructor.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder.#ctor(Google.Maps.Feature.Style.ExtrudedStructureStyle)">
            <summary>
            A %Builder copy constructor that shallow-copies style values into the
            builder. Use this copy constructor when you want to create a new style
            object based on an existing <see cref="T:Google.Maps.Feature.Style.ExtrudedStructureStyle" />.
            </summary>
            <param name="style">A Style object.</param></member>
        <member name="M:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder.Build">
            <summary>
            Builds a new <see cref="T:Google.Maps.Feature.Style.ExtrudedStructureStyle" /> object from the
            values set on the builder.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.ExtrudedStructureStyle.DefaultStyle">
            <summary>
            Default styles.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.RoofMaterialAlignment">
            <summary>
            Specifies how the roof material is aligned. The default is to align the
            roof material in the direction of the <see cref="T:Google.Maps.Feature.ExtrudedStructure" />.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.ApplyFixedHeight">
            <summary>
            Specifies whether to override the ExtrudedStructure's height
            with <see cref="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.FixedHeight" />. The default value is *false*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.FixedHeight">
            <summary>
            When <see cref="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.ApplyFixedHeight" /> is set to *true*, the
            ExtrudedStructure is scaled to this height, measured in meters. The
            default value is *1*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.ExtrudedBuildingFootprintHeight">
            <summary>
            The height applied to buildings where the feature shape has no server-supplied height.
            Defaults to *10*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.Prefab">
            <summary>
            If a value for the property is set, then it replaces all of the
            GamesObjects that the style is applied to with this prefab. The default
            value is *null*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.RoofMaterial">
            <summary>
            The ExtrudedStructure's roof material. The default value is *null*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ExtrudedStructureStyle.WallMaterial">
            <summary>
            The ExtrudedStructure's  wall material. The default value is *null*.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.ExtrudedStructureStyle.AsBuilder">
            <summary>
            Returns a new <see cref="T:Google.Maps.Feature.Style.ExtrudedStructureStyle.Builder" /> based on this style object.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.IStyle">
            <summary>
            Immutable styling information used to control how GameObject are generated
            from <see cref="T:Google.Maps.Feature.MapFeature" />s.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.AreaWaterStyle">
            <summary>
            Encapsulates immutable styling information used to control how
            GameObjects are generated from <see cref="T:Google.Maps.Feature.AreaWater" />s.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.AreaWaterStyle.Builder">
            <summary>
            <see cref="T:Google.Maps.Feature.Style.AreaWaterStyle" /> builder.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.AreaWaterStyle.Builder.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.AreaWaterStyle.Builder.#ctor(Google.Maps.Feature.Style.RegionishStyle)">
            <summary>
            A copy constructor that shallow-copies style values into the builder.
            </summary>
            <remarks>
            Use when creating a new style object based on an existing <see cref="T:Google.Maps.Feature.Style.RegionishStyle" />.
            </remarks>
            <param name="style">The style object.</param></member>
        <member name="M:Google.Maps.Feature.Style.AreaWaterStyle.Builder.Build">
            <summary>
            Builds a new <see cref="T:Google.Maps.Feature.Style.AreaWaterStyle" /> from the values set on the
            builder.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.AreaWaterStyle.DefaultStyle">
            <summary>
            Default styles.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.AreaWaterStyle.AsBuilder">
            <summary>
            Returns a new <see cref="T:Google.Maps.Feature.Style.AreaWaterStyle.Builder" /> based on this style object.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.LineWaterStyle">
            <summary>
            Encapsulates immutable styling information used to control how GameObjects
            are generated from <see cref="T:Google.Maps.Feature.LineWater" />s.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.LineWaterStyle.Builder">
            <summary>
            The <see cref="T:Google.Maps.Feature.Style.LineWaterStyle" /> builder.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.LineWaterStyle.Builder.#ctor">
            <summary>
            The Builder class default constructor.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.LineWaterStyle.Builder.#ctor(Google.Maps.Feature.Style.LineWaterStyle)">
            <summary>
            A copy constructor that shallow-copies style values into the builder.
            </summary>
            <remarks>
            Use this copy constructor when you want to create a new Style object
            based on an existing <see cref="T:Google.Maps.Feature.Style.LineWaterStyle" />.
            </remarks>
            <param name="style">The Style object.</param></member>
        <member name="M:Google.Maps.Feature.Style.LineWaterStyle.Builder.Build">
            <summary>
            Builds a new <see cref="T:Google.Maps.Feature.Style.LineWaterStyle" /> from the values set on the
            builder.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.LineWaterStyle.DefaultStyle">
            <summary>
            Default styles.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.LineWaterStyle.AsBuilder">
            <summary>
            Returns a new <see cref="T:Google.Maps.Feature.Style.LineWaterStyle.Builder" /> based on this style object.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.ModeledStructureStyle">
            <summary>
            Encapsulates immutable styling information used to control how
            GameObjects are generated from <see cref="T:Google.Maps.Feature.ModeledStructure" />s.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.ModeledStructureStyle.Builder">
            <summary>
            The %ModeledStructureStyle builder.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ModeledStructureStyle.Builder.Prefab">
            <summary>
            If this property is set with a value, then it replaces all of the
            GamesObjects that the style is applied toâ€”with this prefab. The
            default value is *null*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ModeledStructureStyle.Builder.Material">
            <summary>
            A Material to apply to the entire building. The default value is *null*.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.ModeledStructureStyle.Builder.#ctor">
            <summary>
            The Builder class default constructor.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.ModeledStructureStyle.Builder.#ctor(Google.Maps.Feature.Style.ModeledStructureStyle)">
            <summary>
            A copy constructor that shallow-copies style values into the builder.
            </summary>
            <remarks>
            Use this copy constructor when you want to create a new style object
            based on an existing <see cref="T:Google.Maps.Feature.Style.ModeledStructureStyle" />.
            </remarks>
            <param name="style">The Style object.</param></member>
        <member name="M:Google.Maps.Feature.Style.ModeledStructureStyle.Builder.Build">
            <summary>
            Builds a new ModeledStructureStyle from the values set on the builder.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.ModeledStructureStyle.DefaultStyle">
            <summary>
            Default styles.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ModeledStructureStyle.Prefab">
            <summary>
            If this property is set, then it replaces all of the GamesObjects that
            the style is applied toâ€”with this prefab. The default value is *null*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.ModeledStructureStyle.Material">
            <summary>
            A Material to apply to the entire building. The default value is *null*.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.ModeledStructureStyle.AsBuilder">
            <summary>
            Returns a new <see cref="T:Google.Maps.Feature.Style.ModeledStructureStyle.Builder" /> based on this style object.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.RegionishStyle">
            <summary>
            Encapsulates immutable styling information used to control how GameObjects
            are generated from Area related feature types such as
            <see cref="T:Google.Maps.Feature.Region" /> and  <see cref="T:Google.Maps.Feature.AreaWater" />.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.RegionishStyle.RegionishStyleBuilder">
            <summary>
            <see cref="T:Google.Maps.Feature.Style.RegionishStyle" /> builder.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.RegionishStyle.RegionishStyleBuilder.Fill">
            <summary>
            Specifies whether to draw the area with a fill. The default value is
            *true*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.RegionishStyle.RegionishStyleBuilder.FillMaterial">
            <summary>
            The material used to fill the area. This value will be *null* for
            non-textured areas. The default value is *null*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.RegionishStyle.RegionishStyleBuilder.Outline">
            <summary>
            Specifies whether to draw the Area with an outline. The default value is
            *false*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.RegionishStyle.RegionishStyleBuilder.OutlineStyle">
            <summary>
            Styling information for the Area outline. The default value is
            <see cref="F:Google.Maps.Feature.Style.SegmentStyle.DefaultStyle" />.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.RegionishStyle.RegionishStyleBuilder.#ctor">
            <summary>
            The %RegionishStyleBuider class default constructor.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.RegionishStyle.RegionishStyleBuilder.#ctor(Google.Maps.Feature.Style.RegionishStyle)">
            <summary>
            A copy constructor that shallow-copies style values into the builder.
            Use this copy constructor when you want to create a new style object
            based on an existing <see cref="T:Google.Maps.Feature.Style.RegionishStyle" />.
            </summary>
            <param name="style">The Style object.</param></member>
        <member name="P:Google.Maps.Feature.Style.RegionishStyle.Fill">
            <summary>
            Specifies whether to draw the area with a fill. The default value is
            *true*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.RegionishStyle.FillMaterial">
            <summary>
            Area fill material. If this is null then a reasonable default will be used. Compatible with
            materials produced using <see cref="T:Google.Maps.Util.Material.BaseMapMaterialUtils" />, which includes a utility for
            producing materials with a uniform color. Defaults to null.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.RegionishStyle.Outline">
            <summary>
            Specifies whether to draw the Area with an outline. The default value is
            *false*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.RegionishStyle.OutlineStyle">
            <summary>
            Styling information for the Area outline. The default value is
            <see cref="F:Google.Maps.Feature.Style.SegmentStyle.DefaultStyle" />.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.RegionStyle">
            <summary>
            Encapsulates immutable styling information used to control how GameObjects
            are generated from <see cref="T:Google.Maps.Feature.Region" />s.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.RegionStyle.Builder">
            <summary>
            The %RegionStyle builder.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.RegionStyle.Builder.#ctor">
            <summary>
            Thne Builder class default constructor.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.RegionStyle.Builder.#ctor(Google.Maps.Feature.Style.RegionStyle)">
            <summary>
            A copy constructor that shallow-copies style values into the builder.
            </summary>
            <remarks>
            Use this copy constructor when you want to create a new style object
            based on an existing <see cref="T:Google.Maps.Feature.Style.RegionStyle" />.
            </remarks>
            <param name="style">The Style object.</param></member>
        <member name="M:Google.Maps.Feature.Style.RegionStyle.Builder.Build">
            <summary>
            Builds a new <see cref="T:Google.Maps.Feature.Style.RegionStyle" /> from the values set on the
            builder.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.RegionStyle.DefaultStyle">
            <summary>
            Default styles.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.RegionStyle.AsBuilder">
            <summary>
            Returns a new <see cref="T:Google.Maps.Feature.Style.RegionStyle.Builder" /> based on this style object.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.SegmentishStyle">
            <summary>
            Encapsulates immutable styling information that is used to control the way
            that GameObjects are  generated from line-related feature typesâ€”such as
            <see cref="T:Google.Maps.Feature.Segment" /> and  <see cref="T:Google.Maps.Feature.LineWater" />.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder">
            <summary>
            The %SegmentishStyle builder.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.Material">
            <summary>
            A material to apply to the segment.
            </summary>
            <remarks>
            Meshes created using the style default to %Unity's default
            MeshRenderer material in the event that no material is provided. The
            default value is *null*.
            </remarks></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.IntersectionMaterial">
            <inheritdoc cref="SegmentishStyle.IntersectionMaterial" /></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.IntersectionJoinLength">
            <inheritdoc cref="SegmentishStyle.IntersectionJoinLength" /></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.IntersectionArmLength">
            <inheritdoc cref="SegmentishStyle.IntersectionArmLength" /></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.MaxIntersectionArmDistance">
            <inheritdoc cref="SegmentishStyle.MaxIntersectionArmDistance" /></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.Width">
            <summary>
            The width of the Segment, in meters. The default value is *10*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.BorderMaterial">
            <summary>
            A material to apply to the border of the segment.
            </summary>
            <remarks>
            If a value for `%BorderMaterial` isn't set, then this value will be
            *null*, and no border is drawn. If a value is set, then an additional
            GameObject is created to represent the border of the Segment. This
            GameObject is a child of the primary GameObject, and is identical except
            for width, which is controlled by <see cref="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.Width" /> and
            <see cref="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.BorderWidth" />. To be effective, this material should have
            all of the properties of a normal basemap material, but with a
            <see cref="P:UnityEngine.Material.renderQueue" /> value that causes it to
            be rendered between basemap features and the primary segment
            <see cref="T:UnityEngine.Material" />.
            The border material is intended for use with roads of a single flat
            color. If a value for `%BorderMaterial` is set, then the  z-ordering for
            roads won't work. This works fine for flat colored roads, but
            `%BorderMaterial` should not be used with textured roads.
            </remarks></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.BorderWidth">
            <summary>
            The width of the Segment border, in meters. The default value is *1*.
            </summary>
            <remarks>
            The `%BorderWidth` is applied outside the segment. For example, a
            segment with `%Width` of *10* and `%BorderWidth` of *1* will have a
            total width of *12* meters. `%BorderWidth` is applied only when a
            <see cref="P:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.BorderMaterial" /> is not *null*.
            </remarks></member>
        <member name="M:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.#ctor">
            <summary>
            The `%SegmentishStyleBuilder` class default constructor.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.SegmentishStyle.SegmentishStyleBuilder.#ctor(Google.Maps.Feature.Style.SegmentishStyle)">
            <summary>
            A copy constructor that shallow-copies style values into the builder.
            </summary>
            <remarks>
            Use this copy constructor when you want to create a new style object
            based on an existing <see cref="T:Google.Maps.Feature.Style.SegmentishStyle" />.
            </remarks>
            <param name="style">The Style object.</param></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.Material">
            <summary>
            A material to apply to the segment.
            </summary>
            <remarks>
            Meshes created using the style default to %Unity's default MeshRenderer
            material in the event that no material is provided. The default value is
            *null*.
            </remarks></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.IntersectionMaterial">
            <summary /></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.IntersectionArmLength">
            <inheritdoc cref="SegmentStyleSettings.IntersectionArmLength" /></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.IntersectionJoinLength">
            <inheritdoc cref="SegmentStyleSettings.IntersectionJoinLength" /></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.MaxIntersectionArmDistance">
            <inheritdoc cref="SegmentStyleSettings.MaxIntersectionArmDistance" /></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.Width">
            <summary>
            The width of the Segment, in meters. The default value is *10*.
            </summary></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.BorderMaterial">
            <summary>
            A material to apply to the border of the segment.
            </summary>
            <remarks>
            If a value for `%BorderMaterial` isn't set, then this value will be
            *null*, and no border is drawn. If a value is set, then an additional
            GameObject is created to represent the border of the Segment. This
            GameObject is a child of the primary GameObject, and is identical except
            for width, which is controlled by <see cref="P:Google.Maps.Feature.Style.SegmentishStyle.Width" /> and
            <see cref="P:Google.Maps.Feature.Style.SegmentishStyle.BorderWidth" />. To be effective, this material should have
            all of the properties of a normal basemap material, but with a
            <see cref="P:UnityEngine.Material.renderQueue" /> value that causes it to
            be rendered between basemap features and the primary segment
            <see cref="T:UnityEngine.Material" />.
            The border material is intended for use with roads of a single flat
            color. If a value for `%BorderMaterial` is set, then the  z-ordering for
            roads won't work. This works fine for flat colored roads, but
            `%BorderMaterial` should not be used with textured roads.
            </remarks></member>
        <member name="P:Google.Maps.Feature.Style.SegmentishStyle.BorderWidth">
            <summary>
            The width of the Segment border, in meters. The default value is *1*.
            </summary>
            <remarks>
            The `%BorderWidth` is applied outside the segment. For example, a
            segment with `%Width` of *10* and `%BorderWidth` of *1* will have a
            total width of *12* meters. `%BorderWidth` is applied only when a
            <see cref="P:Google.Maps.Feature.Style.SegmentishStyle.BorderMaterial" /> is not *null*.
            </remarks></member>
        <member name="T:Google.Maps.Feature.Style.SegmentStyle">
            <summary>
            Encapsulates immutable styling information used to control how GameObjects
            are generated from <see cref="T:Google.Maps.Feature.Segment" />s.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.SegmentStyle.Builder">
            <summary>
            The %SegmentStyle builder.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.SegmentStyle.Builder.#ctor">
            <summary>
            The `Builder` class default constructor.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.SegmentStyle.Builder.#ctor(Google.Maps.Feature.Style.SegmentStyle)">
            <summary>
            A copy constructor that shallow-copies style values into the builder.
            </summary>
            <remarks>
            Use this copy constructor when you want to create a new style object
            based on an existing <see cref="T:Google.Maps.Feature.Style.SegmentStyle" />.
            </remarks>
            <param name="style">The Style object.</param></member>
        <member name="M:Google.Maps.Feature.Style.SegmentStyle.Builder.Build">
            <summary>
            Builds a new <see cref="T:Google.Maps.Feature.Style.SegmentStyle" /> from the values set on the
            builder.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.SegmentStyle.DefaultStyle">
            <summary>
            Default styles.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.SegmentStyle.AsBuilder">
            <summary>
            Returns a new <see cref="T:Google.Maps.Feature.Style.SegmentStyle.Builder" /> based on this style object.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings">
            <summary>
            Abstract base class for style settings scriptable objects.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings.ChangeEventArgs">
            <summary>
            Arguments for <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings.ChangeEventClass" />.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.AbstractStyleSettings.ChangeEventArgs.AbstractStyleSettings">
            <summary>
            The <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings" /> on which some values were changed.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.AbstractStyleSettings.ChangeEventArgs.#ctor(Google.Maps.Feature.Style.Settings.AbstractStyleSettings)">
            <summary>
            Constructor.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings.ChangeEventClass">
            <summary>
            Event that is triggered when the values of a <see cref="T:UnityEngine.ScriptableObject" /> are changed.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.AbstractStyleSettings.ChangeEvent">
            <summary>
            See documentation for <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings.ChangeEventClass" />.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.AbstractStyleSettings.NotifyListeners">
            <summary>
            Notify listeners that the settings on this instance have changed.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.AbstractStyleSettings.OnValidate">
            <summary>
            Handle Unity's OnValidate event.
            </summary></member>
        <member name="T:Google.Maps.Feature.Style.Settings.AreaWaterStyleSettings">
            <summary>
            Style settings scriptable object for area water styles.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.AreaWaterStyleSettings.FillMaterial">
            <summary>
            The material used to fill the area.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.AreaWaterStyleSettings.Outline">
            <summary>
            Specifies whether to draw the Area with an outline. The default value is
            *false*.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.AreaWaterStyleSettings.OutlineListener">
            <summary>
            Listens to <see cref="F:Google.Maps.Feature.Style.Settings.AreaWaterStyleSettings.Outline" /> for changes.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.AreaWaterStyleSettings.OnEnable">
            <summary>
            Handle Unity's OnEnable event.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.AreaWaterStyleSettings.OnValidate">
            <summary>
            Handle Unity's OnValidate event.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.AreaWaterStyleSettings.Apply(Google.Maps.Feature.Style.AreaWaterStyle)">
            <summary>
            Apply settings to <see cref="T:Google.Maps.Feature.Style.AreaWaterStyle" />.
            </summary>
            <param name="style"><see cref="T:Google.Maps.Feature.Style.AreaWaterStyle" /> to apply settings to.</param>
            <returns>New <see cref="T:Google.Maps.Feature.Style.AreaWaterStyle" /> with settings applied to it.</returns></member>
        <member name="T:Google.Maps.Feature.Style.Settings.ExtrudedStructureStyleSettings">
            <summary>
            Scriptable object for extruded structure settings.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.ExtrudedStructureStyleSettings.RoofMaterialAlignment">
            <summary>
            The type of alignment used to align the roof material.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.ExtrudedStructureStyleSettings.ApplyFixedHeight">
            <summary>
            Specifies whether to override the ExtrudedStructure's height with FixedHeight.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.ExtrudedStructureStyleSettings.FixedHeight">
            <summary>
            When ApplyFixedHeight is set to *true*, the ExtrudedStructure is scaled to this height,
            measured in meters.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.ExtrudedStructureStyleSettings.DefaultBuildingHeight">
            <summary>
            The height applied to buildings extruded from a footprint only. This
            applies to buildings that contain no height information.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.ExtrudedStructureStyleSettings.RoofMaterial">
            <summary>
            The material to apply to the roofs of extruded structures.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.ExtrudedStructureStyleSettings.WallMaterial">
            <summary>
            The material to apply to the exterior walls of extruded structures.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.ExtrudedStructureStyleSettings.Apply(Google.Maps.Feature.Style.ExtrudedStructureStyle)">
            <summary>
            Apply settings to <see cref="T:Google.Maps.Feature.Style.ExtrudedStructureStyle" />.
            </summary>
            <param name="style">
            <see cref="T:Google.Maps.Feature.Style.ExtrudedStructureStyle" /> to apply settings to.
            </param>
            <returns>New <see cref="T:Google.Maps.Feature.Style.ExtrudedStructureStyle" /> with settings applied.</returns></member>
        <member name="T:Google.Maps.Feature.Style.Settings.LineWaterStyleSettings">
            <summary>
            Scriptable object for segment style settings.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.LineWaterStyleSettings.Material">
            <summary>
            Fill material for segments.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.LineWaterStyleSettings.Width">
            <summary>
            Segment width.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.LineWaterStyleSettings.Apply(Google.Maps.Feature.Style.LineWaterStyle)">
            <summary>
            Apply settings to <see cref="T:Google.Maps.Feature.Style.LineWaterStyle" />.
            </summary>
            <param name="style"><see cref="T:Google.Maps.Feature.Style.LineWaterStyle" /> to apply settings to.</param>
            <returns>New <see cref="T:Google.Maps.Feature.Style.LineWaterStyle" /> with settings applied.</returns></member>
        <member name="T:Google.Maps.Feature.Style.Settings.ModeledStructureStyleSettings">
            <summary>
            Scriptable object for modeled structure settings.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.ModeledStructureStyleSettings.Material">
            <summary>
            The material to use with the structure's model.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.ModeledStructureStyleSettings.Apply(Google.Maps.Feature.Style.ModeledStructureStyle)">
            <summary>
            Apply settings to <see cref="T:Google.Maps.Feature.Style.ModeledStructureStyle" />.
            </summary>
            <param name="style">
            <see cref="T:Google.Maps.Feature.Style.ModeledStructureStyle" /> to apply settings to.
            </param>
            <returns>New <see cref="T:Google.Maps.Feature.Style.ModeledStructureStyle" /> with settings applied.</returns></member>
        <member name="T:Google.Maps.Feature.Style.Settings.RegionStyleSettings">
            <summary>
            Style settings scriptable object for area water styles.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.RegionStyleSettings.FillMaterial">
            <summary>
            The material used to fill the area.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.RegionStyleSettings.Outline">
            <summary>
            Specifies whether to draw the Area with an outline. The default value is
            *false*.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.RegionStyleSettings.OutlineListener">
            <summary>
            Listens to <see cref="F:Google.Maps.Feature.Style.Settings.RegionStyleSettings.Outline" /> for changes.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.RegionStyleSettings.OnEnable">
            <summary>
            Handle Unity's OnEnable event.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.RegionStyleSettings.OnValidate">
            <summary>
            Handle Unity's OnValidate event.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.RegionStyleSettings.Apply(Google.Maps.Feature.Style.RegionStyle)">
            <summary>
            Apply settings to <see cref="T:Google.Maps.Feature.Style.RegionStyle" />.
            </summary>
            <param name="style"><see cref="T:Google.Maps.Feature.Style.RegionStyle" /> to apply settings to.</param>
            <returns>New <see cref="T:Google.Maps.Feature.Style.RegionStyle" /> with settings applied.</returns></member>
        <member name="T:Google.Maps.Feature.Style.Settings.SegmentStyleSettings">
            <summary>
            Scriptable object for segment style settings.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.SegmentStyleSettings.Material">
            <summary>
            Fill material for segments.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.SegmentStyleSettings.IntersectionMaterial">
            <summary>
            Intersection material for segments.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.SegmentStyleSettings.IntersectionArmLength">
            <summary>
            The length of the intersection arms.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.SegmentStyleSettings.IntersectionJoinLength">
            <summary>
            If the length of a road connecting two intersections is shorter than the join length, the
            two intersections are joined.
            </summary>
            <remarks>
            In most cases, this should be greater than twice the arm length to avoid overlapping arms.
            </remarks></member>
        <member name="F:Google.Maps.Feature.Style.Settings.SegmentStyleSettings.MaxIntersectionArmDistance">
            <summary>
            The maximum distance an intersection arm can start from the center of the intersection
            it's connected with.
            </summary>
            <remarks>
            Two roads may overlap indefinitely, usually caused by a large road width. In these cases,
            it may not be possible to generate an acceptable intersection. Settings a maximum arm
            distance prevents abnormally large intersections from being generated.
            </remarks></member>
        <member name="F:Google.Maps.Feature.Style.Settings.SegmentStyleSettings.Width">
            <summary>
            Segment width.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.SegmentStyleSettings.BorderMaterial">
            <summary>
            Material for borders. *null* if there is no border.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.SegmentStyleSettings.BorderWidth">
            <summary>
            Border width.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.SegmentStyleSettings.Apply(Google.Maps.Feature.Style.SegmentStyle)">
            <summary>
            Apply settings to <see cref="T:Google.Maps.Feature.Style.SegmentStyle" />.
            </summary>
            <param name="style"><see cref="T:Google.Maps.Feature.Style.SegmentStyle" /> to apply settings to.</param>
            <returns>New <see cref="T:Google.Maps.Feature.Style.SegmentStyle" /> with settings applied.</returns></member>
        <member name="T:Google.Maps.Feature.Style.Settings.SettingsChangeListener">
            <summary>
            Listens for changes to an <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings" /> instance.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.SettingsChangeListener.SettingsReference">
            <summary>
            Updated by <see cref="M:Google.Maps.Feature.Style.Settings.SettingsChangeListener.UpdateSettingsReference(Google.Maps.Feature.Style.Settings.AbstractStyleSettings)" />. Holds a reference to the
            <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings" /> instance we're listening to.
            </summary></member>
        <member name="F:Google.Maps.Feature.Style.Settings.SettingsChangeListener.ListenerDelegate">
            <summary>
            The delegate to trigger when the <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings" /> changes.
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.SettingsChangeListener.#ctor(UnityEngine.Events.UnityAction{Google.Maps.Feature.Style.Settings.AbstractStyleSettings.ChangeEventArgs})">
            <summary>
            Constructor.
            <param name="listenerDelegate">
            The delegate to trigger when the <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings" /> changes.
            </param>
            </summary></member>
        <member name="M:Google.Maps.Feature.Style.Settings.SettingsChangeListener.UpdateSettingsReference(Google.Maps.Feature.Style.Settings.AbstractStyleSettings)">
            <summary>
            Update the reference to the <see cref="T:Google.Maps.Feature.Style.Settings.AbstractStyleSettings" /> instance that we're
            listening to. Adds <see cref="F:Google.Maps.Feature.Style.Settings.SettingsChangeListener.ListenerDelegate" /> as a listener on the new instance,
            if any, and removes it from the previous instance, if any.
            </summary></member>
        <member name="T:Google.Maps.Feature.WaterMetadata">
            <summary>
            Unity-independent representation of immutable properties of water feature.
            </summary></member>
        <member name="M:Google.Maps.Feature.WaterMetadata.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="placeId">Place ID.</param>
            <param name="name">The name of this feature, used to name generated Unity objects.</param></member>
        <member name="T:Google.Maps.GameObjectOptions">
            <summary>
            Encapsulates styling options for map feature GameObjects.
            </summary></member>
        <member name="F:Google.Maps.GameObjectOptions.SegmentStyle">
            <summary>
            The default style applied to generated Feature.Segment GameObjects.
            </summary></member>
        <member name="F:Google.Maps.GameObjectOptions.RegionStyle">
            <summary>
            The default style applied to generated Feature.Region GameObjects.
            </summary></member>
        <member name="F:Google.Maps.GameObjectOptions.ExtrudedStructureStyle">
            <summary>
            The default style applied to generated Feature.ExtrudedStructure GameObjects.
            </summary></member>
        <member name="F:Google.Maps.GameObjectOptions.ModeledStructureStyle">
            <summary>
            The default style applied to generated Feature.ModeledStructure GameObjects.
            </summary></member>
        <member name="F:Google.Maps.GameObjectOptions.AreaWaterStyle">
            <summary>
            The default style applied to generated Feature.AreaWater GameObjects.
            </summary></member>
        <member name="F:Google.Maps.GameObjectOptions.LineWaterStyle">
            <summary>
            The default style applied to generated Feature.LineWater GameObjects.
            </summary></member>
        <member name="F:Google.Maps.GameObjectOptions.TerrainStyle">
            <summary>
            The default style applied to generated Terrain GameObjects.
            </summary></member>
        <member name="T:Google.Maps.GameObjectStyle">
            <summary>
            Style used to create a <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="T:Google.Maps.GameObjectStyle.GameObjectStyleBuilder">
            <summary>
            Builder for <see cref="T:Google.Maps.GameObjectStyle" /> instances.
            </summary></member>
        <member name="F:Google.Maps.GameObjectStyle.GameObjectStyleBuilder.GameObjectLayer">
            <summary>
            Layer to place <see cref="T:UnityEngine.GameObject" /> into. If null layer is not modified.
            </summary></member>
        <member name="M:Google.Maps.GameObjectStyle.GameObjectStyleBuilder.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.GameObjectStyle.GameObjectStyleBuilder.#ctor(Google.Maps.GameObjectStyle)">
            <summary>
            Constructor to make a builder from a <see cref="T:Google.Maps.GameObjectStyle" /> instance.
            </summary>
            <param name="style"><see cref="T:Google.Maps.GameObjectStyle" /> to construct builder from.</param></member>
        <member name="P:Google.Maps.GameObjectStyle.GameObjectLayer">
            <summary>
            Layer to place <see cref="T:UnityEngine.GameObject" /> into. If null layer is not modified.
            </summary></member>
        <member name="T:Google.Maps.ICoroutineStarterListener">
            <summary>
            Interface for clients of <see cref="T:Google.Maps.Util.ICoroutineStarter" />. Clients should not start
            coroutines until <see cref="M:Google.Maps.ICoroutineStarterListener.OnCoroutineStartup(Google.Maps.Util.ICoroutineStarter)" /> has been triggered. If
            <see cref="M:Google.Maps.ICoroutineStarterListener.OnCoroutineShutdown(Google.Maps.Util.ICoroutineStarter)" /> is triggered, no further coroutines should be started until
            <see cref="M:Google.Maps.ICoroutineStarterListener.OnCoroutineStartup(Google.Maps.Util.ICoroutineStarter)" /> has been triggered again.
            </summary></member>
        <member name="M:Google.Maps.ICoroutineStarterListener.OnCoroutineShutdown(Google.Maps.Util.ICoroutineStarter)">
            <summary>
            When this event is triggered, it means that <see cref="T:Google.Maps.Util.ICoroutineStarter" /> has stopped
            all of its coroutines. This can happen at any point without any intervention from
            clients of <see cref="T:Google.Maps.Util.ICoroutineStarter" />. Restore the client to a valid state and wait
            until <see cref="M:Google.Maps.ICoroutineStarterListener.OnCoroutineStartup(Google.Maps.Util.ICoroutineStarter)" /> to start any coroutines.
            </summary>
            <param name="coroutineStarter">
            The <see cref="T:Google.Maps.Util.ICoroutineStarter" /> that triggered this event.
            </param></member>
        <member name="M:Google.Maps.ICoroutineStarterListener.OnCoroutineStartup(Google.Maps.Util.ICoroutineStarter)">
            <summary>
            When this event is triggered, it is safe to start coroutines until
            <see cref="M:Google.Maps.ICoroutineStarterListener.OnCoroutineShutdown(Google.Maps.Util.ICoroutineStarter)" /> is triggered.
            </summary>
            <param name="coroutineStarter">
            The <see cref="T:Google.Maps.Util.ICoroutineStarter" /> that triggered this event.
            </param></member>
        <member name="T:Google.Maps.IDiagnosableService">
            <summary>
            A class that can have diagnostics enabled or disabled.
            </summary></member>
        <member name="P:Google.Maps.IDiagnosableService.DiagnosticsEnabled">
            <summary>
            Whether diagnostics are enabled.
            </summary></member>
        <member name="T:Google.Maps.IGameObjectOptionsProvider">
            <summary>
            Provides a <see cref="T:Google.Maps.GameObjectOptions" /> instance on request.
            </summary></member>
        <member name="M:Google.Maps.IGameObjectOptionsProvider.MaybeGetGameObjectOptions">
            <summary>
            Returns a <see cref="T:Google.Maps.GameObjectOptions" /> instance.
            </summary></member>
        <member name="T:Google.Maps.Impressions.ImpressionsManager">
            <summary>
            Handles impressions reporting.
            </summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionsManager.SaveImpressionsIntervalMs">
            <summary>
            Duration to wait between saving presented impressions to disk.
            </summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionsManager.RequestSenderWaitSeconds">
            <summary>
            Duration to wait between checking if any network requests need to be made.
            </summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionsManager.MaxImpressionsPerBatch">
            <summary>
            Maximum number of impressions that can be logged to the server in a batch.
            </summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionsManager.RequestHeaders">
            <summary>
            Request headers specifying the post data content type, and app identifiers on mobile
            platforms.
            </summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionsManager.FileThread">
            <summary>
            Thread used to load/save impressions from/to disk.
            </summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionsManager.ServerQueue">
            <summary>
            Queue of impressions to send to the server.
            </summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionsManager.WaitingImpressions">
            <summary>
            Impressions that came in while waiting for the file reading thread to finish.
            </summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionsManager.PresentedImpressions">
            <summary>Tracks presented impressions. Thread-safe.</summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionsManager.ApiKey">
            <summary>API key.</summary></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.Awake">
            <summary>Part of Unity's MonoBehaviour lifecycle.</summary></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.OnEnable">
            <summary>
            Called by Unity when the script is enabled. Starts the background coroutines (note that
            Unity cancels coroutines when the script is disabled).
            </summary></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.OnDisable">
            <summary>
            Called by Unity when the script is disabled. Stops the background coroutines in case
            Unity doesn't, in order to prevent duplicates when the script is re-enabled.
            </summary></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.OnDestroy">
            <summary>Part of Unity's MonoBehaviour lifecycle.</summary></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.SetApiKey(System.String)">
            <summary>
            Sets the API key.
            </summary></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.RunBackgroundFileThread">
            <summary>
            Loads the persisted state from disk. Periodically saves presented impressions state to disk.
            </summary>
            <remarks>
            This is run in its own thread, which is started in Awake().
            </remarks></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.ReportImpression(Google.Maps.Impressions.ImpressionInfo)">
            <summary>Logs an impression.</summary></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.FlushWaitingImpressions">
            <summary>Processes all pending impressions.</summary></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.ProcessImpression(Google.Maps.Impressions.ImpressionInfo)">
            <summary>Processes an impression.</summary>
            <param name="impressionInfo">The ImpressionInfo to process.</param></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.ProcessPresented(Google.Maps.Impressions.ImpressionInfo)">
            <summary>
            Processes an impression of type Presented.
            </summary>
            <param name="impressionInfo">The impression to process.</param></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.ProcessInteraction(Google.Maps.Impressions.ImpressionInfo)">
            <summary>
            Processes an impression of type Interaction.
            </summary>
            <param name="impressionInfo">The impression to process.</param></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.FormatLocationName(System.String)">
            <summary>
            Converts a place id to a playable location resource name.
            </summary></member>
        <member name="M:Google.Maps.Impressions.ImpressionsManager.RequestSender">
            <summary>
            Regularly checks if there are any pending network requests and sends them.
            </summary></member>
        <member name="T:Google.Maps.Impressions.ImpressionInfo">
            <summary>
            Information about an impression to log to the server.
            </summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionInfo.PlaceInfo">
            <summary>
            Location and in game type.
            </summary></member>
        <member name="F:Google.Maps.Impressions.ImpressionInfo.Type">
            <summary>
            Type of impression.
            </summary></member>
        <member name="M:Google.Maps.Impressions.ImpressionInfo.#ctor(System.Int32,System.String,Google.Maps.PlayableLocations.V3.Impression.Types.ImpressionType)">
            <summary>
            Constructor.
            </summary></member>
        <member name="T:Google.Maps.Impressions.PlaceInfo">
            <summary>
            A game object location, containing both the location and the in-game type placed there.
            </summary></member>
        <member name="F:Google.Maps.Impressions.PlaceInfo.GameObjectType">
            <summary>
            Game object type.
            </summary></member>
        <member name="F:Google.Maps.Impressions.PlaceInfo.PlaceId">
            <summary>
            Place ID.
            </summary></member>
        <member name="M:Google.Maps.Impressions.PlaceInfo.#ctor(System.Int32,System.String)">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.Impressions.PlaceInfo.Equals(Google.Maps.Impressions.PlaceInfo)">
            <summary>
            Returns whether this object is equal to the given object.
            </summary></member>
        <member name="M:Google.Maps.Impressions.PlaceInfo.Equals(System.Object)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Impressions.PlaceInfo.GetHashCode">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Impressions.PresentedImpressions">
            <summary>
            Tracks when playable locations were last presented to the user in order to deduplicate
            impressions sent to the server.
            This class is thread-safe.
            </summary></member>
        <member name="F:Google.Maps.Impressions.PresentedImpressions.Lock">
            <summary>Lock guarding mutable instance variables.</summary></member>
        <member name="F:Google.Maps.Impressions.PresentedImpressions.FileLock">
            <summary>Lock guarding read/write to disk.</summary></member>
        <member name="F:Google.Maps.Impressions.PresentedImpressions.ExpiryTimeSpan">
            <summary>
            If impressions have not been presented within this time span, they are removed.
            </summary></member>
        <member name="F:Google.Maps.Impressions.PresentedImpressions.StateSaveFilePath">
            <summary>Path to persist state to.</summary></member>
        <member name="F:Google.Maps.Impressions.PresentedImpressions.Clock">
            <summary>System clock.</summary></member>
        <member name="F:Google.Maps.Impressions.PresentedImpressions.Impressions">
            <summary>
            Map from game object locations to the most recent time they were presented to the user.
            </summary>
            <remarks>
            Location is removed from this dictionary when the player interacts with it.
            </remarks></member>
        <member name="F:Google.Maps.Impressions.PresentedImpressions.RequiresSave">
            <summary>Whether the Presented dictionary has been modified since last save.</summary></member>
        <member name="F:Google.Maps.Impressions.PresentedImpressions._IsLoaded">
            <summary>Whether the state has been loaded from disk.</summary></member>
        <member name="M:Google.Maps.Impressions.PresentedImpressions.#ctor(System.String,Google.Maps.Util.IClock)">
            <summary>
            Constructor.
            </summary>
            <param name="stateSaveFilePath">Path for saving the presented impressions to disk.</param>
            <param name="clock">System clock interface.</param></member>
        <member name="P:Google.Maps.Impressions.PresentedImpressions.IsLoaded">
            <summary>Whether the presented impressions state has been loaded.</summary></member>
        <member name="M:Google.Maps.Impressions.PresentedImpressions.Load">
            <summary>Loads presented impressions from disk.</summary></member>
        <member name="M:Google.Maps.Impressions.PresentedImpressions.RemoveExpiredImpressions">
            <summary>Removes all expired presented impressions.</summary></member>
        <member name="M:Google.Maps.Impressions.PresentedImpressions.Save">
            <summary>
            Removes expired presented impressions and saves the state to disk, if the Presented
            dictionary has been modified since last save.
            </summary></member>
        <member name="M:Google.Maps.Impressions.PresentedImpressions.AddImpression(Google.Maps.Impressions.PlaceInfo)">
            <summary>Adds a presented impression and returns true if it is new.</summary></member>
        <member name="M:Google.Maps.Impressions.PresentedImpressions.RemoveImpression(Google.Maps.Impressions.PlaceInfo)">
            <summary>Removes a presented impression.</summary></member>
        <member name="T:Google.Maps.IO.IFileOps">
            <summary>
            Interface for class providing basic file operations.
            </summary></member>
        <member name="M:Google.Maps.IO.IFileOps.Exists(System.String)">
            <summary>
            Returns true if the given file exists.
            </summary>
            <param name="path">The path to check for existence.</param>
            <returns>True if the file exists, false otherwise.</returns></member>
        <member name="M:Google.Maps.IO.IFileOps.Delete(System.String)">
            <summary>
            Deletes a file if it exists. If the file doesn't exist, does nothing.
            </summary>
            <param name="path">The path of the file to delete.</param>
            <exception cref="T:System.IO.IOException">Thrown if file couldn't be deleted.</exception></member>
        <member name="M:Google.Maps.IO.IFileOps.MaybeCreate(System.String)">
            <summary>
            Creates a file if it doesn't exist already.
            </summary>
            <param name="path">The path of the file to create.</param>
            <exception cref="T:System.IO.IOException">Thrown if file couldn't be deleted.</exception>
            <remarks>
            For now we just need to create the file, not read or write it. In the future, this might be
            adapted to return an abstract stream handle to perform these operations on.
            </remarks></member>
        <member name="M:Google.Maps.IO.IFileOps.GetPersistentDataPath">
            <summary>
            Returns a path where data will be persisted between sessions.
            </summary></member>
        <member name="M:Google.Maps.IO.IFileOps.ConcatPaths(System.String,System.String)">
            <summary>
            Concatenates two file paths.
            </summary></member>
        <member name="T:Google.Maps.IO.UnityFileOps">
            <summary>
            <see cref="T:Google.Maps.IO.IFileOps" /> implementation for Unity.
            </summary></member>
        <member name="M:Google.Maps.IO.UnityFileOps.Exists(System.String)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.IO.UnityFileOps.Delete(System.String)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.IO.UnityFileOps.MaybeCreate(System.String)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.IO.UnityFileOps.GetPersistentDataPath">
            <inheritdoc /></member>
        <member name="M:Google.Maps.IO.UnityFileOps.ConcatPaths(System.String,System.String)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Loading.MapLoader">
            <summary>
            Script that attaches to a GameObject with a Camera component, and loads a region of the map
            visible to that camera.
            </summary></member>
        <member name="F:Google.Maps.Loading.MapLoader.MapsService">
            <summary>The <see cref="T:Google.Maps.MapsService" /> to be used to load the map.</summary></member>
        <member name="F:Google.Maps.Loading.MapLoader.Zoom">
            <summary>Zoom level at which to load the map.</summary></member>
        <member name="T:Google.Maps.Loading.MapLoader.RegionShapeEnum">
            <summary>Enum representing the possible shapes of map regions to load.</summary></member>
        <member name="F:Google.Maps.Loading.MapLoader.RegionShapeEnum.Circle">
            <summary>Loads a circular region of the map centered on the camera.</summary></member>
        <member name="F:Google.Maps.Loading.MapLoader.RegionShapeEnum.Viewport">
            <summary>Loads the region of the map visible to the camera.</summary></member>
        <member name="F:Google.Maps.Loading.MapLoader.RegionShape">
            <summary>Shape of region to load.</summary></member>
        <member name="F:Google.Maps.Loading.MapLoader.Horizon">
            <summary>Maximum distance from the camera at which to load the map.</summary></member>
        <member name="F:Google.Maps.Loading.MapLoader.UnloadUnusedSeconds">
            <summary>
            Only unload parts of the map that have been inactive for at least this long.
            </summary></member>
        <member name="F:Google.Maps.Loading.MapLoader.GameObjectOptions">
            <summary>
            Options used to load the map. Initialized with <see cref="M:Google.Maps.Loading.MapLoader.Init(Google.Maps.GameObjectOptions)" />.
            </summary></member>
        <member name="F:Google.Maps.Loading.MapLoader.Camera">
            <summary>Camera component of the GameObject that this script is attached to.</summary></member>
        <member name="F:Google.Maps.Loading.MapLoader.MixedZoom">
            <summary>Component of the GameObject that contains mixed zoom options.</summary></member>
        <member name="M:Google.Maps.Loading.MapLoader.Start">
            <summary>Called by Unity when the script is enabled.</summary></member>
        <member name="M:Google.Maps.Loading.MapLoader.Init(Google.Maps.GameObjectOptions)">
            <summary>
            Initializes the script with options to use when loading the map. This must be called before
            <see cref="M:Google.Maps.Loading.MapLoader.Load" /> is called for the first time.
            </summary>
            <param name="loadingOptions">Options used to load the map.</param></member>
        <member name="M:Google.Maps.Loading.MapLoader.Load">
            <summary>Loads the region of the map based on the camera's current position.</summary></member>
        <member name="M:Google.Maps.Loading.MapLoader.UnloadUnused">
            <summary>
            Unloads parts of the map that have not been loaded or displayed in the last
            <see cref="F:Google.Maps.Loading.MapLoader.UnloadUnusedSeconds" /> seconds.
            </summary></member>
        <member name="M:Google.Maps.Loading.MapLoader.TryGetDependencies">
            <summary>
            Gets the dependencies for this <see cref="T:Google.Maps.Loading.MapLoader" /> if they aren't already referenced.
            </summary></member>
        <member name="M:Google.Maps.Loading.MapLoader.OnPreCull">
            <summary>Called by Unity before the attached camera culls the scene for rendering.</summary>
            <remarks>
            The visibility of GameObjects to the attached camera is determined after this method is
            called. See https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnPreCull.html for more
            information.
            </remarks></member>
        <member name="M:Google.Maps.Loading.MapLoader.AddLoadRegion(Google.Maps.MapLoadRegion)">
            <summary>
            Adds a load region shape to the given <see cref="T:Google.Maps.MapLoadRegion" />.
            </summary>
            <param name="region">The <see cref="T:Google.Maps.MapLoadRegion" /> to add the region shape to.</param></member>
        <member name="T:Google.Maps.Loading.MixedZoom">
            <summary>
            Extra parameters for a <see cref="T:Google.Maps.Loading.MapLoader" /> to load the map at lower zoom levels further
            from the camera.
            </summary></member>
        <member name="F:Google.Maps.Loading.MixedZoom.ForegroundDistance">
            <summary>
            Parts of the map within this many world space units of the camera position will be loaded at
            the zoom level set by <see cref="F:Google.Maps.Loading.MapLoader.Zoom" />.
            </summary></member>
        <member name="F:Google.Maps.Loading.MixedZoom.FalloffDistance">
            <summary>
            The distance beyond <see cref="F:Google.Maps.Loading.MixedZoom.ForegroundDistance" /> that is loaded one zoom level lower
            than the level set by <see cref="F:Google.Maps.Loading.MapLoader.Zoom" />. After that, the distance between zoom
            levels doubles each time.
            </summary></member>
        <member name="T:Google.Maps.Loading.MixedZoomOptions">
            <summary>Parameters for mixed zoom, bundled together for passing around internally.</summary></member>
        <member name="F:Google.Maps.Loading.MixedZoomOptions.ForegroundZoom">
            <summary>Foreground zoom level, between 0 and 17 inclusive.</summary></member>
        <member name="F:Google.Maps.Loading.MixedZoomOptions.ForegroundDistance">
            <summary>
            Distance from the camera location to load at <see cref="F:Google.Maps.Loading.MixedZoomOptions.ForegroundZoom" />.
            </summary></member>
        <member name="F:Google.Maps.Loading.MixedZoomOptions.FalloffDistance">
            <summary>
            Distance between <see cref="F:Google.Maps.Loading.MixedZoomOptions.ForegroundDistance" /> and the next drop in zoom level.
            </summary></member>
        <member name="M:Google.Maps.Loading.MixedZoomOptions.#ctor(System.Int32,System.Single,System.Single)">
            <summary>Constructor.</summary>
            <param name="foregroundZoom">Foreground zoom.</param>
            <param name="foregroundDistance">Foreground distance.</param>
            <param name="falloffDistance">Falloff distance.</param></member>
        <member name="T:Google.Maps.Logging.DiskLogSaver">
            <summary>Handles loading and saving Clearcut logs from and to disk.</summary></member>
        <member name="F:Google.Maps.Logging.DiskLogSaver.Filename">
            <summary>Full path of the file to load from and save to.</summary></member>
        <member name="F:Google.Maps.Logging.DiskLogSaver.WorkQueue">
            <summary>Work queue to save metrics on a separate thread.</summary></member>
        <member name="F:Google.Maps.Logging.DiskLogSaver.NextSave">
            <summary>
            The next time that <see cref="M:Google.Maps.Logging.DiskLogSaver.SaveRateLimited(Google.Maps.Proto.MuskClearcut)" /> will write to disk.
            </summary></member>
        <member name="F:Google.Maps.Logging.DiskLogSaver.SaveInterval">
            <summary>Minimum interval between writes for <see cref="M:Google.Maps.Logging.DiskLogSaver.SaveRateLimited(Google.Maps.Proto.MuskClearcut)" />.</summary></member>
        <member name="M:Google.Maps.Logging.DiskLogSaver.#ctor(System.String)">
            <summary>Constructor.</summary>
            <param name="filename">Full path of the file to load from and save to.</param></member>
        <member name="M:Google.Maps.Logging.DiskLogSaver.Load(System.DateTime@)">
            <summary>Loads metrics from disk.</summary>
            <param name="lastWriteTimeUtc">Last time the file was written.</param>
            <returns>
            Metrics, or null if the file doesn't exist or there was an error reading it.
            </returns></member>
        <member name="M:Google.Maps.Logging.DiskLogSaver.SaveRateLimited(Google.Maps.Proto.MuskClearcut)">
            <summary>
            Saves metrics to disk. If called less than <see cref="F:Google.Maps.Logging.DiskLogSaver.SaveInterval" /> after the last save,
            does nothing.
            </summary>
            <param name="metrics">Metrics to save.</param></member>
        <member name="M:Google.Maps.Logging.DiskLogSaver.SaveNow(Google.Maps.Proto.MuskClearcut)">
            <summary>Saves metrics to disk.</summary>
            <param name="metrics">Metrics to save.</param></member>
        <member name="T:Google.Maps.Logging.Exceptions.DoesNotThrowLoggableExceptionsAttribute">
            <summary>
            Attribute used to indicate that exceptions thrown by a method (or all methods of a class)
            are not loggable. Suppresses <see cref="T:Google.Maps.Logging.Exceptions.ExceptionHandler" /> usage errors thrown by static
            code analyzers.
            </summary></member>
        <member name="T:Google.Maps.Logging.Exceptions.ExceptionHandler">
            <summary>
            Used to log uncaught exceptions raised from an invoked method or running coroutine within the
            SDK. Exceptions tagged with <see cref="M:Google.Maps.Logging.Exceptions.ExceptionHandler.NotLoggable``1(``0)" /> will not be logged.
            </summary>
            <remarks>
            See go/musk-uncaught-exceptions for more information.
            </remarks></member>
        <member name="F:Google.Maps.Logging.Exceptions.ExceptionHandler.NotLoggableKey">
            <summary>
            An exception is not loggable if <see cref="P:System.Exception.Data" /> contains this key.
            </summary></member>
        <member name="T:Google.Maps.Logging.Exceptions.ExceptionHandler.LoggedOrUserException">
            <summary>
            Unhandled exception that has already been processed by <see cref="T:Google.Maps.Logging.Exceptions.ExceptionHandler" />.
            <see cref="T:Google.Maps.Logging.Exceptions.ExceptionHandler" /> will rethrow any caught exceptions of this type.
            </summary></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.LoggedOrUserException.#ctor(System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="innerException">The processed exception.</param></member>
        <member name="T:Google.Maps.Logging.Exceptions.ExceptionHandler.AssemblyNameComparer">
            <summary>
            Comparer for <see cref="T:System.Reflection.AssemblyName" />, which does not override `Equals`.
            </summary></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.AssemblyNameComparer.Equals(System.Reflection.AssemblyName,System.Reflection.AssemblyName)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.AssemblyNameComparer.GetHashCode(System.Reflection.AssemblyName)">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Logging.Exceptions.ExceptionHandler.StackTraceLimit">
            <summary>
            The number of frames from the stack trace to log (top-to-bottom).
            </summary></member>
        <member name="F:Google.Maps.Logging.Exceptions.ExceptionHandler.NonUserAssemblyNames">
            <summary>
            The names of non-user assemblies. Methods inside these assembly are considered non-user
            methods, and can be logged without issues concerning storing PII data.
            </summary></member>
        <member name="F:Google.Maps.Logging.Exceptions.ExceptionHandler.LoggableNamespaceAllowList">
            <summary>
            The namespaces that will be logged when an exception is thrown from a method within it.
            Note that that the method must also be in an assembly specified in
            <see cref="F:Google.Maps.Logging.Exceptions.ExceptionHandler.NonUserAssemblyNames" />.
            </summary></member>
        <member name="F:Google.Maps.Logging.Exceptions.ExceptionHandler.LoggableNamespaceDenyList">
            <summary>
            The namespaces that will not be logged when an exception is thrown from a method within it.
            </summary></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.NotLoggable``1(``0)">
            <summary>
            Tags the given exception as not loggable.
            </summary>
            <param name="exception">The exception to tag.</param>
            <returns>The tagged exception.</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.Loggable``1(``0)">
            <summary>
            Tags the given exception as loggable.
            </summary>
            <param name="exception">The exception to tag.</param>
            <returns>The tagged exception.</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.Run(System.Action,System.Boolean)">
            <summary>
            Invokes the given action. Catches, logs and rethrows any uncaught exceptions that meet the
            criteria in <see cref="M:Google.Maps.Logging.Exceptions.ExceptionHandler.IsLoggable(System.Exception)" />.
            </summary>
            <remarks>
            This method intentionally does not share a name with <see cref="M:Google.Maps.Logging.Exceptions.ExceptionHandler.Return(System.Collections.IEnumerator)" /> to
            avoid ambiguity when using method groups (e.g. Run(MyVoidMethod) would not compile and
            would need to be replaced with Run(() =&gt; MyVoidMethod())).
            </remarks>
            <param name="action">The action to invoke.</param>
            <param name="isUserCode">
            Whether <paramref name="action" /> runs user code. If true, exceptions will not be logged.
            </param>
            <returns>The return value of <paramref name="action" />.</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.Return``1(System.Func{``0},System.Boolean)">
            <summary>
            Invokes the given function. Catches, logs and rethrows any uncaught exceptions that meet the
            criteria in <see cref="M:Google.Maps.Logging.Exceptions.ExceptionHandler.IsLoggable(System.Exception)" />.
            </summary>
            <param name="action">The action to invoke.</param>
            <param name="isUserCode">
            Whether <paramref name="action" /> runs user code. If true, exceptions will not be logged.
            </param>
            <returns>The return value of <paramref name="action" />.</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.Return``1(System.Collections.Generic.IEnumerator{``0},System.Boolean)">
            <summary>
            Runs the given enumerator. Catches, logs, and rethrows any uncaught exceptions that meet the
            criteria in <see cref="M:Google.Maps.Logging.Exceptions.ExceptionHandler.IsLoggable(System.Exception)" />.
            </summary>
            <param name="enumerator">The enumerator to run.</param>
            <param name="isUserCode">
            Whether <paramref name="enumerator" /> runs user code. If true, exceptions will not be
            logged.
            </param>
            <returns>The current element.</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.Return(System.Collections.IEnumerator)">
            <summary>
            Runs the given enumerator. Catches, logs, and rethrows any uncaught exceptions that meet the
            criteria in <see cref="M:Google.Maps.Logging.Exceptions.ExceptionHandler.IsLoggable(System.Exception)" />.
            </summary>
            <param name="enumerator">The enumerator to run.</param>
            <returns>The current element.</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.Return``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the given enumerable. Catches, logs, and rethrows any uncaught exceptions that meet
            the criteria in <see cref="M:Google.Maps.Logging.Exceptions.ExceptionHandler.IsLoggable(System.Exception)" />.
            </summary>
            <param name="enumerable">The enumerable to return.</param>
            <returns>The enumerable (with additional exception handling).</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.TryLogException(System.Exception)">
            <summary>
            Logs an uncaught exception if <see cref="M:Google.Maps.Logging.Exceptions.ExceptionHandler.IsLoggable(System.Exception)" /> returns true for it.
            </summary>
            <param name="exception">The uncaught exception.</param>
            <returns>True if the exception was logged.</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.LogException(System.Exception)">
            <summary>
            Collects useful data from the given exception and logs it using <see cref="T:Google.Maps.Logging.LogsService" />.
            </summary>
            <param name="exception">The exception to log.</param></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.BuildLimitedStackTrace(System.Diagnostics.StackTrace)">
            <summary>
            Builds a limited stack trace from an exception for <see cref="T:Google.Maps.Logging.Exceptions.ExceptionData" />.
            </summary>
            <param name="stackTrace">The stack trace of the exception.</param></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.IsLoggable(System.Exception)">
            <summary>
            Returns true if exception should be logged.
            An exception should be logged if it was thrown as a result of the SDK and
            <see cref="P:System.Exception.Data" /> does not contain <see cref="F:Google.Maps.Logging.Exceptions.ExceptionHandler.NotLoggableKey" />.
            </summary>
            <param name="exception">The exception to check.</param>
            <returns>True if the exception should be logged.</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.IsUserAssembly(System.Reflection.Assembly)">
            <summary>
            Returns true if the given assembly is a user assembly. A user assembly is not referenced
            by the SDK.
            </summary>
            <param name="assembly">The assembly to test.</param>
            <returns>True if the given assembly is a user assembly.</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.IsUserMethod(System.Reflection.MethodBase)">
            <summary>
            Returns true if the given method is a user method. All user methods exist outside the
            SDK and inside an unknown assembly.
            </summary>
            <param name="method">The method to check.</param>
            <returns>True if the method is a user method.</returns></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionHandler.IsLoggableNamespace(System.String)">
            <summary>
            Returns true if the given namespace can be logged.
            </summary>
            <param name="namespace">The namespace to test.</param>
            <returns>True if the namespace can be logged.</returns></member>
        <member name="T:Google.Maps.Logging.Exceptions.ExceptionData">
            <summary>
            Contains data extracted from an exception.
            </summary></member>
        <member name="T:Google.Maps.Logging.Exceptions.ExceptionData.NamespaceInfo">
            <summary>
            Contains information about the namespace an exception occurred in.
            </summary></member>
        <member name="F:Google.Maps.Logging.Exceptions.ExceptionData.NamespaceInfo.Namespace">
            <summary>
            The namespace the exception occurred in. This is found by traversing the call stack
            top-to-bottom until a method within a valid assembly is found.
            Example:
            (valid assemblies = [Google.Maps,])
            3 A: Calls B [UserAssembly]
            2 B: Calls C [Google.Maps]
            1 C: Calls D [Google.Maps.Terrain]
            0 D: Throws exception [System]
            In this case, <see cref="F:Google.Maps.Logging.Exceptions.ExceptionData.NamespaceInfo.Namespace" /> would be Google.Maps.Terrain.
            </summary></member>
        <member name="F:Google.Maps.Logging.Exceptions.ExceptionData.NamespaceInfo.IsTopLevel">
            <summary>
            Whether <see cref="F:Google.Maps.Logging.Exceptions.ExceptionData.NamespaceInfo.Namespace" /> was extracted from the most recent method in the call
            stack. If false, <see cref="F:Google.Maps.Logging.Exceptions.ExceptionData.NamespaceInfo.Namespace" /> was extracted from an earlier method in the
            call stack.
            </summary></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionData.NamespaceInfo.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor.
            </summary></member>
        <member name="F:Google.Maps.Logging.Exceptions.ExceptionData.ExceptionType">
            <summary>
            The name of the exception.
            </summary></member>
        <member name="F:Google.Maps.Logging.Exceptions.ExceptionData.Namespace">
            <summary>
            The namespace the exception occurred in.
            </summary></member>
        <member name="F:Google.Maps.Logging.Exceptions.ExceptionData.PartialStackTrace">
            <summary>
            A limited stack trace of the exception, containing the method names of the last n frames.
            The first element is the name of the most recent method (i.e. the method at the top of the
            call stack).
            </summary>
            <remarks>
            Method names belonging to user methods must be (and are) obfuscated to protect PII data.
            </remarks></member>
        <member name="M:Google.Maps.Logging.Exceptions.ExceptionData.#ctor(System.String,Google.Maps.Logging.Exceptions.ExceptionData.NamespaceInfo,System.String[])">
            <summary>
            Constructor.
            </summary></member>
        <member name="T:Google.Maps.Logging.FakeLogRequestSender">
            <summary>
            Stores sent log requests locally for inspection in tests. Also allows for custom responses
            to be returned by modifying <see cref="F:Google.Maps.Logging.FakeLogRequestSender.LogRequests" />.
            </summary></member>
        <member name="F:Google.Maps.Logging.FakeLogRequestSender.LogRequests">
            <summary>
            The list of log requests that were sent.
            </summary></member>
        <member name="F:Google.Maps.Logging.FakeLogRequestSender.RequestBases">
            <summary>
            When <see cref="M:Google.Maps.Logging.FakeLogRequestSender.SendLogRequest(Google.Maps.Proto.LogRequest)" /> is called, the next <see cref="T:Google.Maps.Util.RequestBase" /> is removed
            from this queue and returned to the caller. If the queue is empty, a default
            <see cref="T:Google.Maps.Logging.FakeLogRequestSender.FakeRequestBase" /> is returned instead.
            </summary></member>
        <member name="M:Google.Maps.Logging.FakeLogRequestSender.SendLogRequest(Google.Maps.Proto.LogRequest)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Logging.FakeLogsService">
            <summary>
            A fake LogsService for use in testing.
            </summary></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.DiagnosableServiceDidStart(Google.Maps.IDiagnosableService)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.DiagnosableServiceDidShutdown(Google.Maps.IDiagnosableService)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.MaybeStartSendingLogs(Google.Maps.Util.ICoroutineStarter)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.Stop">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogFrameTimeInformation(System.Int32,System.Int32)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogNetworkLoadTime(System.Int32)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogNetworkFailure">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogTileLoaded(System.Boolean)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogLoadTimeFeatureInformation(Google.Maps.TerrainOptions,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogMixedZoomInformation(System.Int32,System.Single,System.Single)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogFindPathInvocation(System.Int64,System.Int32)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogSnapToNodeInvocation(System.Int64)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogRegisterFencingRule">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogUnregisterFencingRule">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogLoadCall">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogFinishedLoading">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogGameObjectCreated">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogEventRegistrationCounts(Google.Maps.Event.Events)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogLoadRegionCall(Google.Maps.Proto.FeatureUsage.Types.LoadRegionCall.Types.CallType)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.FakeLogsService.LogUncaughtException(Google.Maps.Logging.Exceptions.ExceptionData)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Logging.FakeRequestLogger">
            <summary>
            Fake request logger that can be used for testing. Stats can be read out from the public
            properties.
            </summary></member>
        <member name="F:Google.Maps.Logging.FakeRequestLogger.NumCacheHits">
            <summary>
            Number of times <see cref="M:Google.Maps.Logging.FakeRequestLogger.LogLoadedTileFromDiskCache" /> was called.
            </summary></member>
        <member name="F:Google.Maps.Logging.FakeRequestLogger.NumNetworkErrors">
            <summary>
            Number of times <see cref="M:Google.Maps.Logging.FakeRequestLogger.LogNetworkErrorWhenLoadingTileFromServer" /> was called.
            </summary></member>
        <member name="F:Google.Maps.Logging.FakeRequestLogger.NetworkRequestTimes">
            <summary>
            List of time spans passed to <see cref="M:Google.Maps.Logging.FakeRequestLogger.LogSuccessfulTileRequest(System.TimeSpan)" />.
            </summary></member>
        <member name="T:Google.Maps.Logging.ILogger">
            <summary>
            Base interface for a metrics logger.
            </summary></member>
        <member name="T:Google.Maps.Logging.ILogRequestSender">
            <summary>
            Interface for a class that sends log requests somewhere for further analysis.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogRequestSender.SendLogRequest(Google.Maps.Proto.LogRequest)">
            <summary>
            Sends a log request as a <see cref="T:Google.Maps.Util.RequestBase" /> coroutine.
            </summary>
            <remarks>
            The log request may be sent over the network to Clearcut in the background, or stored
            locally for inspection.
            </remarks></member>
        <member name="T:Google.Maps.Logging.ILogsService">
            <summary>
            Interface for LogsServices.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.DiagnosableServiceDidStart(Google.Maps.IDiagnosableService)">
            <summary>
            Adds the provided <see cref="T:Google.Maps.MapsService" /> to the list of active MapsServices to
            log for.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.DiagnosableServiceDidShutdown(Google.Maps.IDiagnosableService)">
            <summary>
            Removes the provided <see cref="T:Google.Maps.MapsService" /> from the list of active MapsServices to
            log for.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.MaybeStartSendingLogs(Google.Maps.Util.ICoroutineStarter)">
            <summary>
            Starts sending logs using the given <paramref name="coroutineStarter" />. If logs are
            already being sent, this method does nothing.
            </summary>
            <param name="coroutineStarter">
            The <see cref="T:Google.Maps.Util.ICoroutineStarter" /> to use.
            </param></member>
        <member name="M:Google.Maps.Logging.ILogsService.Stop">
            <summary>Stops sending logs.</summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogFrameTimeInformation(System.Int32,System.Int32)">
            <summary>
            Logs metrics associated with instantaneous frame-rate performance.
            </summary>
            <param name="frameTimeMs">The duration of a single frame, in milliseconds.</param>
            <param name="gameObjectCount">The number of GameObjects alive</param></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogNetworkLoadTime(System.Int32)">
            <summary>
            Logs the time taken waiting on the network for a tile to load.
            </summary>
            <param name="networkLoadTimeMs">
            The time in milliseconds waiting on the network.
            </param></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogTileLoaded(System.Boolean)">
            <summary>
            Logs that a tile was loaded from the network or local cache.
            </summary>
            <param name="fromNetwork">Whether the tile was loaded from the network.</param></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogNetworkFailure">
            <summary>
            Logs that a network failure occurred when loading a tile.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogLoadTimeFeatureInformation(Google.Maps.TerrainOptions,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Logs information about feature usage that is detected at load time.
            </summary>
            <param name="terrainOptions">
            The options for terrain rendering. May be null if terrain is not enabled.
            </param>
            <param name="zoomLevel">
            The zoom level the features are being loaded at.
            </param>
            <param name="enablePoliticalBoundaries">
            Whether political/administrative boundaries are enabled.
            </param>
            <param name="enableRoadLattice">
            Whether client-side road lattice generation is enabled.
            </param>
            <param name="enableIntersections">
            Whether client-side intersection generation is enabled.
            </param></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogMixedZoomInformation(System.Int32,System.Single,System.Single)">
            <summary>
            Logs information about the usage of mixed zoom.
            </summary>
            <param name="zoom">The foreground zoom level specified.</param>
            <param name="foregroundDistance">The foreground distance.</param>
            <param name="falloffDistance">The falloff distance.</param></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogFindPathInvocation(System.Int64,System.Int32)">
            <summary>
            Logs metrics associated with usage of the path finding feature.
            </summary>
            <param name="elapsedTime">How long the invocation took, in milliseconds.</param>
            <param name="nodeCount">
            The number of nodes in the returned path, or 0 if no path was found.
            </param></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogSnapToNodeInvocation(System.Int64)">
            <summary>
            Logs metrics associated with usage of the snap to node feature.
            </summary>
            <param name="elapsedTime">How long the invocation took, in milliseconds.</param></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogRegisterFencingRule">
            <summary>
            Logs that a fencing rule was registered.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogUnregisterFencingRule">
            <summary>
            Logs that a fencing rule was unregistered.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogLoadCall">
            <summary>
            Logs that a call to load a map has occurred.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogFinishedLoading">
            <summary>
            Logs that the map has finished loading.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogGameObjectCreated">
            <summary>
            Logs that a GameObject was created.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogEventRegistrationCounts(Google.Maps.Event.Events)">
            <summary>
            Logs the counts of event listeners attached to the events.
            </summary>
            <param name="events">Events.</param></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogLoadRegionCall(Google.Maps.Proto.FeatureUsage.Types.LoadRegionCall.Types.CallType)">
            <summary>
            Logs information about a call related to building a region to load.
            </summary>
            <param name="type">The type of call that was made.</param></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogUncaughtException(Google.Maps.Logging.Exceptions.ExceptionData)">
            <summary>
            Logs information about an uncaught exception that was thrown within the SDK.
            </summary>
            <param name="exceptionData">Information about the exception that was thrown.</param></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogForegroundCrash">
            <summary>
            Logs information about a foreground crash of the application hosting the SDK.
            </summary></member>
        <member name="M:Google.Maps.Logging.ILogsService.LogApplicationStartup">
            <summary>
            Logs information about application startup.
            </summary></member>
        <member name="T:Google.Maps.Logging.ITileRequestLogger">
            <summary>
            Interface for logging information about tile loading -- how long it takes to load tiles, cache
            hit information, etc.
            </summary></member>
        <member name="M:Google.Maps.Logging.ITileRequestLogger.LogSuccessfulTileRequest(System.TimeSpan)">
            <summary>
            Logs that a tile request was successfully made to the server.
            </summary>
            <param name="networkRequestTime">The time it took for the request to complete.</param></member>
        <member name="M:Google.Maps.Logging.ITileRequestLogger.LogLoadedTileFromDiskCache">
            <summary>
            Logs that a tile was successfully loaded from disk.
            </summary></member>
        <member name="M:Google.Maps.Logging.ITileRequestLogger.LogNetworkErrorWhenLoadingTileFromServer">
            <summary>
            Logs that a network request for a tile failed.
            </summary></member>
        <member name="T:Google.Maps.Logging.LogsService">
            <summary>
            Manages metrics logging.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService.ActiveCoroutineId">
            <summary>
            ID of the currently running <see cref="M:Google.Maps.Logging.LogsService.MaybeStartSendingLogs" /> coroutine, or 0 if there's
            no running coroutine.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService.LastCoroutineId">
            <summary>
            ID of the last run coroutine, or 0 if no coroutines have been run yet.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService.LoggingInterval">
            <summary>
            Time to wait between sending logs.
            </summary>
            <remarks>
            We choose a per-player random offset within this interval and store it in
            <see cref="T:UnityEngine.PlayerPrefs" /> (see <see cref="F:Google.Maps.Logging.LogsService.LoggingOffsetKey" />). For example, a player with
            an offset of 3 minutes would send logs at :03, :18, :33 and :48 every hour (if the
            <see cref="T:Google.Maps.MapsService" /> is active at that time).
            This meets the requirements to (a) send logs no more frequently than every 15 minutes; (b)
            smear logs over time, i.e. don't send from every device in the world at the same time on the
            15 minute mark; and (c) send some logs even if game sessions are less than 15 minutes long.
            </remarks></member>
        <member name="F:Google.Maps.Logging.LogsService.NextLogTimeKey">
            <summary>
            Key for storing the next time to send a log request in <see cref="T:UnityEngine.PlayerPrefs" />.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService.LoggingOffsetKey">
            <summary>
            Key for storing the logging window offset seed in <see cref="T:UnityEngine.PlayerPrefs" />.
            </summary>
            <remarks>
            Note that we store the seed used to calculate the offset, not the offset itself. This has
            the (minor) advantage that <see cref="F:Google.Maps.Logging.LogsService.LoggingInterval" /> could change and existing seeds
            would still work.
            </remarks></member>
        <member name="F:Google.Maps.Logging.LogsService.MaxUncaughtExceptionsPerLogRequest">
            <summary>
            The maximum number of <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException" />s that can be sent
            in a single <see cref="T:Google.Maps.Proto.LogRequest" />.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService.MaxInstancesPerUncaughtException">
            <summary>
            The maximum number of <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException.Types.Instance" />s that can be logged
            in a single <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException" />.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService.NextLogTime">
            <summary>UTC time which the next logs should be sent.</summary></member>
        <member name="F:Google.Maps.Logging.LogsService.LoggedMetrics">
            <summary>
            Stores the logged metrics information.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService.CurrentSequencePosition">
            <summary>
            Used to maintain a temporal ordering of the logged events.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService.DiskLogSaver">
            <summary>For persisting logs to disk.</summary></member>
        <member name="F:Google.Maps.Logging.LogsService.FirstObjectStopwatch">
            <summary>
            For measuring the time between the first call to load() and the first GameObject appearing.
            </summary>
            <remarks>Stopwatch is stopped once we log the loading time, so it only fires once.</remarks></member>
        <member name="F:Google.Maps.Logging.LogsService.TotalLoadingTimeStopwatch">
            <summary>
            For measuring the time between the first load() and the first time loading is complete.
            </summary>
            <remarks>Stopwatch is stopped once we log the loading time, so it only fires once.</remarks></member>
        <member name="F:Google.Maps.Logging.LogsService.LoadCallTimer">
            <summary>
            Times intervals between calls to load an area of the map.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService.Clock">
            <summary>
            Injectable clock used for timestamps and request intervals.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService._SingletonInstance">
            <summary>
            The singleton instance of the LogsService.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService._FilePathForTesting">
            <summary>
            The file path to use for saving logs to disk.
            </summary>
            <remarks>Should only be used for testing.</remarks></member>
        <member name="F:Google.Maps.Logging.LogsService.RequestSender">
            <summary>
            Sender to be used for sending the log requests.
            </summary></member>
        <member name="F:Google.Maps.Logging.LogsService.ActiveDiagnosableServices">
            <summary>
            All currently active <see cref="T:Google.Maps.IDiagnosableService" />s.
            </summary>
            <remarks> Logging should only occur if there is at least one diagnosable service with
            diagnostics enabled, and no diagnosable services with diagnostics disabled.
            See go/musk-privacy-compliant-logging-toggle for more details.
            </remarks></member>
        <member name="M:Google.Maps.Logging.LogsService.GetInstance">
            <summary>
            Gets the singleton instance of the LogsService.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.SetInstanceForTesting(Google.Maps.Logging.ILogsService)">
            <summary>
            Sets the singleton instance of the LogsService.
            </summary>
            <remarks>Used to stub out the real LogsService for testing.</remarks>
            <param name="logsService">The logs service to use.</param></member>
        <member name="M:Google.Maps.Logging.LogsService.SetFilePathForTesting(System.String)">
            <summary>Sets the file path to be used for saving logs.</summary>
            <remarks>Should only be used for testing.</remarks>
            <param name="path">The path to use.</param></member>
        <member name="M:Google.Maps.Logging.LogsService.GetLogsFilePath">
            <summary>
            Gets the file path to be used for saving logs to disk.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.#ctor(Google.Maps.Logging.ILogRequestSender,Google.Maps.Util.IClock)">
            <summary>Constructor.</summary></member>
        <member name="M:Google.Maps.Logging.LogsService.DiagnosableServiceDidStart(Google.Maps.IDiagnosableService)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.DiagnosableServiceDidShutdown(Google.Maps.IDiagnosableService)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.CanLog">
            <summary>
            Returns true iff there is at least one active MapsService with EnableDiagnostics == true and
            no MapServices with EnableDiagnostics == false.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.GetSavedNextLogTime">
            <summary>
            Returns the saved time to send the next log request.
            </summary>
            <returns>
            The saved time to send the next log request (or null if it doesn't exist).
            </returns></member>
        <member name="M:Google.Maps.Logging.LogsService.LogFrameTimeInformation(System.Int32,System.Int32)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogNetworkLoadTime(System.Int32)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogNetworkFailure">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogTileLoaded(System.Boolean)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogLoadCall">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogGameObjectCreated">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogFinishedLoading">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogLoadTimeFeatureInformation(Google.Maps.TerrainOptions,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogMixedZoomInformation(System.Int32,System.Single,System.Single)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogFindPathInvocation(System.Int64,System.Int32)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogSnapToNodeInvocation(System.Int64)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogRegisterFencingRule">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogUnregisterFencingRule">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogEventRegistrationCounts(Google.Maps.Event.Events)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogLoadRegionCall(Google.Maps.Proto.FeatureUsage.Types.LoadRegionCall.Types.CallType)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogUncaughtException(Google.Maps.Logging.Exceptions.ExceptionData)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.LogForegroundCrash">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.MakeUncaughtException(Google.Maps.Logging.Exceptions.ExceptionData)">
            <summary>
            Creates an <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException" /> instance from an <see cref="T:Google.Maps.Logging.Exceptions.ExceptionData" />
            instance.
            </summary>
            <param name="exceptionData">
            The <see cref="T:Google.Maps.Logging.Exceptions.ExceptionData" /> instance to create a <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException" />
            instance for.
            </param>
            <returns>The created <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException" /> instance.</returns></member>
        <member name="M:Google.Maps.Logging.LogsService.AddUncaughtException(Google.Maps.Proto.DiagnosticData.Types.UncaughtException)">
            <summary>
            Adds the given <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException" /> to <see cref="F:Google.Maps.Logging.LogsService.LoggedMetrics" />. If an
            equivalent instance already exists, the given exception is merged into it to save on both
            storage and bandwidth.
            </summary>
            <param name="uncaughtException">The <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException" /> to add.</param></member>
        <member name="M:Google.Maps.Logging.LogsService.AddForegroundCrash">
            <summary>
            Adds a foreground crash to <see cref="F:Google.Maps.Logging.LogsService.LoggedMetrics" />.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.AddApplicationStartup">
            <summary>
            Adds an application startup to <see cref="F:Google.Maps.Logging.LogsService.LoggedMetrics" />.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.TryMergeExceptionsIfEquivalent(Google.Maps.Proto.DiagnosticData.Types.UncaughtException,Google.Maps.Proto.DiagnosticData.Types.UncaughtException)">
            <summary>
            Merges two <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException" /> instances if they are equivalent.
            </summary>
            <param name="source">The source instance. If equivalent to <paramref name="destination" />,
            <paramref name="source" /> will be merged into it.</param>
            <param name="destination">The destination instance.</param></member>
        <member name="M:Google.Maps.Logging.LogsService.AreUncaughtExceptionsEquivalent(Google.Maps.Proto.DiagnosticData.Types.UncaughtException,Google.Maps.Proto.DiagnosticData.Types.UncaughtException)">
            <summary>
            Returns true if the two given <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException" />s are equivalent.
            </summary>
            <param name="a">An uncaught exception to test.</param>
            <param name="b">The other uncaught exception to test against.</param>
            <returns>True if the two given <see cref="T:Google.Maps.Proto.DiagnosticData.Types.UncaughtException" />s are equivalent.</returns></member>
        <member name="M:Google.Maps.Logging.LogsService.MaybeStartSendingLogs(Google.Maps.Util.ICoroutineStarter)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.MaybeStartSendingLogs">
            <summary>
            Coroutine for sending log messages.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.UpdateNextLogTime(System.Int64)">
            <summary>
            Sets the next time to send a log request.
            </summary>
            <param name="minWaitTimeMs">The minimum time to wait before sending a log request.</param></member>
        <member name="M:Google.Maps.Logging.LogsService.InitializeNextLogTime">
            <summary>
            Initializes <see cref="F:Google.Maps.Logging.LogsService.NextLogTime" />.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.Stop">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Logging.LogsService.BuildMetricsMuskClearcut">
            <summary>
            Creates a new <see cref="T:Google.Maps.Proto.MuskClearcut" /> proto for metrics log events.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.BuildDiagnosticsMuskClearcut">
            <summary>
            Creates a new <see cref="T:Google.Maps.Proto.MuskClearcut" /> proto for diagnostic log events.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.BuildBaseMuskClearcut">
            <summary>
            Creates a new <see cref="T:Google.Maps.Proto.MuskClearcut" /> proto with boilerplate fields pre-filled.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.BuildLogRequest(Google.Maps.Proto.LogEvent[])">
            <summary>
            Creates a new filled <see cref="T:Google.Maps.Proto.LogRequest" />.
            </summary>
            <param name="logEvents">The <see cref="T:Google.Maps.Proto.LogEvent" />s to include.</param></member>
        <member name="M:Google.Maps.Logging.LogsService.BuildLogEvent(Google.Maps.Proto.MuskEventType.Types.EventCode,System.Int32,System.Boolean,Google.Maps.Proto.MuskClearcut)">
            <summary>
            Creates a new filled <see cref="T:Google.Maps.Proto.LogEvent" />.
            </summary>
            <param name="eventCode">
            Describes the type of event being logged using one of the possible <see cref="T:Google.Maps.Proto.MuskEventType.Types.EventCode" />s.
            </param>
            <param name="eventFlowId">
            An identifier that groups LogEvents into consecutive flows of events. LogEvents with the
            same flow id will be grouped into the same event flow.
            </param>
            <param name="isUserInitiated">Whether the event being logged was prompted by a user.</param>
            <param name="loggedMetrics">
            The logged SDK metrics to report in this <see cref="T:Google.Maps.Proto.LogEvent" />.
            </param></member>
        <member name="M:Google.Maps.Logging.LogsService.BuildMetricsLogEvent(System.Int32,System.Boolean,Google.Maps.Proto.MuskClearcut)">
            <summary>
            Creates a new filled metrics <see cref="T:Google.Maps.Proto.LogEvent" />.
            </summary>
            <param name="eventFlowId">
            An identifier that groups LogEvents into consecutive flows of events. LogEvents with the
            same flow id will be grouped into the same event flow.
            </param>
            <param name="isUserInitiated">Whether the event being logged was prompted by a user.</param>
            <param name="logs">
            The logs containing SDK metrics to report in this <see cref="T:Google.Maps.Proto.LogEvent" />.
            </param></member>
        <member name="M:Google.Maps.Logging.LogsService.BuildDiagnosticsLogEvent(System.Int32,System.Boolean,Google.Maps.Proto.MuskClearcut)">
            <summary>
            Creates a new filled diagnostics <see cref="T:Google.Maps.Proto.LogEvent" />.
            </summary>
            <param name="eventFlowId">
            An identifier that groups LogEvents into consecutive flows of events. LogEvents with the
            same flow id will be grouped into the same event flow.
            </param>
            <param name="isUserInitiated">Whether the event being logged was prompted by a user.</param>
            <param name="logs">
            The logs containing SDK diagnostics to report in this <see cref="T:Google.Maps.Proto.LogEvent" />.
            </param></member>
        <member name="M:Google.Maps.Logging.LogsService.GetSystemUptimeMs">
            <summary>
            Returns the time since the device was booted in milliseconds.
            </summary></member>
        <member name="M:Google.Maps.Logging.LogsService.GetUnixEpochTimeMs(System.DateTime)">
            <summary>
            Returns the Unix epoch time in milliseconds.
            </summary>
            <param name="time">The time to calculate the Unix epoch time for.</param></member>
        <member name="M:Google.Maps.Logging.LogsService.CalculateNextLogTime(System.DateTime,System.Int32)">
            <summary>
            Calculates the next time that logs should be sent. The time between logging events is
            specified by <see cref="F:Google.Maps.Logging.LogsService.LoggingInterval" />, with a persistent offset based on userId so that
            each user sends at a different time during that window.
            </summary>
            <param name="utcNow">Current UTC time.</param>
            <param name="offsetSeed">Seed used to calculate the time offset within the window.</param></member>
        <member name="M:Google.Maps.Logging.LogsService.GetLoggedMetrics">
            <summary>
            Gets the currently stored logging proto.
            </summary></member>
        <member name="T:Google.Maps.Logging.ProcessCrashes.CrashDetector">
            <summary>
            Detects process foreground crashes on mobile platforms.
            </summary></member>
        <member name="F:Google.Maps.Logging.ProcessCrashes.CrashDetector.Instance">
            <summary>
            Default instance of this class.
            </summary></member>
        <member name="E:Google.Maps.Logging.ProcessCrashes.CrashDetector.OnForegroundCrashDetected">
            <summary>
            Event that is triggered whenever a crash is detected.
            </summary></member>
        <member name="E:Google.Maps.Logging.ProcessCrashes.CrashDetector.OnApplicationStartupDetected">
            <summary>
            Event that is triggered whenever application startup is detected.
            </summary></member>
        <member name="F:Google.Maps.Logging.ProcessCrashes.CrashDetector.DirtyFileFilename">
            <summary>
            Filename for dirty file. Contains UUID for uniqueness.
            </summary></member>
        <member name="F:Google.Maps.Logging.ProcessCrashes.CrashDetector.DirtyFileChecked">
            <summary>
            Set to true when the dirty file has been checked on startup.
            </summary></member>
        <member name="F:Google.Maps.Logging.ProcessCrashes.CrashDetector.FileOps">
            <summary>
            <see cref="T:Google.Maps.IO.IFileOps" /> instance.
            </summary></member>
        <member name="F:Google.Maps.Logging.ProcessCrashes.CrashDetector.UnityPlatformProvider">
            <summary>
            <see cref="T:Google.Maps.Unity.UnityPlatformProvider" /> instance.
            </summary></member>
        <member name="F:Google.Maps.Logging.ProcessCrashes.CrashDetector.StartupEventTriggered">
            <summary>
            Has the application startup event been triggered?
            </summary></member>
        <member name="M:Google.Maps.Logging.ProcessCrashes.CrashDetector.#ctor(Google.Maps.IO.IFileOps,Google.Maps.Unity.IUnityPlatformProvider)">
            <summary>
            Constructor.
            </summary>
            <param name="fileOps"><see cref="T:Google.Maps.IO.IFileOps" /> instance to provide file operations.</param>
            <param name="unityPlatformProvider">
            <see cref="T:Google.Maps.Unity.IUnityPlatformProvider" /> instance to provide the currently executing Unity
            platform.
            </param></member>
        <member name="M:Google.Maps.Logging.ProcessCrashes.CrashDetector.IsSupportedPlatform">
            <summary>
            Returns true if application is running on supported platform.
            </summary></member>
        <member name="M:Google.Maps.Logging.ProcessCrashes.CrashDetector.GetDirtyFilePath">
            <summary>
            Gets the path to the dirty file.
            </summary>
            <returns>The path to the dirty file.</returns></member>
        <member name="M:Google.Maps.Logging.ProcessCrashes.CrashDetector.MapsServiceStarted">
            <summary>
            Should be called whenever a <see cref="T:Google.Maps.MapsService" /> instance is started.
            </summary></member>
        <member name="M:Google.Maps.Logging.ProcessCrashes.CrashDetector.ApplicationPaused">
            <summary>
            Should be called when application is paused.
            </summary></member>
        <member name="M:Google.Maps.Logging.ProcessCrashes.CrashDetector.ApplicationUnpaused">
            <summary>
            Should be called when application is unpaused.
            </summary></member>
        <member name="T:Google.Maps.Logging.RetryingLogRequestSender">
            <summary>
            Request sender implementation that sends log requests to the production Clearcut endpoint.
            Exponential backoff is used if the request fails. We'll keep trying to send the request
            forever, capping the exponential backoff at 15 minutes.
            </summary></member>
        <member name="F:Google.Maps.Logging.RetryingLogRequestSender.ClearcutEndpoint">
            <summary>
            The endpoint for the Clearcut HTTP API.
            </summary></member>
        <member name="F:Google.Maps.Logging.RetryingLogRequestSender.InitialRetryIntervalSeconds">
            <summary>
            Initial retry interval for exponential backoff. Chosen arbitrarily.
            </summary></member>
        <member name="F:Google.Maps.Logging.RetryingLogRequestSender.MaxRetryIntervalSeconds">
            <summary>
            Maximum retry interval for logs request. Set to 15 minutes, because that's how often we'd
            like to upload logs.
            </summary></member>
        <member name="F:Google.Maps.Logging.RetryingLogRequestSender.MaxAttempts">
            <summary>
            Maximum number of retries.
            </summary></member>
        <member name="M:Google.Maps.Logging.RetryingLogRequestSender.SendLogRequest(Google.Maps.Proto.LogRequest)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Logging.MetricsSampler">
            <summary>
            </summary></member>
        <member name="T:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper">
            <summary>
            A helper class that removes the dependency on Unity runtime for frame timing information,
            and the dependency on static <see cref="T:Google.Maps.Logging.LogsService" />.
            </summary></member>
        <member name="F:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.FrameTimeSamplePeriodSeconds">
            <summary>
            Time between frame time samples.
            </summary></member>
        <member name="F:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.FrameTimeVarianceSeconds">
            <summary>
            Random variance range for frame time sample period, from 0 to this value.
            </summary>
            <remarks>
            This value provides a bit of jitter to our frame rate sampling timing to avoid potential
            issues arising from sampling at precisely the same interval every time.
            </remarks></member>
        <member name="T:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.LogFrameTimeDelegate">
            <summary>Delegate that logs a frame time value.</summary></member>
        <member name="T:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.GetFrameTimeDelegate">
            <summary>Delegate function that returns a frame time in seconds.</summary></member>
        <member name="T:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.GetGameObjectCountDelegate">
            <summary>Delegate function that returns a count of GameObjects.</summary></member>
        <member name="F:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.LogFrameTime">
            <summary>Frame time logger.</summary></member>
        <member name="F:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.GetFrameTime">
            <summary>Frame time fetcher.</summary></member>
        <member name="F:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.GetGameObjectCount">
            <summary>The GameObject count delegate.</summary></member>
        <member name="M:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.#ctor(Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.GetFrameTimeDelegate,Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.GetGameObjectCountDelegate,Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.LogFrameTimeDelegate)">
            <summary>
            Constructor.
            </summary>
            <param name="getFrameTime">Frame time fetching delegate.</param>
            <param name="getGameObjectCount">GameObject counter delegate.</param>
            <param name="logFrameTime">Frame time logging delegate.</param></member>
        <member name="M:Google.Maps.Logging.MetricsSampler.MetricsSamplerHelper.CollectFrameRateStats">
            <summary>
            Periodically log most recent frame elapsed time.
            </summary></member>
        <member name="M:Google.Maps.Logging.MetricsSampler.Awake">
            <summary>
            A <see cref="T:UnityEngine.MonoBehaviour" /> that periodically logs the most recent frame elapsed time.
            </summary></member>
        <member name="M:Google.Maps.Logging.MetricsSampler.LogFrameTime(System.Int32,System.Int32)">
            <summary>
            Delegate function to log a frame time value.
            </summary>
            <param name="frameTimeMs">Frame time in milliseconds.</param>
            <param name="gameObjectCount">
            The number of GameObjects alive at the time of sampling.
            </param></member>
        <member name="M:Google.Maps.Logging.MetricsSampler.GetMostRecentFrameTimeSeconds">
            <summary>
            Delegate function to return the most recent frame time.
            </summary>
            <returns>Most recent frame time in seconds.</returns></member>
        <member name="T:Google.Maps.MapLoadRegion">
            <summary>
            Encapsulates a region of the map to load.
            </summary>
            <remarks>
            The method <see cref="M:Google.Maps.MapsService.MakeMapLoadRegion" /> creates an instance
            of the `%MapLoadRegion` class to load tiles for the MapsService.
            </remarks>
            <example>
            The following code example loads the region of the map that is visible in
            the main camera's viewport.
            <pre>
            <c>
            MapsService.MakeMapLoadRegion().AddViewport(Camera.main).Load(options);
            </c>
            </pre>
            </example></member>
        <member name="T:Google.Maps.MapLoadRegion.Shape">
            <summary>
            Interface for shapes on the map that will be loaded.
            </summary>
            <remarks>
            One <see cref="T:Google.Maps.MapLoadRegion.Shape" /> object generally corresponds to a single call to AddViewport /
            AddCircle etc. The union of all the shapes will be loaded.
            </remarks></member>
        <member name="M:Google.Maps.MapLoadRegion.Shape.ModifyGrid(Google.Maps.MapLoadRegion.Grid,Google.Maps.Coord.Projection,System.Int32)">
            <summary>
            Returns a new <see cref="T:Google.Maps.MapLoadRegion.Grid" /> formed by adding the <see cref="T:Google.Maps.MapLoadRegion.Shape" /> to the provided
            grid.
            </summary>
            <param name="grid">Grid to modify or update.</param>
            <param name="projection">Coordinate system.</param>
            <param name="zoom">
            Zoom level (Coords.Zoom is ignored and this is used instead).
            </param>
            <returns>Updated Grid.</returns></member>
        <member name="M:Google.Maps.MapLoadRegion.Shape.ContainsTileCoord(Google.Maps.Coord.MercatorTileCoords,Google.Maps.Coord.Projection)">
            <summary>
            Determines whether a tileCoord overlaps or is entirely contained in this shape.
            </summary>
            <remarks>Cases where tileCoord overlaps at the edges will return true.</remarks>
            <param name="mercatorTileCoords">Tile Coordinates.</param>
            <param name="projection">Coordinate system.</param>
            <returns>True if tileCoord overlaps or is entirely contained in this shape.</returns></member>
        <member name="T:Google.Maps.MapLoadRegion.Area">
            <summary>
            Represents a single shape on the map that will be loaded.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.Area.Bounds">
            <summary>
            The <see cref="T:UnityEngine.Bounds" /> the shape will encompass. This is the area of the map the shape
            will load when a Load method is called.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.Area.TileFilter">
            <summary>
            A predicate which is applied to all the <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s collected in
            <see cref="T:UnityEngine.Bounds" />, to determine which tiles contained within the shape should be
            loaded.
            </summary></member>
        <member name="M:Google.Maps.MapLoadRegion.Area.#ctor(UnityEngine.Bounds,Google.Maps.MapLoadRegion.TileFilter)">
            <summary>Constructor.</summary>
            <param name="bounds">
            The <see cref="T:UnityEngine.Bounds" /> the shape will encompass. This is the area of the map the shape
            will load when <see cref="M:Google.Maps.MapLoadRegion.Load(Google.Maps.GameObjectOptions)" /> is called.
            </param>
            <param name="tileFilter">
            <para>
            A predicate which is applied to all the tile coords collected in <see cref="T:UnityEngine.Bounds" />,
            to determine which tiles contained within the shape should be loaded.
            </para>
            <para>
            If null, match all tiles.
            </para>
            </param></member>
        <member name="M:Google.Maps.MapLoadRegion.Area.ModifyGrid(Google.Maps.MapLoadRegion.Grid,Google.Maps.Coord.Projection,System.Int32)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.MapLoadRegion.Area.ContainsTileCoord(Google.Maps.Coord.MercatorTileCoords,Google.Maps.Coord.Projection)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.MapLoadRegion.Expansion">
            <summary>
            Grows the grid in every direction by at least the given distance.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.Expansion.Distance">
            <summary>Distance to expand, in world coordinates, in Unity world space.</summary></member>
        <member name="M:Google.Maps.MapLoadRegion.Expansion.#ctor(System.Single)">
            <summary>Constructor.</summary>
            <param name="distance">Distance to expand, in Unity world space.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.Expansion.ModifyGrid(Google.Maps.MapLoadRegion.Grid,Google.Maps.Coord.Projection,System.Int32)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.MapLoadRegion.Expansion.ContainsTileCoord(Google.Maps.Coord.MercatorTileCoords,Google.Maps.Coord.Projection)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.MapLoadRegion.Grid">
            <summary>Represents the region's grid.</summary></member>
        <member name="P:Google.Maps.MapLoadRegion.Grid.GridArray">
            <summary>
            Rectangular grid starting at (<see cref="P:Google.Maps.MapLoadRegion.Grid.MinX" />, <see cref="P:Google.Maps.MapLoadRegion.Grid.MinY" />) that indicates which
            tiles are included in this region.
            </summary></member>
        <member name="P:Google.Maps.MapLoadRegion.Grid.MinX">
            <summary>Minimum X tile coordinate of the region.</summary></member>
        <member name="P:Google.Maps.MapLoadRegion.Grid.MinY">
            <summary>Minimum Y tile coordinate of the region.</summary></member>
        <member name="M:Google.Maps.MapLoadRegion.Grid.#ctor(System.Boolean[0:,0:],System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="grid">2D array indicating which tiles are included in this region.</param>
            <param name="minX">Minimum X coordinate of the region.</param>
            <param name="minY">Minimum Y coordinate of the region.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.Grid.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.GameObjectOptionsProvider">
            <summary>
            Provides a <see cref="T:Google.Maps.GameObjectOptions" /> instance to use when loading this region. Fresh
            options are fetched from this provider each time the region is loaded.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.ProcessDependencies">
            <summary>
            This value will be passed to the TileManager load and unload methods to indicate that
            inter-tile dependencies should be considered, e.g., when Terrain is enabled dependency
            maintenance is required for correct Terrain texture painting.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.TileLoader">
            <summary>
            Tile loader to call via <see cref="M:Google.Maps.MapLoadRegion.Load(Google.Maps.GameObjectOptions)" />.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.Projection">
            <summary>Coordinate system.</summary></member>
        <member name="F:Google.Maps.MapLoadRegion.LoadingPoint">
            <summary>
            Tiles are loaded in order of their distance to this point in world space.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.GroundHeight">
            <summary>
            Ground height, used to determine the ground plane to intersect with shapes.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.ViewportPoints">
            <summary>
            Points of the viewport used to calculate bounds via
            <see cref="o:Camera.ViewportPointToRay" />.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.TilesInRegion">
            <summary>List of tile coordinates in the region.</summary>
            <remarks>This is reused to reduce GC churn.</remarks></member>
        <member name="F:Google.Maps.MapLoadRegion.Shapes">
            <summary>
            List containing <see cref="T:Google.Maps.MapLoadRegion.Shape" />s that are created when the user adds to the loadable
            region of the map.
            </summary></member>
        <member name="F:Google.Maps.MapLoadRegion.Events">
            <summary>Events.</summary></member>
        <member name="M:Google.Maps.MapLoadRegion.#ctor(Google.Maps.IGameObjectOptionsProvider,Google.Maps.TileLoading.ITileLoader,Google.Maps.Event.Events,Google.Maps.Coord.Projection,System.Boolean)">
            <summary>Constructor.</summary>
            <param name="gameObjectOptionsProvider">
            <see cref="F:Google.Maps.MapLoadRegion.GameObjectOptionsProvider" /> to obtain the current
            <see cref="T:Google.Maps.GameObjectOptions" /> from.
            </param>
            <param name="tileLoader">Tile loader.</param>
            <param name="events">Events.</param>
            <param name="projection">Coordinate system.</param>
            <param name="processDependencies">
            If true, tile dependencies will be loaded by the Load method, and UnloadOutside will not
            unload dependencies of the tiles within this region.
            </param></member>
        <member name="M:Google.Maps.MapLoadRegion.Clear">
            <summary>Clears the contents of this region.</summary></member>
        <member name="M:Google.Maps.MapLoadRegion.ChooseGameObjectOptions(Google.Maps.GameObjectOptions)">
            <summary>
            Return the <see cref="T:Google.Maps.GameObjectOptions" /> instance provided by
            <see cref="F:Google.Maps.MapLoadRegion.GameObjectOptionsProvider" /> or, if none is returned, the one passed into this
            method as a parameter.
            </summary>
            <param name="options">
            The <see cref="T:Google.Maps.GameObjectOptions" /> to use if <see cref="F:Google.Maps.MapLoadRegion.GameObjectOptionsProvider" />
            doesn't provide one.
            </param></member>
        <member name="M:Google.Maps.MapLoadRegion.Load(Google.Maps.GameObjectOptions)">
            <summary>
            Loads the portion of the map defined by this region at the zoom level specified by the
            <see cref="T:Google.Maps.MapsService" />.
            </summary>
            <param name="options">
            Game object options. Ignored if a <see cref="T:Google.Maps.Feature.Style.Attachment.StyleAttachment" /> component is attached to
            the same <see cref="T:UnityEngine.GameObject" /> as the relevant <see cref="T:Google.Maps.MapsService" />.
            </param></member>
        <member name="M:Google.Maps.MapLoadRegion.LoadWithZoom(Google.Maps.GameObjectOptions,System.Int32)">
            <summary>
            Loads the portion of the map defined by this region, at the specified
            zoom level.
            </summary>
            <param name="options">
            Game object options. Ignored if a <see cref="T:Google.Maps.Feature.Style.Attachment.StyleAttachment" /> component is attached to
            the same <see cref="T:UnityEngine.GameObject" /> as the relevant <see cref="T:Google.Maps.MapsService" />.
            </param>
            <param name="zoom">
            The magnification level. The range is 0-21. If no zoom level is supplied, the one from
            *Coords.Zoom* will be used instead.
            <strong>Caution:</strong> Zoom level controls the level of detail of map
            data, and determines the size of the map "tiles" returned. The higher
            the zoom level, the more detail is returned, which negatively affects
            performance.
            <para>
            The default zoom level is *17*. This zoom level is considered
            appropriate for location-based games because lower zoom levels tend to
            miss some important map features. Zoom level 17 is also more stable,
            which means the returned map features are less likely to change over
            time.
            </para>
            </param></member>
        <member name="M:Google.Maps.MapLoadRegion.Load(Google.Maps.GameObjectOptions,Google.Maps.Loading.MixedZoomOptions)">
            <summary>
            Loads the portion of the map defined by this region, with adaptive zoom.
            </summary>
            <remarks>
            This loads at zoom level
            <see cref="F:Google.Maps.Loading.MixedZoomOptions.ForegroundZoom" /> up to a distance of
            <see cref="F:Google.Maps.Loading.MixedZoomOptions.ForegroundDistance" /> world space
            units from the <see cref="F:Google.Maps.MapLoadRegion.LoadingPoint" />. After that, it reduces the zoom level by 1 in
            bands that double in size, starting with <see cref="F:Google.Maps.Loading.MixedZoomOptions.FalloffDistance" />. See
            <see cref="M:Google.Maps.MapLoadRegion.GetZoom(System.Single,Google.Maps.Loading.MixedZoomOptions)" /> for details.
            </remarks>
            <param name="options">Game object options.</param>
            <param name="mixedZoomOptions">Mixed zoom options.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.ActivateTileCovering(Google.Maps.Loading.MixedZoomOptions)">
            <summary>
            Activates the loaded tiles that best cover the current region with the given mixed zoom
            options. Deactivates the rest.
            </summary>
            <param name="mixedZoomOptions">Mixed zoom options.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.UnloadOutside">
            <summary>Unloads the map outside this region.</summary></member>
        <member name="M:Google.Maps.MapLoadRegion.UnloadOutside(System.Int32)">
            <summary>Unloads the map outside this region, at the specified zoom level.</summary>
            <param name="zoom">
            The zoom level. Zoom levels ranges from 0-21.
            Only tiles at this zoom level are unloaded.
            </param></member>
        <member name="M:Google.Maps.MapLoadRegion.AddBounds(UnityEngine.Bounds)">
            <summary>Adds rectangular bounds to the map region.</summary>
            <param name="bounds">The bounds that define the region.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.AddCircle(UnityEngine.Vector3,System.Single)">
            <summary>Adds a circular area to the map region.</summary>
            <param name="center">The center of the circle.</param>
            <param name="radius">The radius of the circle.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.AddSphere(UnityEngine.Vector3,System.Single)">
            <summary>Adds a spherical area to the map region.</summary>
            <remarks>
            The portion of the map that is loaded is the intersection between the sphere and the
            ground plane.
            </remarks>
            <param name="center">The center of the sphere.</param>
            <param name="radius">The radius of the sphere.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.SetLoadingPoint(System.Nullable{UnityEngine.Vector3})">
            <summary>Sets the point in world space where tiles should load first.</summary>
            <remarks>
            <para>The SDK loads tiles in an order that corresponds to their distance
            from this point.</para>
            <para>
            The tiles that are closest to this point are loaded first, and then more
            distant tiles are loaded.
            </para>
            </remarks>
            <param name="point">
            The point in world space where tiles should load first. You can set this
            to null, which results in the default unordered tile loading behaviour.
            </param></member>
        <member name="M:Google.Maps.MapLoadRegion.SetGroundHeight(System.Single)">
            <summary>
            Sets the height of the ground plane.
            </summary>
            <remarks>
            This changes how the region is projected onto the area of the map to load - for example, it
            changes the plane that the camera frustum is projected onto for
            <see cref="M:Google.Maps.MapLoadRegion.AddViewport(UnityEngine.Camera,System.Single)" />. It does not change the position of loaded map
            features.
            </remarks>
            <param name="height">Y position of the ground plane.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.AddViewport(UnityEngine.Camera,System.Single)">
            <summary>
            <para>Adds an area to the map region based on the camera's view frustum.</para>
            <para>Overrides <see cref="M:Google.Maps.MapLoadRegion.SetLoadingPoint(System.Nullable{UnityEngine.Vector3})" />.</para>
            </summary>
            <remarks>
            The loaded area of the map is limited by the camera's far clip plane. If this loads too
            much, especially at shallow camera angles, then it can be limited further by `maxDistance`.
            It also loads the Camera to access the camera data in the scene. `camera` is
            used to sort the tiles based on their distance from the camera before loading so that
            tiles that are closest to the camera load first.
            <strong>Note:</strong> Calling this method multiple times with different
            cameras simply sorts the tiles by distance from the last `camera`.
            </remarks>
            <param name="camera">
            The camera used to limit the area of the map loaded. It is also used to determine
            which tiles to load first.
            </param>
            <param name="maxDistance">The maximum distance from the camera position to load.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.AddViewport(UnityEngine.Camera,UnityEngine.Transform,System.Single)">
            <summary>
            <para>
            Adds an area to the map region based on the camera's view frustum and given transform.
            </para>
            <para>Overrides <see cref="M:Google.Maps.MapLoadRegion.SetLoadingPoint(System.Nullable{UnityEngine.Vector3})" />.</para>
            </summary>
            <remarks>
            The loaded area of the map is limited by the camera's far clip plane. If this loads too
            much, especially at shallow camera angles, then it can be limited further by `maxDistance`.
            It also loads the Camera to access the camera data in the scene. `camera` is
            used to sort the tiles based on their distance from the camera before loading so that
            tiles that are closest to the camera load first.
            <strong>Note:</strong> Calling this method multiple times with different
            cameras simply sorts the tiles by distance from the last `camera`.
            </remarks>
            <param name="camera">
            The camera used to limit the area of the map loaded. It is also used to determine
            which tiles to load first.
            </param>
            <param name="transform">
            The <see cref="T:UnityEngine.Transform" /> used to transform the area of the map region to be loaded.
            This is usually the <see cref="T:UnityEngine.Transform" /> of the corresponding <see cref="T:Google.Maps.MapsService" />
            component to ensure that the right amount of geometry is loaded to fill the viewport
            whenever it is rotated or scaled.
            </param>
            <param name="maxDistance">The maximum distance from the camera position to load.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.Expand(System.Single)">
            <summary>Grows the region in every direction by at least the given distance.</summary>
            <param name="distance">The distance to expand by.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.ViewportPointToGroundPlane(UnityEngine.Camera,UnityEngine.Plane,UnityEngine.Plane,System.Single,UnityEngine.Vector3)">
            <summary>
            Projects a viewport point onto the ground plane, or the far clip plane if it is closer.
            </summary>
            <param name="camera">Camera.</param>
            <param name="groundPlane">Ground plane.</param>
            <param name="farPlane">Far clip plane of the camera.</param>
            <param name="maxDistance">Maximum distance.</param>
            <param name="point">Viewport point to project.</param></member>
        <member name="T:Google.Maps.MapLoadRegion.TileFilter">
            <summary>
            Boolean predicate used to decide whether to add tile coordinates to the map region.
            </summary>
            <param name="mercatorTileCoords">Tile coordinates.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.EnumerateTileCoords(Google.Maps.MapLoadRegion.Grid,System.Int32)">
            <summary>
            Enumerates all the <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s contained in this region.
            </summary>
            <remarks>
            Sort the tiles based on their distance from the camera before returning the list if a camera
            has been assigned, otherwise it will not sort the list before returning.
            </remarks>
            <param name="grid">
            Rectangular grid starting at (<see cref="P:Google.Maps.MapLoadRegion.Grid.MinX" />, <see cref="P:Google.Maps.MapLoadRegion.Grid.MinY" />) that
            indicates which tiles are included in this region.
            </param>
            <param name="zoom">
            Zoom level of the <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s to be created.
            </param></member>
        <member name="M:Google.Maps.MapLoadRegion.ShapesContainTileCoord(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Checks whether tileCoord is contained inside this region.
            </summary>
            <param name="mercatorTileCoords">Tile coordinates.</param>
            <returns>True if tileCoord is contained in Shapes.</returns></member>
        <member name="M:Google.Maps.MapLoadRegion.GenerateTileCoords(Google.Maps.Loading.MixedZoomOptions)">
            <summary>
            Generates all the <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s contained in this region.
            </summary>
            <param name="mixedZoomOptions">Mixed zoom options.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.GenerateTileCoords(Google.Maps.Coord.MercatorTileCoords,Google.Maps.Loading.MixedZoomOptions)">
            <summary>
            Determines which zoom level tileCoord should be loaded in this region recursively.
            </summary>
            <remarks>
            If tileCoord is in this region and its zoom level is greater than or equal to
            the appropriate zoom level returned by GetZoom, tileCoord will be loaded.
            Otherwise, recurse on each of tileCoord's child tiles - which is tileCoord's four
            corresponding <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s of the next incrementing zoom level.
            </remarks>
            <param name="mercatorTileCoords">Tile Coordinates.</param>
            <param name="mixedZoomOptions">Mixed zoom options.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.GetZoom(System.Single,Google.Maps.Loading.MixedZoomOptions)">
            <summary>
            Gets the appropriate zoom level for a distance value with the given mixed-zoom options.
            </summary>
            <param name="distance">
            The distance in Unity Worldspace units that will be mapped to a zoom level.
            </param>
            <param name="mixedZoomOptions">Mixed zoom options.</param></member>
        <member name="M:Google.Maps.MapLoadRegion.CompareTileCoordByDistance(Google.Maps.Coord.MercatorTileCoords,Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Comparison method for comparing two <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s by distance from
            <see cref="F:Google.Maps.MapLoadRegion.LoadingPoint" />.
            </summary>
            <param name="t1">First <see cref="T:Google.Maps.Coord.MercatorTileCoords" />.</param>
            <param name="t2">Second <see cref="T:Google.Maps.Coord.MercatorTileCoords" />.</param>
            <returns>Integer indicating the sort order.</returns></member>
        <member name="T:Google.Maps.MapPreviewOptions">
            <summary>
            Options for edit-time map preview.
            </summary></member>
        <member name="F:Google.Maps.MapPreviewOptions.Enable">
            <summary>
            Enable preview of map at edit time.
            </summary></member>
        <member name="F:Google.Maps.MapPreviewOptions.Initialized">
            <summary>
            Has the object been fully initialized?
            </summary></member>
        <member name="F:Google.Maps.MapPreviewOptions.SuppressWarningDialog">
            <summary>
            Used to suppress warning dialog during testing.
            </summary></member>
        <member name="F:Google.Maps.MapPreviewOptions.EnabledPrevious">
            <summary>
            A copy of <see cref="F:Google.Maps.MapPreviewOptions.Enable" />. Used to detect when <see cref="F:Google.Maps.MapPreviewOptions.Enable" /> has been
            changed. Should be disregarded until <see cref="F:Google.Maps.MapPreviewOptions.Initialized" /> is set.
            </summary></member>
        <member name="F:Google.Maps.MapPreviewOptions.Location">
            <summary>
            Location in the world at which to show preview.
            </summary></member>
        <member name="F:Google.Maps.MapPreviewOptions.Size">
            <summary>
            Size of preview in meters.
            </summary></member>
        <member name="F:Google.Maps.MapPreviewOptions.UnityEditorProxy">
            <summary>
            Used to display a dialog in edit mode.
            </summary></member>
        <member name="M:Google.Maps.MapPreviewOptions.DisplayEnableWarning">
            <summary>
            Display a warning about the dangers of enabling edit-time preview.
            </summary></member>
        <member name="M:Google.Maps.MapPreviewOptions.EditTimePreviewSupportsUnityVersion">
            <summary>
            Check whether edit-time preview supports the running version of Unity.
            </summary>
            <returns>
            True if edit-time preview supports the running version of Unity, false otherwise.
            </returns></member>
        <member name="M:Google.Maps.MapPreviewOptions.OnValidate">
            <summary>
            Passed down from <see cref="T:Google.Maps.MapsService" />..
            </summary></member>
        <member name="T:Google.Maps.MapsServiceParameters">
            <summary>
            Wrapper around a <see cref="T:Google.Maps.MapsService" /> that exposes only the fields that could change at
            runtime.
            </summary>
            <remarks>
            Pass this around internally wherever something needs to get the current value of a field that
            could be changed by client code.
            </remarks></member>
        <member name="P:Google.Maps.MapsServiceParameters.ObjectCreationFrameBudget">
            <summary><see cref="F:MapsService.ObjectCreationFrameBudget" />.</summary></member>
        <member name="M:Google.Maps.MapsServiceParameters.#ctor(Google.Maps.MapsService)">
            <summary>Constructor.</summary>
            <param name="mapsService">Maps service.</param></member>
        <member name="T:Google.Maps.MapsServiceShared">
            <summary>
            Class to handle responsibilities shared between all <see cref="T:Google.Maps.MapsService" /> instances.
            </summary></member>
        <member name="F:Google.Maps.MapsServiceShared.MapsServices">
            <summary>
            Candidate pool to decide which <see cref="T:Google.Maps.MapsService" /> instance is currently leader
            (if any are registered). This allows events that are sent to multiple
            <see cref="T:Google.Maps.MapsService" />s to be handled exactly once and for the condition where there
            are no available <see cref="T:Google.Maps.MapsService" />s to be handled explicitly.
            </summary></member>
        <member name="F:Google.Maps.MapsServiceShared.Instance">
            <summary>
            Singleton instance.
            </summary></member>
        <member name="F:Google.Maps.MapsServiceShared.LogsService">
            <summary>
            <see cref="T:Google.Maps.Logging.ILogsService" /> instance to send log events to.
            </summary></member>
        <member name="F:Google.Maps.MapsServiceShared.CrashDetector">
            <summary>
            <see cref="T:Google.Maps.Logging.ProcessCrashes.CrashDetector" /> instance used to detect foreground crashes.
            </summary></member>
        <member name="M:Google.Maps.MapsServiceShared.GetInstance">
            <summary>
            Get the singleton instance of <see cref="T:Google.Maps.MapsServiceShared" />.
            </summary>
            <returns>The singleton instance of <see cref="T:Google.Maps.MapsServiceShared" />.</returns></member>
        <member name="M:Google.Maps.MapsServiceShared.Initialize">
            <summary>
            Initialization that is common to all constructors.
            </summary></member>
        <member name="M:Google.Maps.MapsServiceShared.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.MapsServiceShared.#ctor(Google.Maps.Logging.ILogsService,Google.Maps.Logging.ProcessCrashes.CrashDetector)">
            <summary>
            Test constructor.
            </summary>
            <param name="logsService">
            <see cref="T:Google.Maps.Logging.ILogsService" /> instance to be used for testing.
            </param>
            <param name="crashDetector">
            <see cref="T:Google.Maps.Logging.ProcessCrashes.CrashDetector" /> instance to be used for testing.
            </param></member>
        <member name="M:Google.Maps.MapsServiceShared.MapsServiceEnable(Google.Maps.MapsService)">
            <summary>
            Should be called by <see cref="T:Google.Maps.MapsService" /> whenever an instance is enabled.
            </summary>
            <param name="sender">The <see cref="T:Google.Maps.MapsService" /> sending the event.</param></member>
        <member name="M:Google.Maps.MapsServiceShared.MapsServiceDisable(Google.Maps.MapsService)">
            <summary>
            Should be called by <see cref="T:Google.Maps.MapsService" /> whenever an instance is disabled.
            </summary>
            <param name="sender">The <see cref="T:Google.Maps.MapsService" /> sending the event.</param></member>
        <member name="M:Google.Maps.MapsServiceShared.MapsServiceStartup(Google.Maps.MapsService)">
            <summary>
            Should be called by <see cref="T:Google.Maps.MapsService" /> whenever <see cref="M:Google.Maps.MapsService.Startup" />
            is called.
            </summary>
            <param name="sender">The <see cref="T:Google.Maps.MapsService" /> sending the event.</param></member>
        <member name="M:Google.Maps.MapsServiceShared.MapsServiceMobilePause(Google.Maps.MapsService)">
            <summary>
            Should be called by <see cref="T:Google.Maps.MapsService" /> whenever the application is paused on
            mobile.
            </summary>
            <param name="sender">The <see cref="T:Google.Maps.MapsService" /> sending the event.</param></member>
        <member name="M:Google.Maps.MapsServiceShared.MapsServiceMobileUnpause(Google.Maps.MapsService)">
            <summary>
            Should be called by <see cref="T:Google.Maps.MapsService" /> whenever the application is unpaused on
            mobile.
            </summary>
            <param name="sender">The <see cref="T:Google.Maps.MapsService" /> sending the event.</param></member>
        <member name="M:Google.Maps.MapsServiceShared.MaybeStartSendingLogs">
            <summary>
            Starts logging on <see cref="T:Google.Maps.Logging.LogsService" /> if there exists an enabled
            <see cref="T:Google.Maps.MapsService" /> with diagnostics enabled.
            </summary></member>
        <member name="T:Google.Maps.MetadataOptions">
            <summary>
            Options controlling the addition of metadata to game objects generated by Musk.
            </summary></member>
        <member name="T:Google.Maps.MetadataOptions.MethodType">
            <summary>
            Which method should be used to attach metadata to game objects?
            </summary></member>
        <member name="F:Google.Maps.MetadataOptions.MethodType.NONE">
            <summary>
            Don't attach any metadata to game objects.
            </summary></member>
        <member name="F:Google.Maps.MetadataOptions.MethodType.UNITY_COMPONENTS">
            <summary>
            Attach metadata in the form of Unity components (slow).
            </summary></member>
        <member name="F:Google.Maps.MetadataOptions.MethodType.METADATA_REGISTER">
            <summary>
            Use a metadata register.
            </summary></member>
        <member name="F:Google.Maps.MetadataOptions.Method">
            <summary>
            Method to use to attach metadata to game objects.
            </summary></member>
        <member name="F:Google.Maps.MetadataOptions.MetadataRegister">
            <summary>
            Metadata register to use when <see cref="F:Google.Maps.MetadataOptions.MethodType.METADATA_REGISTER" /> is
            selected.
            </summary></member>
        <member name="T:Google.Maps.PlayableLocationsService">
            <summary>
            The entry point for using Playable Locations.
            </summary></member>
        <member name="T:Google.Maps.PlayableLocationsService.BadLocationReason">
            <summary>
            Reason for reporting a bad playable location.
            </summary></member>
        <member name="F:Google.Maps.PlayableLocationsService.BadLocationReason.Other">
            <summary>
            Reason not included in the following list. Clients must provide reasonDetails with more
            information.
            </summary></member>
        <member name="F:Google.Maps.PlayableLocationsService.BadLocationReason.NotPedestrianAccessible">
            <summary>
            Location is not accessible to pedestrians. For example, location is in the middle of a
            highway.
            </summary></member>
        <member name="F:Google.Maps.PlayableLocationsService.BadLocationReason.NotOpenToPublic">
            <summary>
            Location is not open to everyone. For example, a private office building.
            </summary></member>
        <member name="F:Google.Maps.PlayableLocationsService.BadLocationReason.PermanentlyClosed">
            <summary>
            Location is permanently closed. For example the shop at that location has been shut down.
            </summary></member>
        <member name="F:Google.Maps.PlayableLocationsService.RequestHeaders">
            <summary>
            Request headers specifying the post data content type, and app identifiers on mobile
            platforms.
            </summary></member>
        <member name="M:Google.Maps.PlayableLocationsService.Awake">
            <summary>Part of Unity's MonoBehaviour lifecycle.</summary></member>
        <member name="M:Google.Maps.PlayableLocationsService.ReportBadPoint(System.String,Google.Maps.PlayableLocationsService.BadLocationReason,System.String,Google.Maps.ReportBadPointStatusCallback)">
            <summary>
            Submits a bad place report to the server.
            </summary>
            <remarks>
            After the request finishes, the ReportBadPointStatus parameter of the callback is populated
            with information about whether the request succeeded. Internally, the network requests are
            retried multiple times in case of failures.
            <strong>Note:</strong>`reasonDetails` must be non-empty.
            </remarks>
            <param name="placeId">The ID of the place to report.</param>
            <param name="reason">The primary reason why this is a bad place for gameplay.</param>
            <param name="reasonDetails">
            Freeform text explaining why the user reported this place.
            </param>
            <param name="statusCallback">
            The callback to call when the request completes.
            </param></member>
        <member name="M:Google.Maps.PlayableLocationsService.ReportPresentedPlace(System.Int32,System.String)">
            <summary>
            Reports that a game object placed at this playable location was
            presented to the user.
            </summary>
            <remarks>
            %Google uses the information logged in `ReportPresentedPlace` and
            `ReportInteractedPlace` to improve the quality of playable locations.
            This is done by comparing how often game objects placed at different
            playable locations are visited by players.
            Because different game object types (for example, monster and powerup)
            are expected to be visited with different frequencies, you must assign a
            `gameObjectType` to each playable location (for example:
            monster=<em>0</em>, powerup=<em>1</em>). This is used to bucket reports
            into comparable events. There should be only a small number of unique
            game object typesâ€”ideally no more than 10.
            You can call this method repeatedly with the same Place IDs. The SDK
            only reports places to the server if they haven't been reported before,
            or if the player interacted with the game object placed at the playable
            location since the last report.
            <strong>Note:</strong> You are free to define what
            <em>presented</em> means, as long as you use that definition
            consistently. One possibility is to report all playable locations the
            lie within 500 meters of the player.
            </remarks>
            <param name="gameObjectType">
            The type of game object placed at this playable location.
            </param>
            <param name="placeId">The place identifier.</param></member>
        <member name="M:Google.Maps.PlayableLocationsService.ReportInteractedPlace(System.Int32,System.String)">
            <summary>
            Reports that the user interacted with the game object placed at this
            playable location.
            </summary>
            <remarks>
            For more information about `gameObjectType`, see ReportPresentedPlace().
            </remarks>
            <param name="gameObjectType">
            The type of game object placed at this playable location.
            </param>
            <param name="placeId">The place identifier.</param></member>
        <member name="T:Google.Maps.PlayableLocationsService.ReportBadPointStatus">
            <summary>
            Encapsulates the status of the completed request for submitting a bad place report.
            </summary></member>
        <member name="F:Google.Maps.PlayableLocationsService.ReportBadPointStatus.IsError">
            <summary>
            Indicates whether the request failed.
            </summary></member>
        <member name="F:Google.Maps.PlayableLocationsService.ReportBadPointStatus.Error">
            <summary>
            Contains details about the error when the request fails.
            </summary></member>
        <member name="M:Google.Maps.PlayableLocationsService.ReportBadPointStatus.#ctor(System.Boolean,System.String)">
            <summary>
            The ReportBadPointStatus class constructor.
            </summary></member>
        <member name="T:Google.Maps.MapsService">
            <summary>
            The <strong>%MapsService</strong> class serves as the entry point for
            interacting with the %Maps %Unity SDK.
            </summary>
            <remarks>
            The SDK instantiates this class as a %Unity script component called
            <strong>%Maps Service (Script)</strong>. You use it in a %Unity scene
            by adding the <strong>%Maps Service (Script)</strong> component to an empty
            <see cref="T:UnityEngine.GameObject" /> in your scene. This GameObject becomes your
            <em>anchor</em>â€”and the map feature GameObjects that the SDK generates are
            added as its children.
            You can configure options using the <strong>Inspector</strong>, but you
            cannot change most options after calling <see cref="M:Google.Maps.MapsService.Awake" /> (for example,
            you cannot change the <see cref="F:Google.Maps.MapsService.ZoomLevel" />). However, you can create
            multiple <strong>%MapsService</strong> instances, each with different
            properties. For example, you could add a bird's-eye mini-map with a
            different zoom level to your main map.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.FeatureTileApiUrlFormat">
            <summary>
            The format string to be used for constructing HTTP Feature Tile requests. The format items
            will be replaced with (x, y, z) coordinates for requesting tiles.
            </summary>
            <remarks>
            Other tile request options will be set via URL parameters (eg:
            "?key=API_KEY&amp;languageCode=TILE_LANGUAGE_CODE").
            If you modify this field after calling <see cref="M:Google.Maps.MapsService.Awake" />, then your change
            won't take effect.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.TerrainTileApiUrlFormat">
            <summary>
            The format string to be used for constructing HTTP Terrain Tile requests. The format items
            will be replaced with (x, y, z) coordinates for requesting tiles.
            </summary>
            <remarks>
            Other tile request options will be set via URL parameters (eg:
            "?key=API_KEY&amp;languageCode=TILE_LANGUAGE_CODE").
            If you modify this field after calling <see cref="M:Google.Maps.MapsService.Awake" />, then your change
            won't take effect.
            </remarks></member>
        <member name="P:Google.Maps.MapsService.Version">
            <summary>The version of the Maps SDK for Unity.</summary></member>
        <member name="F:Google.Maps.MapsService.ApiKey">
            <summary>The API key. You must have both the
            Semantic Tile API and the Playable Locations API enabled. For more information,
            see <a href="/maps/documentation/gaming/tt/get_api_key">Get API Key</a>.</summary>
            <remarks><strong>Note:</strong> If you modify this field after calling
            <see cref="M:Google.Maps.MapsService.Awake" />, it has no effect.</remarks></member>
        <member name="F:Google.Maps.MapsService.NetworkPoolSize">
            <summary>Maximum number of concurrent connections to the Semantic Tile API.</summary>
            <remarks>
            If you use a value less than <em>100</em>, then you should expect longer
            load times for map data.
            <strong>Warning:</strong> This field is experimental. Its value might
            change in a future release.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.NetworkTimeoutSeconds">
            <summary>
            The maximum length of time (in seconds) to wait for a response after
            requesting map data.
            </summary>
            <remarks>
            When you set this value to <em>0</em>, there is no limit to the wait
            time.
            <strong>Note:</strong> This attribute is an integer rather than a
            floating point due to a limitation of the
            <a href="https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.html">
            UnityWebRequest</a> object.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.EnableDiagnostics">
            <summary>
            Specifies whether to send diagnostic information to Google. An example
            of diagnostic information is frame rate.
            </summary>
            <remarks>
            <strong>Caution:</strong> You must set this value before the %Unity
            runtime calls <see cref="M:Google.Maps.MapsService.Awake" />.
            </remarks></member>
        <member name="P:Google.Maps.MapsService.Google#Maps#IDiagnosableService#DiagnosticsEnabled">
            <inheritdoc /></member>
        <member name="F:Google.Maps.MapsService._Events">
            <summary>A backing field for <see cref="T:Google.Maps.Event.Events" />.</summary>
            <remarks>
            The backing field appears in the %Unity Inspector (due to <see cref="T:UnityEngine.SerializeField" />)
            while keeping the public property readonly.
            </remarks></member>
        <member name="P:Google.Maps.MapsService.Events">
            <summary>
            A container for all of the events fired by the SDK.
            </summary>
            <remarks>
            Events are part of the mechanism that allows you to style map
            feature GameObjects. For example, the SDK fires `WillCreate` and
            `DidCreate` events when it generates <see cref="T:Google.Maps.Feature.MapFeature" /> objects
            and their corresponding <see cref="T:UnityEngine.GameObject" /> during map loading.
            These events contain geometry information and metadata that you can use
            to style the GameObject.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.EnableModeledStructures">
            <summary>
            Specifies whether to enable <see cref="T:Google.Maps.Feature.ModeledStructure" /> features.
            </summary>
            <remarks>
            When set to <em>false</em>, <see cref="T:Google.Maps.Feature.ExtrudedStructure" />
            features are used instead, which results in reduced network traffic, CPU
            usage, and memory usage.
            If you modify this field after <see cref="M:Google.Maps.MapsService.Awake" /> is called, then
            your change won't take effect.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.EnablePrivateRoads">
            <summary>
            Specifies whether loaded map will include roads (<see cref="T:Google.Maps.Feature.Segment" />) that are
            marked private. A road may be marked private because it has signage discouraging or
            prohibiting use by the general public (e.g., roads with signs that say "Private",
            or "No trespassing.") or if it is within a gated community or other private area.
            Care should be taken when enabling private roads in localities where encouraging gameplay
            around these roads is discouraged by local expectations.
            </summary></member>
        <member name="F:Google.Maps.MapsService.EnableTerrain">
            <summary>
            Specifies whether the loaded map will include terrain data. Terrain data describes
            continuous properties that cover the entire landscape, such as elevation.
            </summary>
            <remarks>
            Note: Terrain elevation is only available for zoom levels 8 and beyond. If elevation is
            requested for levels out of this range, a flat terrain with a uniform altitude of zero
            meters above mean sea level will be returned.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.Use32BitMeshIndexBuffers">
            <summary>
            Specifies whether to generate features that have meshes with more than 65536 vertices.
            </summary>
            <remarks>
            This is not supported on all devices. See
            https://docs.unity3d.com/ScriptReference/Mesh-indexFormat.html for more information.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.ObjectCreationFrameBudget">
            <summary>
            The maximum length of time (in milliseconds) per frame to use for creating GameObjects.
            </summary>
            <remarks>
            Setting this to <em>0</em> defaults to 40ms.
            This field can be modified at any time to change the current rate of creating GameObjects.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.StaticBatching">
            <summary>
            Specifies whether to enable static batching for all generated
            GameObjects.
            </summary>
            <remarks>
            When enabled, GameObjects are statically batched, unless otherwise
            specified in the corresponding `WillCreate` event.
            If you modify this field after calling <see cref="M:Google.Maps.MapsService.Awake" />, then
            your change won't take effect.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.TerrainOptions">
            <summary>
            Options for configuring Terrain.
            </summary></member>
        <member name="F:Google.Maps.MapsService.EnableIntersections">
            <summary>
            Specifies whether to enable the display of extra geometry at road intersections. Applicable
            only when <see cref="F:Google.Maps.MapsService.EnableRoadLattice" /> is true.
            </summary>
            <remarks>
            This will add a slight map loading overhead and small increase in number of triangles
            rendered per frame.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.EnableExhaustiveIntersectionReconstruction">
            <summary>
            Specifies whether to enable extra, expensive searching for road intersections.
            </summary>
            <remarks>
            This flag can be used to find road intersections that have been optimized out of the source
            data.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.EnableRoadLattice">
            <summary>
            Specifies whether to build and maintain a road lattice from the roads in the currently
            loaded portion of the map.
            </summary>
            <remarks>
            Enabling this will add overhead to each load of a non-cached map region.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.MapPreviewOptions">
            <summary>
            Options for edit-time preview of map.
            </summary></member>
        <member name="F:Google.Maps.MapsService.MetadataOptions">
            <summary>
            Options controlling how and if metadata is attached to game objects.
            </summary>
            <remarks>
            If you modify this field after <see cref="M:Google.Maps.MapsService.Awake" /> is called, then
            previously-created objects won't be updated to reflect the new options.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.ZoomLevel">
            <summary>
            The map zoom (magnification) level.
            </summary>
            <remarks>
            Controls the level of detail of map data (the set of feature types
            returned, their density, and geometry simplification). This determines
            the size of the requested map tiles.
            The default zoom level is <em>17</em>â€”which is considered appropriate
            for location-based games because lower zoom levels can miss important
            features such as buildings. Zoom level 17 is also considered more stable,
            meaning the set of features returned is less likely to change.
            If you modify this field after <see cref="M:Google.Maps.MapsService.Awake" /> is called, then
            your change won't take effect.
            </remarks></member>
        <member name="F:Google.Maps.MapsService._CacheOptions">
            <summary>Backing field for <see cref="T:Google.Maps.CacheOptions" />.</summary>
            <remarks>
            The backing field appears in the %Unity Inspector (due to <see cref="T:UnityEngine.SerializeField" />)
            whilst keeping the public property readonly.
            </remarks></member>
        <member name="P:Google.Maps.MapsService.CacheOptions">
            <summary>
            A container of parameters used for caching map data.
            </summary>
            <remarks>
            If you modify this field after <see cref="M:Google.Maps.MapsService.Awake" /> is called, then
            your change won't take effect.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.CountryProvider">
            <summary>Country code provider.</summary></member>
        <member name="F:Google.Maps.MapsService.LanguageCode">
            <summary>
            The BCP-47 language code corresponding to the language that Map content should be
            localized with (for example "en-US" or "sr-Latn").
            </summary>
            <remarks>
            More details about the BCP-47 language code can be found at
            http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
            If not specified the current SystemLanguage will be used.
            <strong> Warning:</strong> Specifying a language other than the current System language is
            not recommended, as text labels on the map will be shown in a language potentially
            unfamiliar to the user, and potentially in a character set they cannot read. Use with
            caution.
            </remarks></member>
        <member name="P:Google.Maps.MapsService.Projection">
            <summary>The game world coordinate system.</summary>
            <remarks>
            Manages the floating origin, Mercator scale, and converts between
            %Unity Worldspace (<see cref="T:UnityEngine.Vector3" />), Earth-scale Mercator Space
            (<see cref="T:Google.Maps.Coord.Vector2D" />), and %Google %Maps Tile Coordinates
            (<see cref="T:Google.Maps.Coord.MercatorTileCoords" />).
            <strong>Note:</strong> You must set the floating origin before
            using the coordinate system.
            </remarks>
            <exception cref="T:Google.Maps.Exception.FloatingOriginNotSetException">
            Thrown when you use the coordinate system before setting the floating
            origin.
            </exception>
            <seealso cref="M:Google.Maps.MapsService.InitFloatingOrigin(Google.Maps.Coord.LatLng)" /></member>
        <member name="P:Google.Maps.MapsService.GameObjectManager">
            <summary>
            Tracks destroyed and suppressed GameObjects.
            </summary>
            <remarks>
            It notifies the SDK whenever a <see cref="T:UnityEngine.GameObject" /> is destroyed so
            that it can then be recreated properly on subsequent calls to
            <see cref="M:Google.Maps.MapsService.LoadMap(UnityEngine.Bounds,Google.Maps.GameObjectOptions)" />.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.FinalizerRegister">
            <summary>
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </summary></member>
        <member name="F:Google.Maps.MapsService.MinBasemapSortingOrder">
            <summary>
            The minimum rendering sort order to use for basemap objects generated by
            <see cref="T:Google.Maps.MapsService" />. <see cref="T:Google.Maps.MapsService" /> manages
            <see cref="P:UnityEngine.Renderer.sortingOrder" /> on game objects generated by the SDK in order to
            achieve the correct rendering order for features.
            </summary></member>
        <member name="F:Google.Maps.MapsService.MaxBasemapSortingOrder">
            <summary>
            The maximum sorting order to use for basemap objects generated by
            <see cref="T:Google.Maps.MapsService" />. <see cref="T:Google.Maps.MapsService" /> manages
            <see cref="P:UnityEngine.Renderer.sortingOrder" /> on game objects generated by the SDK in order to
            achieve the correct rendering order for features. All game objects that should display
            above the basemap should have a sorting order greater than this value.
            </summary></member>
        <member name="F:Google.Maps.MapsService.NonBasemapSortingOrder">
            <summary>
            The sorting order to use for non-basemap objects generated by <see cref="T:Google.Maps.MapsService" />.
            <see cref="T:Google.Maps.MapsService" /> manages <see cref="P:UnityEngine.Renderer.sortingOrder" /> on game objects
            generated by the SDK to achieve the correct rendering order for features.
            </summary></member>
        <member name="F:Google.Maps.MapsService.GameObjectLoader">
            <summary>
            Schedules the creating and destruction of GameObjects.
            </summary></member>
        <member name="F:Google.Maps.MapsService.TileManager">
            <summary>Tile manager.</summary></member>
        <member name="F:Google.Maps.MapsService.FeatureTileProducer">
            <summary>
            Tile producer that asynchronously loads feature tiles from the Semantic Tile API.
            </summary></member>
        <member name="F:Google.Maps.MapsService.TerrainTileProducer">
            <summary>
            Tile producer that asynchronously loads terrain tiles, if <see cref="F:Google.Maps.MapsService.EnableTerrain" /> is
            true.
            </summary></member>
        <member name="F:Google.Maps.MapsService.FeatureCache">
            <summary>
            Cache for feature tiles.
            </summary>
            <remarks>
            Cache misses fall through to <see cref="T:Google.Maps.TileLoading.ProtoTileProducer" />.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.TerrainCache">
            <summary>
            Cache for terrain tiles.
            </summary></member>
        <member name="F:Google.Maps.MapsService.UnityEditorProxy">
            <summary>
            Dynamic interface to UnityEditor assembly. Used for queueing player loop updates for
            edit-time preview.
            </summary></member>
        <member name="F:Google.Maps.MapsService.Attribution">
            <summary>
            The <see cref="T:Google.Maps.Unity.Attribution.IAttribution" /> for this <see cref="T:Google.Maps.MapsService" />.
            </summary></member>
        <member name="P:Google.Maps.MapsService.RoadLattice">
            <summary>
            Global road lattice for this MapsService. Maintains a graph of roads in loaded tiles,
            stitched across tile boundaries.
            </summary>
            <remarks>
            The road lattice is in Unity World Space relative to the origin of the GameObject to which
            this Maps Service is attached, so the RoadLattice must be updated when the floating origin
            is updated.
            </remarks></member>
        <member name="F:Google.Maps.MapsService.MapLoadRegion">
            <summary>Region of the map to load, returned by <see cref="M:Google.Maps.MapsService.MakeMapLoadRegion" />.</summary>
            <remarks>This is reused to reduce GC churn.</remarks></member>
        <member name="F:Google.Maps.MapsService.RetryStartupOnValidate">
            <summary>
            True if <see cref="M:Google.Maps.MapsService.OnValidate" /> should retry startup.
            </summary></member>
        <member name="F:Google.Maps.MapsService.DidMapInit">
            <summary>
            Whether <see cref="M:Google.Maps.MapsService.MapInit" /> completed successfully.
            </summary></member>
        <member name="M:Google.Maps.MapsService.RefreshPreview">
            <summary>
            Force preview to refresh.
            </summary></member>
        <member name="M:Google.Maps.MapsService.OnValidate">
            <summary>
            Refresh edit-time preview when any of the top-level <see cref="T:Google.Maps.MapsService" /> settings are
            changed.
            </summary></member>
        <member name="F:Google.Maps.MapsService.RenderOrderManager">
            <summary>
            The render order manager to pass down to the game object factories.
            </summary></member>
        <member name="M:Google.Maps.MapsService.Awake">
            <summary>Part of Unity's MonoBehaviour lifecycle.</summary></member>
        <member name="M:Google.Maps.MapsService.MaybeGetGameObjectOptions">
            <summary>
            Get the game object options (including style settings) that have been attached to this
            <see cref="T:Google.Maps.MapsService" />.
            <seealso cref="T:Google.Maps.Feature.Style.Attachment.StyleAttachment" />
            </summary>
            <returns>The attached game object options.</returns></member>
        <member name="M:Google.Maps.MapsService.GetPreviewBounds">
            <summary>
            Gets the bounds covered by the edit-time preview. Works in play mode.
            </summary>
            <returns>The bounds covered by the edit-time preview.</returns></member>
        <member name="M:Google.Maps.MapsService.DisableEditTimePreview">
            <summary>
            Disable edit-time preview.
            </summary></member>
        <member name="M:Google.Maps.MapsService.InitEditTimePreview">
            <summary>
            Enable edit-time preview.
            </summary></member>
        <member name="M:Google.Maps.MapsService.IsEditTimePreviewActive">
            <summary>
            Returns *true* if edit-time preview is active, *false* otherwise.
            </summary></member>
        <member name="M:Google.Maps.MapsService.MaybeLoadEditTimePreview">
            <summary>
            If edit-time preview is active then try to load the map with the most up-to-date options.
            Map must be unloaded first.
            </summary></member>
        <member name="M:Google.Maps.MapsService.MaybeLoadEditTimePreview(Google.Maps.Event.MapLoadedArgs)">
            <summary>
            Load the map with the most up-to-date options. Map must be unloaded first.
            </summary></member>
        <member name="M:Google.Maps.MapsService.RefreshEditTimePreview">
            <summary>
            Refresh the edit-time preview. Map unload is triggered, and a handler to load the map
            is registered that will be called on unload completion.
            </summary></member>
        <member name="M:Google.Maps.MapsService.EnableVerboseLogging(System.Boolean)">
            <summary>
            Specifies whether to enable verbose logging.
            </summary>
            <remarks>
            Enables/disables logging verbose debug information to the %Unity console.
            <strong>Note:</strong> This feature is available only in debug builds.
            </remarks>
            <param name="enable">Specifies whether to enable or disable verbose logging.</param></member>
        <member name="M:Google.Maps.MapsService.LoadMap(UnityEngine.Bounds,Google.Maps.GameObjectOptions)">
            <summary>
            Loads a rectangular region (bounds) of the map.
            </summary>
            <remarks>
            GameObjects are asynchronously created for all map features within the
            bounds that you specify.
            <strong>Note:</strong> You must set the origin to
            <see cref="T:Google.Maps.Coord.Projection" /> before calling this method.
            Calling this function is equivalent to calling
            `LoadMapRegion().Bounds(bounds).Load(options)`.
            </remarks>
            <param name="bounds">Defines a rectangular region.</param>
            <param name="options">User defined options which customise map construction.</param>
            <exception cref="T:Google.Maps.Exception.FloatingOriginNotSetException">
            Thrown when the floating origin isn't set.
            </exception>
            <seealso cref="M:Google.Maps.MapsService.InitFloatingOrigin(Google.Maps.Coord.LatLng)" /></member>
        <member name="M:Google.Maps.MapsService.MakeMapLoadRegion">
            <summary>
            Initializes a <see cref="T:Google.Maps.MapLoadRegion" /> object to load a region of the
            map.
            </summary>
            <remarks>
            GameObjects are asynchronously created for all map features within the
            bounds that you specify. You must set the floating origin to
            <see cref="T:Google.Maps.Coord.Projection" /> before calling this method.
            The MapLoadRegion returned by this method is cleared and reused between calls to avoid
            unnecessary garbage collection.
            </remarks>
            <example>
            The following example loads the region of the map visible in the main camera's viewport.
            <pre>
            <c>
            MapsService.MakeMapLoadRegion().AddViewport(Camera.main).Load(options);
            </c>
            </pre>
            </example></member>
        <member name="M:Google.Maps.MapsService.UnloadUnused(System.TimeSpan)">
            <summary>Unloads parts of the map that have not been loaded or displayed recently.</summary>
            <param name="age">
            Anything that hasn't been used in at least this long will be destroyed.
            </param></member>
        <member name="M:Google.Maps.MapsService.InitFloatingOrigin(Google.Maps.Coord.LatLng)">
            <summary>
            Sets the initial origin of the coordinate system.
            </summary>
            <remarks>
            When converting <see cref="T:Google.Maps.Coord.LatLng" /> values to and from %Unity
            Worldspace, <see cref="T:UnityEngine.Vector3" /> values are translated relative to the
            current origin.
            The initial origin value is used to determine the %Unity Worldspace
            scale for the entire gaming session. Mercator scale is based on the
            latitude, per the Web Mercator projection.
            The recommended `floatingOrigin` value to use is the player's starting
            location. It should be near the player's current location to ensure that
            %Unity Worldspace <see cref="T:UnityEngine.Vector3" /> values remain small to avoid
            single precision floating point errors.
            </remarks>
            <param name="floatingOrigin">The initial origin value.</param>
            <exception cref="T:System.InvalidOperationException">
            Thrown when the origin has already been set.
            </exception></member>
        <member name="M:Google.Maps.MapsService.MoveFloatingOrigin(Google.Maps.Coord.LatLng,System.Collections.Generic.ICollection{UnityEngine.GameObject})">
            <summary>
            Re-establishes the origin based on a new <see cref="T:Google.Maps.Coord.LatLng" />
            value.
            </summary>
            <remarks>
            You should re-establish the origin whenever the user moves far enough
            away from the origin that floating errors become noticeable.
            This method translates all map feature <see cref="T:UnityEngine.GameObject" />s created
            by the SDK. You can pass in additional GameObjects to be translated. You
            can also use the returned <see cref="T:UnityEngine.Vector3" /> offset value to manually
            translate additional GameObjects yourself.
            This method is an overload of the method
            <c><see cref="M:Google.Maps.MapsService.MoveFloatingOrigin(UnityEngine.Vector3,System.Collections.Generic.ICollection{UnityEngine.GameObject})" /></c>.
            <strong>See Also:</strong> <see cref="M:Google.Maps.MapsService.InitFloatingOrigin(Google.Maps.Coord.LatLng)" />.
            </remarks>
            <param name="floatingOrigin">The new origin value.</param>
            <param name="gameObjects">Additional <see cref="T:UnityEngine.GameObject" />s to be
            translated (if there are any).</param>
            <returns>
            A <see cref="T:UnityEngine.Vector3" /> offset that you can use for manually translating
            <see cref="T:UnityEngine.GameObject" />s to reposition them relative to the new origin.
            </returns>
            <exception cref="T:Google.Maps.Exception.FloatingOriginNotSetException">
            Thrown when the origin has not been set.
            </exception>
            <example>
            The following code snippet re-establishes the origin to London. Two
            camera objects are also moved, to keep all GameObjects in the same
            position relative to the camera.
            <pre>
            <c>
            MapsService.MoveFloatingOrigin(
            new LatLng(51.5081, -0.0760),
            new GameObject[] {camera1, camera2});
            </c>
            </pre>
            </example></member>
        <member name="M:Google.Maps.MapsService.MoveFloatingOrigin(UnityEngine.Vector3,System.Collections.Generic.ICollection{UnityEngine.GameObject})">
            <summary>
            Reestablishes the origin based based on a new
            [Vector3](https://docs.unity3d.com/ScriptReference/Vector3.html) value.
            </summary>
            <remarks>
            This method is an overload of the method
            <c><see cref="M:Google.Maps.MapsService.MoveFloatingOrigin(Google.Maps.Coord.LatLng,System.Collections.Generic.ICollection{UnityEngine.GameObject})" /></c>.
            </remarks>
            <param name="floatingOrigin">The new origin as a `Vector3` value.</param>
            <param name="gameObjects">Additional <see cref="T:UnityEngine.GameObject" />s to be
            moved (if there are any).</param>
            <returns>
            A <see cref="T:UnityEngine.Vector3" /> offset value, for manually moving
            <see cref="T:UnityEngine.GameObject" />s.
            </returns>
            <exception cref="T:Google.Maps.Exception.FloatingOriginNotSetException">
            Thrown when the floating origin has not been set.
            </exception>
            <seealso cref="M:Google.Maps.MapsService.InitFloatingOrigin(Google.Maps.Coord.LatLng)" /></member>
        <member name="M:Google.Maps.MapsService.ResolveApiKey">
            <summary>Resolves which API key to use.</summary>
            <returns>The API Key to use.</returns></member>
        <member name="M:Google.Maps.MapsService.ResolveCountryProvider">
            <summary>Finds the <see cref="T:Google.Maps.CountryProvider" /> component.</summary></member>
        <member name="M:Google.Maps.MapsService.CacheBasePath(System.String)">
            <summary>
            Determines the base path for cached tiles based on
            <see cref="F:Google.Maps.CacheOptions.Directory" />.
            </summary></member>
        <member name="M:Google.Maps.MapsService.FrameUpdate">
            <summary>
            Handle Unity's Update event.
            </summary></member>
        <member name="M:Google.Maps.MapsService.VerifyParameters(System.String,System.Int32)">
            <summary>
            Verifies that the given initialization parameters for a <see cref="T:Google.Maps.MapsService" /> are valid.
            </summary>
            <param name="apiKey">The API key.</param>
            <param name="zoomLevel">The zoom level.</param>
            <exception cref="T:System.ArgumentException">Thrown if a parameter is invalid.</exception></member>
        <member name="M:Google.Maps.MapsService.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.MapsService.ThrowIfNotInitialized">
            <summary>
            Verifies that the <see cref="T:Google.Maps.MapsService" /> has been initialized.
            </summary>
            <exception cref="T:Google.Maps.Exception.MapsServiceNotInitializedException">
            Thrown if the <see cref="T:Google.Maps.MapsService" /> has not been initialized.
            </exception></member>
        <member name="M:Google.Maps.MapsService.MapInit">
            <summary>
            Initialize main mapping classes.
            </summary></member>
        <member name="M:Google.Maps.MapsService.MobilePause">
            <summary>
            Handle mobile application being paused.
            </summary></member>
        <member name="M:Google.Maps.MapsService.MobileUnpause">
            <summary>
            Handle mobile application being unpaused.
            </summary></member>
        <member name="M:Google.Maps.MapsService.MobileQuit">
            <summary>
            Handle mobile application quitting.
            </summary></member>
        <member name="M:Google.Maps.MapsService.Startup">
            <summary>
            Handle component startup.
            </summary></member>
        <member name="M:Google.Maps.MapsService.Shutdown">
            <summary>
            Handle component shutdown.
            </summary></member>
        <member name="M:Google.Maps.MapsService.Enable">
            <summary>
            Enable the instance.
            </summary></member>
        <member name="M:Google.Maps.MapsService.Disable">
            <summary>
            Disable the instance.
            </summary></member>
        <member name="M:Google.Maps.MapsService.Destroy">
            <summary>
            Handle object destruction.
            </summary></member>
        <member name="T:Google.Maps.ReportBadPointStatusCallback">
            <summary>
            A callback that takes a `ReportBadPointStatus` object.
            </summary></member>
        <member name="T:Google.Maps.TerrainOptions">
            <summary>
            Encapsulates terrain parameters.
            </summary></member>
        <member name="F:Google.Maps.TerrainOptions.TerrainMeshMetersPerPoint">
            <summary>
            Specifies the target resolution of each generated Unity Terrain tiles in meters per point.
            </summary>
            <remarks><para>
            The actual resolution of each terrain tile may differ from the provided value. Unity
            <see cref="T:UnityEngine.Terrain" /> tiles have square height maps with their resolution as a
            power of 2 + 1. The Maps Unity SDK rounds the provided value to the nearest power of 2 + 1
            to meet this requirement.
            </para><para>
            When used with Mixed Zoom, this value is automatically doubled for each increment zoom level
            is lowered.
            </para></remarks></member>
        <member name="F:Google.Maps.TerrainOptions.AltitudePrecision">
            <summary>
            The vertical precision of terrain altitudes in meters. Possible values: between 0.01 (cm
            level precision) and 10000 (10-kilometer level precision).
            </summary></member>
        <member name="T:Google.Maps.Terrain.Painting.TerrainPaintingManager">
            <summary>
            Responsible for procedurally painting a <see cref="T:UnityEngine.Terrain" /> tile based on rules
            provided by the user.
            </summary></member>
        <member name="F:Google.Maps.Terrain.Painting.TerrainPaintingManager.TerrainEvents">
            <summary>
            %Events related to Terrain.
            </summary></member>
        <member name="F:Google.Maps.Terrain.Painting.TerrainPaintingManager.GameObjectManager">
            <summary>
            GameObject manager used to record state of loaded GameObjects.
            </summary></member>
        <member name="F:Google.Maps.Terrain.Painting.TerrainPaintingManager.FeatureMaskCamera">
            <summary>
            <see cref="T:UnityEngine.Camera" /> responsible for capturing features to then paint them onto terrain
            later.
            </summary></member>
        <member name="F:Google.Maps.Terrain.Painting.TerrainPaintingManager.FeatureMaskCameraObject">
            <summary>
            <see cref="T:UnityEngine.GameObject" /> to attach <see cref="F:Google.Maps.Terrain.Painting.TerrainPaintingManager.FeatureMaskCamera" /> to.
            </summary></member>
        <member name="M:Google.Maps.Terrain.Painting.TerrainPaintingManager.#ctor(Google.Maps.Event.TerrainEvents,Google.Maps.Unity.GameObjectManager)">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.Terrain.Painting.TerrainPaintingManager.Destroy">
            <summary>
            Clean up any resources created by this class.
            </summary></member>
        <member name="M:Google.Maps.Terrain.Painting.TerrainPaintingManager.PaintTerrain(UnityEngine.Terrain,Google.Maps.Terrain.TerrainTile,Google.Maps.Terrain.TerrainStyle,Google.Maps.Util.ValueWrapper{System.Action})">
            <summary>
            Coroutine to paint a <see cref="T:UnityEngine.Terrain" /> object.
            </summary>
            <param name="terrain">The <see cref="T:UnityEngine.Terrain" /> object to paint.</param>
            <param name="terrainTile">
            The TerrainTile for the tile being painted. Contains the TileCoord.
            </param>
            <param name="terrainStyle">The style to apply to the <see cref="T:UnityEngine.Terrain" />.</param>
            <param name="tileLoadFinalizer">
            Finalizer that will be called when tile is finished loading or is aborted.
            </param></member>
        <member name="M:Google.Maps.Terrain.Painting.TerrainPaintingManager.UnHideAllFeatures(Google.Maps.Coord.MercatorTileCoords,System.Collections.Generic.List{UnityEngine.GameObject})">
            <summary>
            Reveal any hidden objects on the tile indicated by the supplied coordinate, and all tiles
            on which it depends for terrain texture rendering (currently all neighbours)
            </summary>
            <remarks>
            It is possible for GameObjects on the tile or its dependencies to be disabled before
            reaching this point if the tile leaves the camera view (e.g. when panning very
            quickly), leaving the terrain in an incomplete state when painted.
            </remarks>
            <param name="coords">Coordinates of the tile.</param>
            <param name="revealed">
            List onto which to add GameObjects whose visibility has been changed.
            </param></member>
        <member name="M:Google.Maps.Terrain.Painting.TerrainPaintingManager.PaintTerrainRoutine(UnityEngine.Terrain,UnityEngine.RenderTexture,Google.Maps.Util.ValueWrapper{System.Action})">
            <summary>
            Coroutine to paint a <see cref="T:UnityEngine.Terrain" /> object.
            </summary>
            <param name="terrain">The <see cref="T:UnityEngine.Terrain" /> object to paint.</param>
            <param name="featureMaskTexture">The <see cref="T:Google.Maps.Feature.MapFeature" /> group mask used to draw
            <see cref="T:Google.Maps.Feature.MapFeature" />s onto the <see cref="T:UnityEngine.Terrain" />.</param>
            <param name="tileLoadFinalizer">
            Finalizer that will be called when tile is finished loading or is aborted.
            </param></member>
        <member name="M:Google.Maps.Terrain.Painting.TerrainPaintingManager.RenderFeatureMaskToTexture(UnityEngine.Vector3,System.Single,System.Int32,UnityEngine.RenderTexture)">
            <summary>
            Generates a <see cref="T:Google.Maps.Feature.MapFeature" /> group mask. This is then used to draw
            <see cref="T:Google.Maps.Feature.MapFeature" />s onto the <see cref="T:UnityEngine.Terrain" />.
            </summary>
            <param name="tilePosition">The worldspace position of the tile to capture.</param>
            <param name="tileSize">The size of the tile to capture.</param>
            <param name="renderLayer">The Unity rendering layer to use when capturing textures.</param>
            <param name="texture">The texture to be rendered into.</param></member>
        <member name="M:Google.Maps.Terrain.Painting.TerrainPaintingManager.MaybeInitializeFeatureMaskCamera">
            <summary>
            Initializes FeatureGroupCaptureCamera if it doesn't already exist.
            </summary></member>
        <member name="T:Google.Maps.Terrain.TerrainTile">
            <summary>
            Stores terrain information for a particular map tile.
            </summary></member>
        <member name="F:Google.Maps.Terrain.TerrainTile.MercatorTileCoords">
            <summary>
            The coordinates of the tile.
            </summary></member>
        <member name="F:Google.Maps.Terrain.TerrainTile.ElevationGrid">
            <summary>
            A 2D grid of uniformly spaced points containing elevation data. Each point within the grid
            represents the altitude in meters above average sea level at that location within the tile.
            </summary>
            <remarks>
            The grid is oriented south-west to north-east, as illustrated:
            rows[y, 0]        rows[y, x]
            +-----------------+
            |                 |
            |        N        |
            |        |        |
            |        |        |
            |   W ---+--- E   |
            |        |        |
            |        |        |
            |        S        |
            |                 |
            +-----------------+
            rows[0, 0]        rows[0, x]
            </remarks></member>
        <member name="F:Google.Maps.Terrain.TerrainTile.TerrainTileSize">
            <summary>
            The size in meters of the <see cref="F:Google.Maps.Terrain.TerrainTile.TerrainTileSize" />.
            </summary></member>
        <member name="F:Google.Maps.Terrain.TerrainTile.GlobalLocation">
            <summary>
            The location of this terrain tile in world space.
            </summary></member>
        <member name="F:Google.Maps.Terrain.TerrainTile.FloatingOrigin">
            <summary>
            Floating origin.
            </summary></member>
        <member name="M:Google.Maps.Terrain.TerrainTile.#ctor(Google.Maps.Coord.MercatorTileCoords,System.Single,System.Single[0:,0:],Google.Maps.Coord.Vector2D)">
            <summary>
            Constructor.
            </summary>
            <param name="mercatorTileCoords">Tile coordinate.</param>
            <param name="terrainTileSize">
            The size of this elevation grid in meters. This value must be greater than zero.
            </param>
            <param name="elevationGrid"><para>
            A 2D grid of uniformly spaced points containing elevation data. Each point within the grid
            represents the altitude in meters above average sea level at that location within the tile.
            The grid is oriented south-west to north-east.
            </para><para>
            The grid must be non-null, and each dimension must be larger than zero.
            </para></param>
            <param name="floatingOrigin">Floating origin.</param>
            <exception cref="T:System.ArgumentException">If any provided arguments are invalid.</exception></member>
        <member name="M:Google.Maps.Terrain.TerrainTile.TranslateAndUpdateFloatingOriginFromCoords(Google.Maps.Coord.Projection)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Terrain.TerrainTile.TranslateOrigin(UnityEngine.Vector2)">
            <summary>
            Translates the origin of the <see cref="T:Google.Maps.Terrain.TerrainTile" />s object.
            </summary>
            <param name="offset">The amount by which to translate the terrain.</param></member>
        <member name="T:Google.Maps.Terrain.TerrainStyle">
            <summary>
            Encapsulates immutable styling information used to control the appearance of generated
            Terrain.
            </summary></member>
        <member name="T:Google.Maps.Terrain.TerrainStyle.Builder">
            <summary>
            The %TerrainStyle builder.
            </summary></member>
        <member name="F:Google.Maps.Terrain.TerrainStyle.Builder.AlphaMapResolutionMetersPerPixel">
            <summary>
            The target resolution of the alpha map in meters per pixel, used to draw
            <see cref="T:UnityEngine.TerrainLayer" /> masks.
            </summary>
            <remarks><para>
            The actual resolution of the alpha maps may differ from the provided value. Unity
            <see cref="T:UnityEngine.Terrain" /> tiles must have square alpha maps with a power of two
            resolution. The Maps Unity SDK will round the provided value to the nearest power of two
            to meet this requirement.
            </para><para>
            When used with Mixed Zoom, this value is automatically doubled for each increment the zoom
            level is lowered.
            </para></remarks></member>
        <member name="F:Google.Maps.Terrain.TerrainStyle.Builder.BaseMapResolutionMetersPerPixel">
            <summary>
            The target resolution in meters per pixel of the composite texture used on the terrain
            when viewed from a distance greater than the Basemap distance.
            </summary>
            <remarks><para>
            The actual resolution of the base map may differ from the provided value. Unity
            <see cref="T:UnityEngine.Terrain" /> tiles must have square base maps with a power of two
            resolution. The Maps Unity SDK will round the provided value to the nearest power of two
            to meet this requirement.
            </para><para>
            When used with Mixed Zoom, this value is automatically doubled for each increment the zoom
            level is lowered.
            </para></remarks></member>
        <member name="F:Google.Maps.Terrain.TerrainStyle.Builder.BaseMapDistance">
            <summary>
            The maximum distance at which terrain textures will be displayed at full resolution.
            Beyond this distance, a lower resolution composite map will be used for efficiency.
            </summary></member>
        <member name="F:Google.Maps.Terrain.TerrainStyle.Builder.TerrainLayers">
            <summary>
            The <see cref="T:UnityEngine.TerrainLayer" />s applied to each <see cref="N:Google.Maps.Terrain" /> tile during
            styling.
            </summary></member>
        <member name="F:Google.Maps.Terrain.TerrainStyle.Builder.TerrainPaintingLayer">
            <summary>
            The rendering layer used to capture Feature Groups for Terrain Painting. Defaults to layer
            10.
            </summary>
            <remarks>
            To prevent feature group rendering from being visible in-game, please exclude this layer
            from the culling masks of any other cameras in the scene.
            </remarks></member>
        <member name="M:Google.Maps.Terrain.TerrainStyle.Builder.#ctor">
            <summary>
            The %Builder class default constructor.
            </summary></member>
        <member name="M:Google.Maps.Terrain.TerrainStyle.Builder.#ctor(Google.Maps.Terrain.TerrainStyle)">
            <summary>
            A %Builder copy constructor that shallow-copies style values into the builder. Use this
            copy constructor when you want to create a new style object based on an existing
            <see cref="T:Google.Maps.Terrain.TerrainStyle" />.
            </summary>
            <param name="style">A Style object.</param></member>
        <member name="M:Google.Maps.Terrain.TerrainStyle.Builder.Build">
            <summary>
            Builds a new <see cref="T:Google.Maps.Terrain.TerrainStyle" /> object from the values set on the builder.
            </summary></member>
        <member name="F:Google.Maps.Terrain.TerrainStyle.DefaultStyle">
            <summary>
            Default style.
            </summary></member>
        <member name="P:Google.Maps.Terrain.TerrainStyle.AlphaMapResolutionMetersPerPixel">
            <summary>
            The target resolution of the alpha map in meters per pixel, used to draw
            <see cref="T:UnityEngine.TerrainLayer" /> masks.
            </summary>
            <remarks><para>
            The actual resolution of the alpha maps may differ from the provided value. Unity
            <see cref="T:UnityEngine.Terrain" /> tiles must have square alpha maps with a power of two
            resolution. The Maps Unity SDK will round the provided value to the nearest power of two
            to meet this requirement.
            </para><para>
            When used with Mixed Zoom, this value is automatically doubled for each increment the zoom
            level is lowered.
            </para></remarks></member>
        <member name="P:Google.Maps.Terrain.TerrainStyle.BaseMapResolutionMetersPerPixel">
            <summary>
            The target resolution in meters per pixel of the composite texture used on the terrain when
            viewed from a distance greater than the Basemap distance.
            </summary>
            <remarks><para>
            The actual resolution of the base map may differ from the provided value. Unity
            <see cref="T:UnityEngine.Terrain" /> tiles must have square base maps with a power of two
            resolution. The Maps Unity SDK will round the provided value to the nearest power of two
            to meet this requirement.
            </para><para>
            When used with Mixed Zoom, this value is automatically doubled for each increment the zoom
            level is lowered.
            </para></remarks></member>
        <member name="P:Google.Maps.Terrain.TerrainStyle.BaseMapDistance">
            <summary>
            The maximum distance at which terrain textures will be displayed at full resolution. Beyond
            this distance, a lower resolution composite map will be used for efficiency.
            </summary></member>
        <member name="P:Google.Maps.Terrain.TerrainStyle.TerrainLayers">
            <summary>
            The <see cref="T:UnityEngine.TerrainLayer" />s applied to each Terrain tile during styling.
            </summary></member>
        <member name="P:Google.Maps.Terrain.TerrainStyle.TerrainPaintingLayer">
            <summary>
            The rendering layer used to capture Feature Groups for Terrain Painting. Defaults to layer
            10.
            </summary>
            <remarks>
            To prevent feature group rendering from being visible in-game, please exclude this layer
            from the culling masks of any other cameras in the scene.
            </remarks></member>
        <member name="M:Google.Maps.Terrain.TerrainStyle.AsBuilder">
            <summary>
            Returns a new <see cref="T:Google.Maps.Terrain.TerrainStyle.Builder" /> based on this style object.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.CacheBlock`1">
            <summary>
            Square block of cached tiles, <see cref="F:Google.Maps.TileLoading.TileCache`1.BlockSize" /> on a side.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.CacheBlock`1.Entry">
            <summary>Cache entry for a single tile.</summary>
            <remarks>
            Access to the serialized fields of Entry (<see cref="F:Google.Maps.TileLoading.CacheBlock{`0}.Entry.Expiry" />, <see cref="F:Google.Maps.TileLoading.CacheBlock{`0}.Entry.Obfuscated" />)
            must lock on the <see cref="T:Google.Maps.TileLoading.CacheBlock`1" /> that the Entry belongs to.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Entry.Expiry">
            <summary>When this cache entry expires.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Entry.Obfuscated">
            <summary>Obfuscated data for this tile, if loaded.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Entry._Serialized">
            <summary>
            Backing field for <see cref="P:Google.Maps.TileLoading.CacheBlock{`0}.Entry.Serialized" />.
            </summary></member>
        <member name="P:Google.Maps.TileLoading.CacheBlock`1.Entry.Serialized">
            <summary>
            Serialized data for this tile, if loaded.
            </summary>
            <remarks>
            This field is not persisted to disk, but created on demand by deobfuscating
            <see cref="F:Google.Maps.TileLoading.CacheBlock{`0}.Entry.Obfuscated" />.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Entry.VersionId">
            <summary>
            Tile hash provided by Factile. Used to update <see cref="F:Google.Maps.TileLoading.CacheBlock{`0}.Entry.Expiry" /> without downloading the
            whole tile if the contents haven't changed.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Entry.Content">
            <summary>MapTile for this tile, if it has been parsed.</summary>
            <remarks>MapTiles are cached in-memory but not persisted to disk.</remarks></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.Entry.Obfuscate(System.Byte[])">
            <summary>
            XOR-obfuscates or deobfuscates serialized SVT.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.CacheBlock`1.Transaction">
            <summary>
            Temporary representation of the state of a <see cref="T:Google.Maps.TileLoading.CacheBlock{`0}.Entry" />, that can be
            atomically written back to the entry and to the persistent cache.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Transaction.Block">
            <summary>Cache block.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Transaction.Entry">
            <summary>Cache block entry.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Transaction.NeedsSave">
            <summary>
            Whether this has changed such that it needs to be rewritten to the persistent cache.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Transaction._Expiry">
            <summary>Backing field for <see cref="P:Google.Maps.TileLoading.CacheBlock{`0}.Transaction.Expiry" />.</summary></member>
        <member name="P:Google.Maps.TileLoading.CacheBlock`1.Transaction.Expiry">
            <summary>Expiry time.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Transaction._Serialized">
            <summary>Backing field for <see cref="P:Google.Maps.TileLoading.CacheBlock{`0}.Transaction.Serialized" />.</summary></member>
        <member name="P:Google.Maps.TileLoading.CacheBlock`1.Transaction.Serialized">
            <summary>Serialized data.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Transaction._VersionId">
            <summary>Backing field for <see cref="P:Google.Maps.TileLoading.CacheBlock{`0}.Transaction.VersionId" />.</summary></member>
        <member name="P:Google.Maps.TileLoading.CacheBlock`1.Transaction.VersionId">
            <summary>Tile version ID.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Transaction.Content">
            <summary>Parsed map tile.</summary></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.Transaction.#ctor(Google.Maps.TileLoading.CacheBlock{`0},Google.Maps.TileLoading.CacheBlock{`0}.Entry)">
            <summary>
            Constructor.
            </summary>
            <param name="block">Cache block.</param>
            <param name="entry">Cache block entry.</param></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.Transaction.Clear">
            <summary>Clears all data in the cache entry.</summary></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.Transaction.Commit(Google.Maps.TileLoading.IPersistentCache{`0})">
            <summary>
            Writes changes back to the cache block entry. If changes have been made to the persistable
            state, also write it to the persistent cache.
            </summary>
            <param name="persistentCache">Persistent cache. Can be null.</param></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.BlockParams">
            <summary>Parameters of this cache block.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Entries">
            <summary>Square array of cache entries.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.Formatter">
            <summary>Formatter used to serialize cache blocks.</summary></member>
        <member name="P:Google.Maps.TileLoading.CacheBlock`1.Size">
            <summary>The width and height of the cache block, in tiles.</summary></member>
        <member name="T:Google.Maps.TileLoading.CacheBlock`1.CompatibilityBinder">
            <summary>
            Serialization binder to map old type names to new ones.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlock`1.CompatibilityBinder.TypeNameMappings">
            <summary>
            Mappings from old type names to new ones.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.CompatibilityBinder.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.CompatibilityBinder.BindToType(System.String,System.String)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.MakeBinaryFormatter">
            <summary>
            Returns a <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> instance for serializing
            <see cref="T:Google.Maps.TileLoading.CacheBlock`1" /> instances.
            </summary>
            <returns>New <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> instance.</returns></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.#ctor(Google.Maps.TileLoading.CacheBlockParameters)">
            <summary>Constructor.</summary></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.NewTransaction(System.Int32,System.Int32)">
            <summary>Creates a new transaction for an entry in this cache block.</summary>
            <param name="xOffset">X offset of the cache block entry.</param>
            <param name="yOffset">Y offset of the cache block entry.</param></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.UpdateFloatingOrigin(Google.Maps.Coord.Projection)">
            <summary>Updates the floating origin of each cached tile.</summary>
            <param name="projection">Coordinate system containing the new floating origin.</param></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.Serialize(System.IO.Stream)">
            <summary>Writes a binary serialized CacheBlock to a stream.</summary></member>
        <member name="M:Google.Maps.TileLoading.CacheBlock`1.Deserialize(System.IO.Stream)">
            <summary>
            Reads a binary serialized <see cref="T:Google.Maps.TileLoading.CacheBlock`1" /> from a stream.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.CacheBlockParameters">
            <summary>Parameters for loading a cache block from disk.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlockParameters.TopLeft">
            <summary>Parameters of the top-left tile in the block.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlockParameters.Width">
            <summary>Width of the block, in tiles.</summary></member>
        <member name="F:Google.Maps.TileLoading.CacheBlockParameters.Height">
            <summary>Height of the block, in tiles.</summary></member>
        <member name="M:Google.Maps.TileLoading.CacheBlockParameters.#ctor(Google.Maps.TileLoading.TileParameters,System.Int32,System.Int32)">
            <summary>Constructor.</summary>
            <param name="tileParameters">Parameters of a tile in the block.</param>
            <param name="width">Block width.</param>
            <param name="height">Block height.</param></member>
        <member name="T:Google.Maps.TileLoading.DiskCache`1">
            <summary>
            Persistent cache that writes each <see cref="T:Google.Maps.TileLoading.CacheBlock`1" /> to a file.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.DiskCache`1.BasePath">
            <summary>Path of the directory containing cache block files.</summary></member>
        <member name="F:Google.Maps.TileLoading.DiskCache`1.MaxBytes">
            <summary>Maximum total size of the cache on disk, in bytes.</summary></member>
        <member name="F:Google.Maps.TileLoading.DiskCache`1.UrlBuilder">
            <summary>
            URL Builder used to build cache filenames.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.DiskCache`1.MaxAge">
            <summary>
            Horizon beyond which cache files will be deleted even when we don't need to free up space.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.DiskCache`1.CleanupFrequency">
            <summary>Time between calls to <see cref="M:Google.Maps.TileLoading.DiskCache{`0}.Cleanup" />.</summary></member>
        <member name="F:Google.Maps.TileLoading.DiskCache`1.WorkQueue">
            <summary>Work queue for doing caching work in a separate thread.</summary>
            <remarks>
            Multiple instances of <see cref="T:Google.Maps.MapsService" /> share a single static work queue to avoid
            simultaneous access to cache files. This doesn't avoid all strangeness (see b/67062539) but
            it at least keeps the disk cache valid.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.DiskCache`1.PendingLoadResults">
            <summary>
            Pending results of <see cref="M:Google.Maps.TileLoading.DiskCache{`0}.Load(Google.Maps.TileLoading.CacheBlockParameters,Google.Maps.TileLoading.WorkQueue.Result{Google.Maps.TileLoading.CacheBlock{`0}})" />, indexed by full file path. This is for deduping
            requests - the first request for a block triggers the work of loading from disk, and
            subsequent requests before the first request returns just add themselves to the list to be
            updated when it has loaded.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.DiskCache`1.#ctor(System.String,System.Int64,Google.Maps.TileLoading.IUrlBuilder)">
            <summary>Constructor.</summary>
            <param name="basePath">Path of the directory containing cache block files.</param>
            <param name="maxBytes">Maximum total size of cached files.</param>
            <param name="urlBuilder">URL builder used to build filenames.</param></member>
        <member name="M:Google.Maps.TileLoading.DiskCache`1.Load(Google.Maps.TileLoading.CacheBlockParameters,Google.Maps.TileLoading.WorkQueue.Result{Google.Maps.TileLoading.CacheBlock{`0}})">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.DiskCache`1.SetAllResults(System.String,Google.Maps.TileLoading.CacheBlock{`0})">
            <summary>
            Sets the value of all the results for the given filePath in <see cref="F:Google.Maps.TileLoading.DiskCache{`0}.PendingLoadResults" />
            to the given <see cref="T:Google.Maps.TileLoading.CacheBlock`1" />.
            </summary>
            <param name="filePath">File path.</param>
            <param name="block">Cache block.</param></member>
        <member name="M:Google.Maps.TileLoading.DiskCache`1.Save(Google.Maps.TileLoading.CacheBlock{`0})">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.DiskCache`1.CallCleanup">
            <summary>
            Coroutine to call <see cref="M:Google.Maps.TileLoading.DiskCache{`0}.Cleanup" /> every <see cref="F:Google.Maps.TileLoading.DiskCache{`0}.CleanupFrequency" /> seconds.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.DiskCache`1.Cleanup">
            <summary>
            Goes through the cache directory and deletes files older than <see cref="F:Google.Maps.TileLoading.DiskCache{`0}.MaxAge" />, or
            over <see cref="F:Google.Maps.TileLoading.DiskCache{`0}.MaxBytes" /> in total size.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.FeatureTileUrlBuilder">
            <summary>
            URL builder for feature tiles.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileUrlBuilder.BuildRequestUrl(Google.Maps.TileLoading.TileParameters,System.String,System.String,System.String)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileUrlBuilder.BuildCacheBlockKey(Google.Maps.TileLoading.CacheBlockParameters)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.TileLoading.ICountryProvider">
            <summary>Interface for classes that provide the user's country.</summary>
            <remarks>
            Tests that can't depend directly on Unity should provide a fake implementation of this
            interface instead of subclassing <see cref="T:Google.Maps.CountryProvider" />.
            </remarks></member>
        <member name="M:Google.Maps.TileLoading.ICountryProvider.GetCountry">
            <summary>
            Gets the country code (in ISO 3166-1 alpha-2 format) for the user's country.
            </summary>
            <remarks>
            <strong>Caution:</strong> When this method returns null, or an empty string, or
            <see cref="F:Google.Maps.CountryProvider.DefaultCountryCode" />, then the SDK makes no assumptions about
            the user's location. This can lead to poorly localized or missing names.
            </remarks></member>
        <member name="T:Google.Maps.TileLoading.IPersistentCache`1">
            <summary>
            Tile cache backed by persistent storage.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.IPersistentCache`1.Save(Google.Maps.TileLoading.CacheBlock{`0})">
            <summary>Asynchronously saves a cache block to persistent storage.</summary></member>
        <member name="M:Google.Maps.TileLoading.IPersistentCache`1.Load(Google.Maps.TileLoading.CacheBlockParameters,Google.Maps.TileLoading.WorkQueue.Result{Google.Maps.TileLoading.CacheBlock{`0}})">
            <summary>
            Asynchronously loads a cache block from persistent storage. When finished, sets result.Value
            to the loaded cache block, or null if not found.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.IPersistentCache`1.CallCleanup">
            <summary>
            Coroutine to regularly clean up cache entries that are too old or over the size limit.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.ITileDecoder`1">
            <summary>
            Interface for decoders that deserialize tile content.
            </summary>
            <typeparam name="T">Tile content type to decode into.</typeparam></member>
        <member name="M:Google.Maps.TileLoading.ITileDecoder`1.DecodeIntoTransaction(Google.Maps.TileLoading.TileParameters,Google.Maps.TileLoading.CacheBlock{`0}.Transaction,System.Byte[])">
            <summary>
            Decodes the contents of a tile.
            </summary>
            <remarks>
            Decode the first non-null valid content in the following order:
            <ol>
            <li><paramref name="data" /></li>
            <li><paramref name="transaction" />.Content</li>
            <li><paramref name="transaction" />.Serialized</li>
            </ol>
            At least one of these should be set; if it isn't, DecodeIntoTransaction will throw an
            exception.
            </remarks>
            <param name="tileParams">Tile parameters.</param>
            <param name="transaction">
            Cache transaction, possibly containing cached Content and Serialized. Will be updated with
            newly decoded content to be written back to the cache.
            </param>
            <param name="data">
            Serialized data from the server, or null if the server request hasn't been sent yet
            (because we're checking whether this tile is in the cache).
            </param>
            <exception cref="T:Google.Maps.Exception.TileParsingException">
            Thrown when the tile has an invalid format.
            </exception></member>
        <member name="T:Google.Maps.TileLoading.ITileLoader">
            <summary>Interface for classes that can load a list of tiles.</summary></member>
        <member name="M:Google.Maps.TileLoading.ITileLoader.LoadTiles(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords},Google.Maps.GameObjectOptions,System.Boolean)">
            <summary>Load tiles with the given coordinates.</summary>
            <param name="coords">List of tile coordinates to load.</param>
            <param name="options">Game object options to load with.</param>
            <param name="processDependencies">
            Whether loading and unloading should take into account dependencies of requested tiles. If
            true, immediate neighbours of all requested tiles will also be loaded.
            </param></member>
        <member name="M:Google.Maps.TileLoading.ITileLoader.UnloadTilesOutside(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords},System.Int32,System.Boolean)">
            <summary>Unload tiles not contained in the given coordinates.</summary>
            <param name="coords">List of tile coordinates to keep.</param>
            <param name="zoom">Only tiles at this zoom level will be unloaded.</param>
            <param name="processDependencies">
            If true, the region described by the coords parameter will be expanded by one tile in all
            directions. This is useful, e.g., to prevent tile dependencies from being unloaded before
            the tiles on which they depend are loaded.
            </param></member>
        <member name="M:Google.Maps.TileLoading.ITileLoader.ActivateTileCovering(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords})">
            <summary>
            Choose a set of loaded GameObjects that best cover the the area and zoom level of the given
            list of tile coordinates, and activate them. Deactivate all other loaded GameObjects.
            </summary>
            <param name="coords">
            Collection of tile coordinates, specifying the ideal set of tiles to render to represent the
            current viewport. Coords must be non-overlapping.
            </param></member>
        <member name="M:Google.Maps.TileLoading.ITileLoader.GetLoadedAndPartiallyLoadedTiles">
            <summary>
            Returns the coordinates of all loaded and partially loaded tiles.
            </summary>
            <remarks>
            This includes loaded tiles which are in the process of being unloaded, but have not yet
            been fully unloaded.
            </remarks>
            <returns>The coordinates of all loaded and partially loaded tiles.</returns></member>
        <member name="T:Google.Maps.TileLoading.ITileProducer">
            <summary>
            Tile Producer interface.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.ITileProducer.ProduceTile(Google.Maps.TileLoading.TileParameters,System.String,Google.Maps.TileLoading.LoadTileResult)">
            <summary>
            Requests a tile with the specified parameters. On completion, updates the given
            <see cref="T:Google.Maps.TileLoading.LoadTileResult" /> with the tile contents.
            </summary>
            <remarks>
            This is intended to be run as a coroutine so that tiles load asynchronously - see
            https://docs.unity3d.com/Manual/Coroutines.html. Implementations should first yield an
            action that loads the tile asynchronously, then process the results and update tileState
            when resumed.
            </remarks>
            <param name="tileParams">Tile parameters.</param>
            <param name="versionId">
            Version ID of the cached tile, if available and supported for this tile type. If this is
            set, the parsed data may have status <see cref="F:Google.Maps.VectorTile.V1.FeatureTile.Types.Status.OkDataUnchanged" />
            and no other tile data, meaning that we can keep using the cached data.
            </param>
            <param name="result">Result of the coroutine.</param></member>
        <member name="T:Google.Maps.TileLoading.IUrlBuilder">
            <summary>
            Builds URLs for fetching a particular type of tile data from the Semantic Tile API, as well as
            cache keys for caching that data to disk.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.IUrlBuilder.BuildRequestUrl(Google.Maps.TileLoading.TileParameters,System.String,System.String,System.String)">
            <summary>
            Builds a URL to fetch a tile.
            </summary>
            <param name="tileParams">Tile parameters.</param>
            <param name="versionId">Version ID of the cached tile, if available.</param>
            <param name="urlFormat">Tile request url format.</param>
            <param name="escapedApiKey">Escaped API key.</param></member>
        <member name="M:Google.Maps.TileLoading.IUrlBuilder.BuildCacheBlockKey(Google.Maps.TileLoading.CacheBlockParameters)">
            <summary>
            Builds a cache key for the given block.
            </summary>
            <remarks>
            The cache key should depend on all tile parameters that were used to fetch the data via
            <see cref="M:Google.Maps.TileLoading.IUrlBuilder.BuildRequestUrl(Google.Maps.TileLoading.TileParameters,System.String,System.String,System.String)" />, such that changing a parameter that could affect the data
            will give a different cache key.
            The cache key should also be usable as a filename.
            </remarks>
            <param name="blockParams">Cache block parameters.</param></member>
        <member name="T:Google.Maps.TileLoading.LoadTileResult">
            <summary>
            Result of loading a tile via an <see cref="T:Google.Maps.TileLoading.ITileProducer" /> coroutine.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.LoadTileResult.Tile">
            <summary>Return value.</summary></member>
        <member name="F:Google.Maps.TileLoading.LoadTileResult.Tile.TileProto">
            <summary>Deobfuscated response containing a tile proto.</summary></member>
        <member name="F:Google.Maps.TileLoading.LoadTileResult.Tile.Ttl">
            <summary>Cache TTL of the tile.</summary></member>
        <member name="M:Google.Maps.TileLoading.LoadTileResult.#ctor">
            <summary>Constructor.</summary></member>
        <member name="M:Google.Maps.TileLoading.LoadTileResult.#ctor(Google.Maps.Util.ICancellable)">
            <summary>Constructor with parent.</summary></member>
        <member name="M:Google.Maps.TileLoading.LoadTileResult.Return(System.Byte[],System.Nullable{System.TimeSpan})">
            <summary>Successfully return a loaded tile.</summary></member>
        <member name="M:Google.Maps.TileLoading.LoadTileResult.Error">
            <summary>
            Finish with an error. The error details have already been reported through the
            <see cref="F:Google.Maps.Event.MapEvents.LoadError" /> event, so return nothing here.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.LoadTileResult.IsError">
            <summary>Returns whether the result of the coroutine was an error.</summary></member>
        <member name="T:Google.Maps.TileLoading.MixedZoom.QuadTree">
            <summary>
            Quad-tree of Mercator tile coordinates.
            </summary>
            <remarks>
            This implements the algorithm described in go/musk-hot-swapping. There are two overlapping
            sets of tiles: Loaded (which we've loaded and turned into GameObjects) and Ideal (which we'd
            like to render given the current viewport). The goal is to find the set of Loaded tiles that
            best cover the area represented by the Ideal tiles.
            </remarks></member>
        <member name="T:Google.Maps.TileLoading.MixedZoom.QuadTree.Node">
            <summary>One node in the quad-tree.</summary></member>
        <member name="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.Coords">
            <summary>
            Tile coordinates for this node.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.Children">
            <summary>
            Child nodes. The <see cref="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.Coords" /> of each non-null child is a child of this node's
            <see cref="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.Coords" />.
            </summary>
            <remarks>
            The child nodes are indexed in LRTB order; i.e. the children of a tile with coords
            (x, y, zoom) are {(2x, 2y, zoom+1), (2x+1, 2y, zoom+1), (2x, 2y+1, zoom+1), (2x+1, 2y+1,
            zoom+1)} in that order.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.Parent">
            <summary>
            Parent node. If null, this is the root node.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.Loadedness">
            <summary>
            Number representing whether this tile is loaded. 0 means not loaded; 1 means loaded; any
            number in between means partially loaded (note that the number doesn't reflect how much of
            the tile is loaded).
            </summary></member>
        <member name="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.IsIdeal">
            <summary>Whether this tile is in the Ideal set.</summary>
            <remarks>
            This class assumes that there is at most one Ideal tile in any path from the root to a
            leaf node.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.IdealArea">
            <summary>Proportion of this tile covered by the Ideal set, from 0 to 1.</summary>
            <remarks>
            If this tile is ideal or it has an ideal ancestor, then IdealArea is 1.
            If this tile has ideal descendants, then IdealArea is (sum of Children.IdealArea) / 4.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.Weight">
            <summary>
            Weight of this node, defined as MinCoverage ^ abs(Coord.Zoom - Ideal tile zoom).
            </summary></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.#ctor(Google.Maps.Coord.MercatorTileCoords)">
            <summary>Constructor.</summary>
            <param name="coords">Coordinates of this node.</param></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.AddDescendant(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Adds the given <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> as a descendant of this node, adding as
            many intermediate nodes as necessary.
            </summary>
            <remarks>
            This method is idempotent; adding a node that already exists does nothing, and returns the
            original node.
            A <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> can be added as a descendant of itself (and will
            return this node).
            </remarks>
            <param name="desc">Descendant tile coord.</param>
            <returns>Node representing the descendant.</returns>
            <exception cref="T:System.InvalidOperationException">
            If <paramref name="desc" /> is not a descendant of <see cref="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.Coords" />.
            </exception></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.AddParent">
            <summary>Returns the parent of this node, creating it if necessary.</summary></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.ClearLoadedAndIdeal">
            <summary>
            Sets <see cref="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.IsIdeal" /> to false and <see cref="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.Loadedness" /> to 0 for this node and
            its descendants.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.CalculateWeightAndIdealArea(System.Boolean)">
            <summary>
            Sets the values of <see cref="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.Weight" /> and <see cref="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.IdealArea" /> for this node and its
            descendants.
            </summary>
            <param name="isDescendantOfIdeal">
            Whether this is a descendant of the ideal tile in this branch of the tree.
            </param></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.Node.FindBestRenderSet(System.Collections.Generic.List{Google.Maps.Coord.MercatorTileCoords},System.Int32@,System.Double@)">
            <summary>Calculates the best render set for a subtree, and returns its score.</summary>
            <param name="tiles">
            List of tile coordinates representing the best render set from the portion of the tree
            that has been traversed so far. On exit, the last <paramref name="numTiles" /> entries
            cover the subtree corresponding to this node; if a node higher up the tree chooses a
            better-scoring set, it should replace the last <paramref name="numTiles" /> entries.
            </param>
            <param name="numTiles">
            Output - the number of tile coords at the end of <paramref name="tiles" /> representing
            this subtree.
            </param>
            <param name="score">
            Output - score for the last <paramref name="numTiles" /> elements of
            <paramref name="tiles" /> as the Render set for this subtree.
            </param></member>
        <member name="F:Google.Maps.TileLoading.MixedZoom.QuadTree.MinCoverage">
            <summary>
            The minimum coverage of loaded tiles that will be preferred for the render set over full
            coverage one zoom level further away from the ideal.
            </summary>
            <remarks>
            Numbers close to 1 give fewer gaps in the render set.
            Called "fudge factor Î±" in go/musk-hot-swapping.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.MixedZoom.QuadTree.PartiallyLoadedScore">
            <summary>Score multiplier for partially loaded tiles.</summary>
            <remarks>
            As long as this is a very small positive number, partially loaded tiles will be rendered if
            and only if there's nothing else to show there.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.MixedZoom.QuadTree.Root">
            <summary>Root node.</summary>
            <remarks>
            This is the common ancestor of all nodes in the tree. If a node is added that is not a
            descendant of the root, its common ancestor with the root becomes the new root, and all the
            intermediate nodes are added to keep it connected.
            </remarks></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.Add(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Returns a node in the tree corresponding to the given <see cref="T:Google.Maps.Coord.MercatorTileCoords" />,
            creating it and expanding the tree to contain it if necessary.
            </summary>
            <param name="coords">Tile coord to add.</param>
            <returns>Tree node corresponding to the tile coord.</returns></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.AddLoaded(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Adds the given <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to the Loaded set, and adds it to the tree
            if necessary.
            </summary>
            <param name="coords">Loaded tile coord.</param></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.AddPartiallyLoaded(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Adds the given <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to the Loaded set with reduced weight, so
            that it will only be part of the Render set if there's no other option. Adds it to the tree
            if necessary.
            </summary>
            <param name="coords">Loaded tile coord.</param></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.AddIdeal(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Adds the given <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to the Ideal set, and adds it to the tree if
            necessary.
            </summary>
            <param name="coords">Loaded tile coord.</param></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.ClearLoadedAndIdeal">
            <summary>
            Removes all nodes in the tree from the Loaded and Ideal sets, but leaves the structure of
            the tree intact.
            </summary>
            <remarks>
            This lets us reuse the QuadTree each frame without having to allocate and then GC nodes
            every time. Note that
            </remarks></member>
        <member name="M:Google.Maps.TileLoading.MixedZoom.QuadTree.GetRenderSet">
            <summary>Calculates the Render set of tiles.</summary>
            <remarks>
            This is the set of tiles that is in the Loaded set and gives the best (by some metric)
            coverage of the Ideal set.
            </remarks>
            <returns>List of <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s in the Render set.</returns></member>
        <member name="T:Google.Maps.TileLoading.NetworkParameters">
            <summary>
            Static class containing helper functions common info for generating tile and session network
            information.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.NetworkParameters._PlatformRequestHeaders">
            <summary>
            Backing field for <see cref="P:Google.Maps.TileLoading.NetworkParameters.PlatformRequestHeaders" />.
            </summary></member>
        <member name="P:Google.Maps.TileLoading.NetworkParameters.PlatformRequestHeaders">
            <summary>
            Headers to add to each request.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.NetworkParameters._AndroidCertificateFingerprint">
            <summary>
            On Android, the hex-encoded SHA1 of the package's first signing certificate. Unused on other
            platforms.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.NetworkParameters._Platform">
            <summary>
            Platform Unity is running on, or null if Unity isn't available (e.g. in unit tests).
            </summary></member>
        <member name="M:Google.Maps.TileLoading.NetworkParameters.Init">
            <summary>Constructor.</summary></member>
        <member name="M:Google.Maps.TileLoading.NetworkParameters.InitRequestHeaders">
            <summary>
            Adds HTTP request headers to identify the package for API key restrictions.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.NetworkParameters.MaybeSetHeader(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>Sets an HTTP request header if the given value is not null or empty.</summary></member>
        <member name="M:Google.Maps.TileLoading.NetworkParameters.GetAndroidCertificateFingerprint">
            <summary>
            Initializes <see cref="F:Google.Maps.TileLoading.NetworkParameters._AndroidCertificateFingerprint" /> if running on Android. On other
            platforms, does nothing.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.NetworkParameters.GetByteArray(UnityEngine.AndroidJavaObject)">
            <summary>
            Converts a <see cref="T:UnityEngine.AndroidJavaObject" /> to a byte array.
            </summary>
            <param name="androidJavaObject">The object to convert.</param></member>
        <member name="T:Google.Maps.TileLoading.NetworkSlotPool">
            <summary>
            Pool of slots for network connections. Used to limit the number of concurrent network
            connections.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.NetworkSlotPool.TotalSlots">
            <summary>
            Total number of slots.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.NetworkSlotPool.FreeSlots">
            <summary>
            Free slots.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.NetworkSlotPool.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="size">Starting size of network pool.</param></member>
        <member name="M:Google.Maps.TileLoading.NetworkSlotPool.TryAcquireSlot">
            <summary>
            Try to acquire a slot from the pool. Returns immediately if no slot is available.
            </summary>
            <returns>True if a slot was successfully acquired, false otherwise.</returns></member>
        <member name="M:Google.Maps.TileLoading.NetworkSlotPool.ReleaseSlot">
            <summary>
            Release a slot back into the pool.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.NetworkSlotPool.ReleaseAllSlots">
            <summary>
            Release all slots back into the pool.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.ProtoTileProducer">
            <summary>
            Requests tiles asynchronously over HTTPS via coroutines.
            </summary>
            <remarks>
            Makes use of the Semantic Tile API's proto-over-HTTP end-point instead of gRPC.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.UnsupportedClientVersionMessage">
            <summary>
            Error string sent by Semantic Tile API if the client is blacklisted.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.VectorTileApiUrlFormat">
            <summary>
            Address to use to connect to the Semantic Tile API.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.EscapedApiKey">
            <summary>
            URI-escaped API key with Semantic Tile API enabled.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.UrlBuilder">
            <summary>Used to construct URLs to fetch tiles.</summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.MapEvents">
            <summary>
            Map events.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.RequestLogger">
            <summary>
            Logger for tile request stats.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.NetworkSlotPool">
            <summary>
            Pool of slots for network connections.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.TimeoutSeconds">
            <summary>Network timeout, in seconds.</summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.RequestFactory">
            <summary>
            Network request factory. Typically <see cref="T:Google.Maps.Util.WwwRequestFactory" /> in real code and
            <see cref="T:Google.Maps.Util.FakeRequestFactory" /> in tests.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.Clock">
            <summary>Clock used for backoff.</summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.Random">
            <summary>Random number source for backoff jitter.</summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.RequestHeaders">
            <summary>
            Request headers, populated the first time <see cref="M:Google.Maps.TileLoading.ProtoTileProducer.GetRequestHeaders" /> is called.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.ProtoTileProducer.KillSwitchEnabled">
            <summary>
            Set to true when kill switch response is received. Prevents further network requests from
            being initiated.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.ProtoTileProducer.#ctor(Google.Maps.Util.ICoroutineStarter,System.String,System.String,Google.Maps.TileLoading.NetworkSlotPool,System.Int32,Google.Maps.TileLoading.IUrlBuilder,Google.Maps.Event.MapEvents,Google.Maps.Logging.ITileRequestLogger,Google.Maps.Util.IRequestFactory,Google.Maps.Util.IClock)">
            <summary>
            Constructor.
            </summary>
            <param name="coroutineStarter">Coroutine runner.</param>
            <param name="vectorTileApiUrlFormat">Host name of the Semantic Tile API.</param>
            <param name="apiKey">API key with the Semantic Tile API enabled.</param>
            <param name="networkSlotPool">Pool of slots for network connections.</param>
            <param name="networkTimeoutSeconds">Request timeout, in seconds.</param>
            <param name="urlBuilder">URL builder.</param>
            <param name="mapEvents">Map events.</param>
            <param name="requestLogger">Logger for network request stats.</param>
            <param name="requestFactory">Factory for network requests.</param>
            <param name="clock">Clock used for backoff.</param></member>
        <member name="M:Google.Maps.TileLoading.ProtoTileProducer.ProduceTile(Google.Maps.TileLoading.TileParameters,System.String,Google.Maps.TileLoading.LoadTileResult)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.ProtoTileProducer.PerformHttpTileRequest(System.String,Google.Maps.Coord.MercatorTileCoords,Google.Maps.TileLoading.LoadTileResult)">
            <summary>
            Performs a HTTP request using the specified URL, storing the result.
            </summary>
            <param name="url">The url for the HTTP request.</param>
            <param name="coords">The tile coordinates being loaded.</param>
            <param name="result">Stores the result of the HTTP request.</param></member>
        <member name="M:Google.Maps.TileLoading.ProtoTileProducer.GetRequestHeaders">
            <summary>
            Returns the headers that should be used for HTTP tile requests.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.ProtoTileProducer.GetTtl(Google.Maps.Util.RequestBase)">
            <summary>Parses cache TTL from the HTTP response headers.</summary>
            <param name="request">Request containing the response from Factile.</param></member>
        <member name="M:Google.Maps.TileLoading.ProtoTileProducer.OnCoroutineShutdown(Google.Maps.Util.ICoroutineStarter)">
            <summary>
            Cleans up anything that could be left in an intermediate state when
            <see cref="M:Google.Maps.TileLoading.ProtoTileProducer.ProduceTile(Google.Maps.TileLoading.TileParameters,System.String,Google.Maps.TileLoading.LoadTileResult)" /> coroutines are cancelled.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.ProtoTileProducer.OnCoroutineStartup(Google.Maps.Util.ICoroutineStarter)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.TileLoading.FeatureTileDecoder">
            <summary>
            Decoder for SVT feature data.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.FeatureTileDecoder.PixelResolution">
            <summary>SVT's fixed pixel resolution, 1/16th of a Paint device pixel.</summary></member>
        <member name="F:Google.Maps.TileLoading.FeatureTileDecoder.TileSize">
            <summary>The number of SVT units that make up one Tile width or height.</summary></member>
        <member name="F:Google.Maps.TileLoading.FeatureTileDecoder.DefaultMinZ">
            <summary>
            The bottom altitude to set when no height data is available for an
            extruded structure.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.FeatureTileDecoder.DefaultMaxZ">
            <summary>
            The top altitude to set when no height data is available for an
            extruded structure.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.FeatureTileDecoder.FlatThreshold">
            <summary>
            Threshold under which a height is considered effectively zero.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.FeatureTileDecoder.Projection">
            <summary>
            Coordinate system used to covert to worldspace coordinates.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.FeatureTileDecoder.EnableRoadLattice">
            <summary>
            Indicates if RoadLattices will be populated for loaded tiles.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.FeatureTileDecoder.EnableExtraIntersections">
            <summary>
            If true, extra searching is performed for intersections optimized out of the source data.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.#ctor(Google.Maps.Coord.Projection,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Constructor.</summary></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeIntoTransaction(Google.Maps.TileLoading.TileParameters,Google.Maps.TileLoading.CacheBlock{Google.Maps.Feature.MapTile}.Transaction,System.Byte[])">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.ParseFeatureTile(System.Byte[])">
            <summary>
            Parses SVT into a FeatureTile.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.FeatureTileToMapTile(Google.Maps.Coord.MercatorTileCoords,Google.Maps.VectorTile.V1.FeatureTile)">
            <summary>
            Converts a decoded FeatureTile proto to a MapTile.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeSvtIntoMapTile(Google.Maps.Feature.MapTile,Google.Maps.VectorTile.V1.FeatureTile,Google.Maps.Coord.Projection)">
            <summary>
            Decodes an SVT tile into the supplied <see cref="T:Google.Maps.Feature.MapTile" />.
            </summary>
            <param name="mapTile">The MapTile to write decoded SVT data to.</param>
            <param name="featureTile">The SVT tile to decode.</param>
            <param name="projection">Coordinate system.</param>
            <returns>The MapTile.</returns></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeStructure(Google.Maps.VectorTile.V1.Feature,Google.Maps.Feature.MapTile)">
            <summary>
            Decodes a Structure as either an Extruded Structure, 2D Structure, or Modelled Structure,
            and adds it to the supplied MapTile.
            </summary>
            <remarks>
            Structures may be represented as a collection of ExtrudedAreas, collections of polygons
            with no explicitly specified height information, or as 3D models.
            </remarks>
            <param name="feature">The SVT feature to decode.</param>
            <param name="mapTile">The MapTile to which to add the decoded feature.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeWater(Google.Maps.VectorTile.V1.Feature,Google.Maps.Feature.MapTile)">
            <summary>
            Decodes a basemap water region, and adds it to the supplied MapTile.
            </summary>
            <param name="feature">The SVT feature to decode.</param>
            <param name="mapTile">The MapTile to which to add the decoded feature.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeRegion(Google.Maps.VectorTile.V1.Feature,Google.Maps.Feature.MapTile)">
            <summary>
            Decodes a basemap land use region, and adds it to the supplied MapTile.
            </summary>
            <param name="feature">The SVT feature to decode.</param>
            <param name="mapTile">The MapTile to which to add the decoded feature.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeRegionishArea(Google.Maps.VectorTile.V1.Feature,Google.Maps.Feature.MapTile)">
            <summary>
            Convenience function for loading area geometry for Water and Region features.
            </summary>
            <remarks>
            Combines multiple <see cref="T:Google.Maps.VectorTile.V1.Area" />s in feature geometry into a single
            <see cref="T:Google.Maps.Feature.Shape.Area" /> object. This addresses an issue with tile data where
            regions may be returned with many sub polygons (e.g. 74 for a water feature covering a large
            portion of a tile).
            </remarks>
            <param name="feature">The SVT feature to decode.</param>
            <param name="mapTile">The MapTile to which to add the decoded feature.</param>
            <returns>An area object representing the geometry of the decoded feature.</returns>
            <exception cref="T:System.ArgumentException">If the feature contains no polygon geometry.</exception></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeSegment(Google.Maps.VectorTile.V1.Feature,Google.Maps.Feature.MapTile)">
            <summary>
            Decodes a <see cref="T:Google.Maps.Feature.Segment" /> and adds it to the MapTile.
            </summary>
            <param name="feature">The SVT feature to decode.</param>
            <param name="mapTile">The MapTile to add the decoded feature to.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeSegmentishLineGroup(Google.Maps.VectorTile.V1.Feature,Google.Maps.Feature.MapTile)">
            <summary>
            Decodes a specified feature's lines geometry as a <see cref="T:Google.Maps.Feature.Shape.LineGroup" /> for
            <see cref="T:Google.Maps.Feature.Segment" /> and <see cref="T:Google.Maps.Feature.LineWater" /> features.
            </summary>
            <param name="feature">The SVT feature to decode.</param>
            <param name="mapTile">The MapTile to which to add the decoded feature.</param>
            <exception cref="T:System.ArgumentException">If the feature contains no polyline geometry.
            </exception></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeSegmentUsageType(Google.Maps.VectorTile.V1.FeatureType)">
            <summary>
            Converts SVT feature type to Segment usage type.
            </summary>
            <param name="type">SVT feature type.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.Decode2DStructure(Google.Maps.VectorTile.V1.Feature,Google.Maps.Feature.MapTile)">
            <summary>
            Decodes a structure represented as a 2D outline into an extruded structure and adds it to
            the supplied MapTile.
            </summary>
            <param name="feature">The SVT feature to decode.</param>
            <param name="mapTile">The MapTile to add the decoded feature to.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeExtrudedAreasStructure(Google.Maps.VectorTile.V1.Feature,Google.Maps.Feature.MapTile)">
            <summary>
            Decodes a Structure represented by ExtrudedAreas, and adds it to the <see cref="T:Google.Maps.Feature.MapTile" />s
            as an <see cref="T:Google.Maps.Feature.ExtrudedStructure" />
            </summary>
            <param name="feature">The SVT feature to decode.</param>
            <param name="mapTile">The MapTile to add the decoded feature to.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeModeledStructure(Google.Maps.VectorTile.V1.Feature,Google.Maps.Feature.MapTile)">
            <summary>
            Decodes a Factile ModeledVolume into an <see cref="T:Google.Maps.Feature.ModeledStructure" />
            </summary>
            <param name="feature">The SVT feature to decode.</param>
            <param name="mapTile">The MapTile to add the decoded feature to.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeStructureUsageType(Google.Maps.VectorTile.V1.FeatureType)">
            <summary>
            Converts from SVT feature type to Structure usage type.
            </summary>
            <param name="type">SVT feature type.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeRegionUsageType(Google.Maps.VectorTile.V1.FeatureType)">
            <summary>
            Converts from SVT feature type to Region usage type.
            </summary>
            <param name="type">SVT feature type.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeAreaFromVectorTileArea(Google.Maps.VectorTile.V1.Area,System.Single,System.Boolean@)">
            <summary>
            Decodes a MapFeature Area from a <see cref="T:Google.Maps.VectorTile.V1.Area" />.
            </summary>
            <remarks>
            Triangle strips are reconfigured as simple outline loop polygons
            (see <see cref="M:Google.Maps.TileLoading.FeatureTileDecoder.ReloopTriangleStripVertices(System.Collections.Generic.ICollection{UnityEngine.Vector2},System.Int32[],System.Collections.Generic.ICollection{UnityEngine.Vector2}@,System.Int32[]@)" />) to allow outline procesing of areas, e.g.,
            adding parapets.
            Visible for testing.
            </remarks>
            <param name="polygon">The Area to decode.</param>
            <param name="tileScale">Tile scale.</param>
            <param name="overhangs">Whether any of the decoded area crosses a tile boundary.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.BuildAreaFromTriangleFan(System.Collections.Generic.ICollection{UnityEngine.Vector2})">
            <summary>
            Decodes an <see cref="T:Google.Maps.Feature.Shape.Area" /> from a Triangle Fan.
            </summary>
            <remarks>
            The first vertex is the center of a triangle fan. The other vertices are arranged
            around this vertex in a fan shape. The following diagram shows a triangle fan polygon
            with the vertices labelled with their indices.
            Vertices may be in either a clockwise or counterclockwise order.
            (1)
            / \
            /   \
            /     \
            (0)-----(2)
            / \     /
            /   \   /
            /     \ /
            (4)-----(3)
            Visible for testing.
            </remarks>
            <param name="vertices">The triangle fan to decode.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.BuildAreaFromIndexedTriangles(System.Collections.Generic.ICollection{UnityEngine.Vector2},System.Collections.Generic.ICollection{System.Int32},System.Collections.Generic.ICollection{System.Int32},System.Collections.Generic.ICollection{System.Boolean})">
            <summary>
            Builds an <see cref="T:Google.Maps.Feature.Shape.Area" /> from a set of Indexed Triangles.
            </summary>
            <remarks>
            The polygon is a set of triangles with three vertex indices per triangle.
            (0)          (4)
            / \          / \
            /   \        /   \
            (1)----(2)   (3)----(5)
            Visible for testing.
            </remarks>
            <param name="vertices">Vertices.</param>
            <param name="breaks">Loop breaks.</param>
            <param name="indices">Indices.</param>
            <param name="externalEdges">Whether each edge is external or not.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.BuildAreaFromTriangleStrip(System.Collections.Generic.ICollection{UnityEngine.Vector2},System.Boolean)">
            <summary>
            Builds an Area from a Triangle Strip.
            </summary>
            <remarks>
            A strip of triangles, where each triangle uses the last edge of the previous triangle.
            Vertices may be in either a clockwise or counterclockwise order.
            (0)
            / \
            /   \
            /     \
            (2)-----(1)
            / \     /
            /   \   /
            /     \ /
            (4)-----(3)
            The triangulation generated from the above example is [0, 2, 1, 1, 2, 3, 2, 4, 3]
            Visible for testing.
            </remarks>
            <param name="vertices">Vertices.</param>
            <param name="reloop">
            If set, vertices in triangle strip will be permuted to be a simple outline loop.
            </param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.ReloopTriangleStripVertices(System.Collections.Generic.ICollection{UnityEngine.Vector2},System.Int32[],System.Collections.Generic.ICollection{UnityEngine.Vector2}@,System.Int32[]@)">
            <summary>
            Permutes vertices of a triangle strip representation to a simple loop representation.
            For example
            (0)                 (4)
            / \                 / \
            /   \               /   \
            /     \             /     \
            (2)-----(1)  =&gt;     (3)-----(0)
            / \     /           / \     /
            /   \   /           /   \   /
            /     \ /           /     \ /
            (4)-----(3)         (2)-----(1)
            Original triangulation topology is retained, but with updated vertex positions. E.g.
            Triangulation: [0, 2, 1, 1, 2, 3, 2, 4, 3] =&gt; [4, 3, 0, 0, 3, 1, 3, 2, 1]
            Visible for testing.
            </summary>
            <param name="originalVertices">The original vertices of the triangle strip</param>
            <param name="originalTriangles">The original triangulation</param>
            <param name="vertices">Output for updated, reordered vertices</param>
            <param name="triangles">Output for updated triangulation</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.TriangleStripFromVertexIndices(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Constructs a triangle strip from a given list of vertex indices.
            </summary>
            <remarks>
            A triangle strip is constructed such tha each triangle uses the last edge of the previous
            triangle.
            Vertices may be in either a clockwise or counterclockwise order.
            (0)
            / \
            /   \
            /     \
            (2)-----(1)
            / \     /
            /   \   /
            /     \ /
            (4)-----(3)
            Generated from the indices list [0, 1, 2, 3, 4].
            The triangulation generated from the above example is [0, 2, 1, 1, 2, 3, 2, 4, 3]
            Visible for testing.
            </remarks>
            <param name="indices">The list of vertex indices used in calculating the triangle
            strip.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeVector2Offsets(Google.Maps.VectorTile.V1.Vertex2DList,System.Single,System.Boolean@)">
            <summary>
            Converts a <see cref="T:Google.Maps.VectorTile.V1.Vertex2DList" /> into a list of <see cref="T:UnityEngine.Vector2" />s.
            </summary>
            <remarks>
            From vectortile.proto:
            2D vertex used for polygons and polylines. Each vertex represents an offset from the
            previous one in tile coordinates. The first coordinate is offset from (0, 0).
            For example, the list of vertices [(1,1), (2, 2), (1, 2)] would be encoded in vertex offsets
            as [(1, 1), (1, 1), (-1, 0)].
            </remarks>
            <param name="vertexOffsets">Vertex offsets.</param>
            <param name="tileScale">Tile scale.</param>
            <param name="overhangs">Returns whether any of the decoded coordinates lie outside the tile
            boundary (assumed to be (0, 0) to (TileSize, TileSize).</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeVector2OffsetsToGlobalCoordinates(Google.Maps.Coord.MercatorTileCoords,Google.Maps.VectorTile.V1.Vertex2DList)">
            <summary>
            Converts a <see cref="T:Google.Maps.VectorTile.V1.Vertex2DList" /> into an array of <see cref="T:Google.Maps.Feature.Shape.GlobalCoordinate" />s.
            </summary>
            <remarks>
            From vectortile.proto:
            2D vertex used for polygons and polylines. Each vertex represents an offset from the
            previous one in tile coordinates. The first coordinate is offset from (0, 0).
            For example, the list of vertices [(1,1), (2, 2), (1, 2)] would be encoded in vertex offsets
            as [(1, 1), (1, 1), (-1, 0)].
            </remarks>
            <param name="mercatorTileCoords">The coordinates of the source tile</param>
            <param name="vertexOffsets">Vertex offsets.</param>
            <returns>The array of GlobalCoordinates</returns></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.DecodeVector3Offsets(Google.Maps.VectorTile.V1.Vertex3DList,System.Single)">
            <summary>
            Converts a <see cref="T:Google.Maps.VectorTile.V1.Vertex3DList" /> into a list of <see cref="T:UnityEngine.Vector3" />s.
            </summary>
            <remarks>
            From vectortile.proto:
            3D vertex list used for meshes. Each entry represents an offset from the previous one in
            tile coordinates. The first coordinate is offset from (0, 0, 0).
            </remarks>
            <param name="vertexOffsets">Vertex offsets.</param>
            <param name="tileScale">Tile scale.</param></member>
        <member name="M:Google.Maps.TileLoading.FeatureTileDecoder.IsFactileLayerType(Google.Maps.VectorTile.V1.FeatureType,Google.Maps.VectorTile.V1.FeatureType)">
            <summary>
            Returns true if the supplied featureType is a subtype of the feature type provided as the
            layerType argument.
            </summary>
            <remarks>
            E.g, FactileFeatureType.Bank is a child of FactileFeatureType.Structure, and
            FactileFeatureType.Arterial is a child of FactileFeatureType.Road.
            Visible for testing.
            </remarks>
            <param name="featureType">The child type to test.</param>
            <param name="layerType">The parent type to test.</param>
            <returns>Whether child type is a sub type of parent type.</returns></member>
        <member name="T:Google.Maps.TileLoading.TerrainTileDecoder">
            <summary>
            Decoder for <see cref="T:Google.Maps.Terrain.TerrainTile" /> tiles.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TerrainTileDecoder.Projection">
            <summary>
            Coordinate system used to covert to worldspace coordinates.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileDecoder.#ctor(Google.Maps.Coord.Projection,System.Boolean)">
            <summary>Constructor.</summary></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileDecoder.DecodeIntoTransaction(Google.Maps.TileLoading.TileParameters,Google.Maps.TileLoading.CacheBlock{Google.Maps.Terrain.TerrainTile}.Transaction,System.Byte[])">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileDecoder.ParseTerrainTile(System.Byte[])">
            <summary>
            Parses serialized data into a TerrainTile.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileDecoder.DecodeTerrainTile(Google.Maps.VectorTile.V1.TerrainTile,Google.Maps.TileLoading.TileParameters)">
            <summary>
            Converts a decoded <see cref="T:Google.Maps.VectorTile.V1.TerrainTile" /> proto into a
            <see cref="T:Google.Maps.Terrain.TerrainTile" />.
            </summary>
            <param name="terrainTileProto">The <see cref="T:Google.Maps.VectorTile.V1.TerrainTile" /> object to decode.</param>
            <param name="tileParams">The request parameters used to fetch the tile.</param></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileDecoder.DecodeElevationGrid(Google.Maps.VectorTile.V1.TerrainTile,System.Int32)">
            <summary>
            Decodes and re-samples a <see cref="T:Google.Maps.VectorTile.V1.TerrainTile" /> to a grid of altitudes in meters
            above mean sea level, at the target resolution.
            </summary>
            <param name="terrain">The <see cref="T:Google.Maps.VectorTile.V1.TerrainTile" /> to decode.</param>
            <param name="targetElevationGridSize">
            The target number of altitude data points in both latitudinal and longitudinal directions
            for the decoded elevation grid. Elevation data will be re-sampled during decoding to meet
            this target resolution.
            </param></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileDecoder.UnpackBytes(Google.Protobuf.ByteString,System.Int32)">
            <summary>
            Decodes a byte string into an array of integers. The encoding is nibble-based; the first
            nibble contains a sign bit, two bits of the integer, and a stop bit; subsequent nibbles
            contain three bits of the integer and a stop bit. Small integers can be represented in a
            single nibble.
            More details in go/enduro-fast-compact-heightmaps.
            </summary>
            <param name="packedBytes">The bytes to decode.</param>
            <param name="length">The number of integers to extract from packedBytes.</param></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileDecoder.DecodeSecondDerivativeElevationGrid(Google.Maps.VectorTile.V1.TerrainTile.Types.SecondDerivativeElevationGrid)">
            <summary>
            Decodes and re-samples a <see cref="T:Google.Maps.VectorTile.V1.TerrainTile.Types.SecondDerivativeElevationGrid" /> to a grid of altitudes
            in meters above mean sea level, at the target resolution.
            </summary>
            <param name="elevationGrid">The <see cref="T:Google.Maps.VectorTile.V1.TerrainTile.Types.SecondDerivativeElevationGrid" /> to decode.
            </param></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileDecoder.DecodeFirstDerivativeElevationGrid(Google.Maps.VectorTile.V1.TerrainTile.Types.FirstDerivativeElevationGrid)">
            <summary>
            Decodes and re-samples a <see cref="T:Google.Maps.VectorTile.V1.TerrainTile.Types.FirstDerivativeElevationGrid" /> to a grid of altitudes
            in meters above mean sea level, at the target resolution.
            </summary>
            <param name="elevationGrid">The <see cref="T:Google.Maps.VectorTile.V1.TerrainTile.Types.FirstDerivativeElevationGrid" /> to decode.
            </param></member>
        <member name="T:Google.Maps.TileLoading.TerrainTileUrlBuilder">
            <summary>
            URL builder for terrain tiles.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TerrainTileUrlBuilder.DefaultTerrainFormat">
            <summary>
            Default terrain encoding format.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileUrlBuilder.BuildRequestUrl(Google.Maps.TileLoading.TileParameters,System.String,System.String,System.String)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileUrlBuilder.MetersToCentimeters(System.Single)">
            <summary>
            Rounds float meters to integer centimeters.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TerrainTileUrlBuilder.BuildCacheBlockKey(Google.Maps.TileLoading.CacheBlockParameters)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.TileLoading.TileCacheResult`1">
            <summary>
            Result returned by TileCache coroutines.
            </summary>
            <typeparam name="T"></typeparam></member>
        <member name="T:Google.Maps.TileLoading.TileCacheResult`1.CacheTile">
            <summary>Return value.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileCacheResult`1.CacheTile.Content">
            <summary>Parsed tile content.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileCacheResult`1.CacheTile.VersionId">
            <summary>Version ID from Factile.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileCacheResult`1.CacheTile.Exception">
            <summary>Exception, if loading the tile from cache failed.</summary></member>
        <member name="M:Google.Maps.TileLoading.TileCacheResult`1.#ctor">
            <summary>Constructor.</summary></member>
        <member name="M:Google.Maps.TileLoading.TileCacheResult`1.#ctor(Google.Maps.Util.ICancellable)">
            <summary>Constructor with parent.</summary></member>
        <member name="M:Google.Maps.TileLoading.TileCacheResult`1.Return(`0,System.String)">
            <summary>Successfully return a loaded tile.</summary></member>
        <member name="M:Google.Maps.TileLoading.TileCacheResult`1.Error(System.Exception)">
            <summary>Fail with an exception (can be null).</summary></member>
        <member name="M:Google.Maps.TileLoading.TileCacheResult`1.ReturnWithError(`0,System.String,System.Exception)">
            <summary>
            Return a partially loaded tile with the exception that prevented it from fully loading
            </summary></member>
        <member name="T:Google.Maps.TileLoading.ITileCache`1">
            <summary>
            The basic interface for TileCaches. Defined to permit mocking.
            </summary>
            <typeparam name="T">The type of data being cached.</typeparam></member>
        <member name="M:Google.Maps.TileLoading.ITileCache`1.LoadTile(Google.Maps.TileLoading.TileParameters,Google.Maps.TileLoading.TileCacheResult{`0})">
            <summary>
            Asynchronously loads the tile with the given <see cref="T:Google.Maps.Coord.MercatorTileCoords" />.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.ITileCache`1.UpdateFloatingOrigin">
            <summary>
            Translates the origin of each cached tile in response to changing the floating origin.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.TileCache`1">
            <summary>Cache of tile content.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.UseLongExpiryTimeForTesting">
            <summary>
            If true, set the expiry date of all tiles to a point far in the future.
            </summary>
            <remarks>
            This has no effect outside of the Unity editor. You should prefer using
            LongTileCacheTimeAttribute rather than setting this directly.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.CacheIndex">
            <summary>
            Mapping from cache block parameters to entries in <see cref="T:UnityEngine.Cache" />. The key is given by
            <see cref="M:Google.Maps.TileLoading.IUrlBuilder.BuildCacheBlockKey(Google.Maps.TileLoading.CacheBlockParameters)" />.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.DefaultTtl">
            <summary>Default TTL if Factile doesn't provide one.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.Cache">
            <summary>
            LRU cache of tile blocks, at most <see cref="F:Google.Maps.TileLoading.TileCache`1.MaxMemoryBlocks" /> in
            length. When it exceeds this length, blocks are evicted from the end.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.TileProducer">
            <summary>
            Wrapped tile producer. <see cref="M:Google.Maps.TileLoading.TileCache{`0}.LoadTile(Google.Maps.TileLoading.TileParameters,Google.Maps.TileLoading.TileCacheResult{`0})" /> calls for a tile that isn't in the cache fall
            through to this.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.PersistentCache">
            <summary>
            Persistent cache.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.RequestLogger">
            <summary>
            Tile logger for logging cache events.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.Projection">
            <summary>
            Coordinate system. Used for floating origin.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.BlockSize">
            <summary>Width and height of tile blocks.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.MaxMemoryBlocks">
            <summary>How many tile blocks to cache in memory.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.PersistentCacheTimeout">
            <summary>
            Maximum time to wait for results from <see cref="F:Google.Maps.TileLoading.TileCache{`0}.PersistentCache" /> before disabling it.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.Clock">
            <summary>
            Clock used for expiry times.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.CoroutineStarter">
            <summary>
            Coroutine starter to start coroutines.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.TileDecoder">
            <summary>
            Tile decoder.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.UrlBuilder">
            <summary>
            URL builder used to build cache keys.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileCache`1.MustSendNextNetworkRequest">
            <summary>
            Whether to send the next network request unconditionally, even if it's cached. It is set to
            false after sending one request. This allows more accurate daily active user accounting.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.Initialize(Google.Maps.Util.ICoroutineStarter,Google.Maps.Util.IClock,Google.Maps.TileLoading.ProtoTileProducer,Google.Maps.TileLoading.ITileDecoder{`0},Google.Maps.TileLoading.IUrlBuilder,Google.Maps.Coord.Projection,Google.Maps.CacheOptions,Google.Maps.Logging.ITileRequestLogger,System.Boolean)">
            <summary>
            Initializes the TileCache, backed by a disk cache if options.MaxDiskBytes &gt; 0.
            </summary>
            <param name="coroutineStarter">Coroutine runner.</param>
            <param name="clock">Clock.</param>
            <param name="tileProducer">Loads tiles that aren't found in the cache.</param>
            <param name="tileDecoder">Tile decoder.</param>
            <param name="urlBuilder">URL builder for building cache keys.</param>
            <param name="projection">Coordinate system.</param>
            <param name="options">Cache options.</param>
            <param name="requestLogger">Logger for cache stats.</param>
            <param name="alwaysSendFirstNetworkRequest">
            Whether to send the first network request unconditionally.
            </param></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.InitializeCleanup(Google.Maps.Util.ICoroutineStarter,Google.Maps.TileLoading.IPersistentCache{`0})">
            <summary>
            Starts <see cref="M:Google.Maps.TileLoading.IPersistentCache`1.CallCleanup" /> as a coroutine.
            </summary>
            <remarks>
            If <see cref="F:Google.Maps.TileLoading.TileCache{`0}.UseLongExpiryTimeForTesting" /> is true, the cache should never be cleaned up,
            so don't start the coroutine.
            </remarks></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.InitializeInternal(Google.Maps.Util.ICoroutineStarter,Google.Maps.TileLoading.ITileProducer,Google.Maps.TileLoading.ITileDecoder{`0},Google.Maps.TileLoading.IUrlBuilder,Google.Maps.Util.IClock,Google.Maps.Coord.Projection,Google.Maps.TileLoading.IPersistentCache{`0},Google.Maps.Logging.ITileRequestLogger,System.Boolean)">
            <summary>
            Initializes the TileCache with a custom <see cref="T:Google.Maps.TileLoading.IPersistentCache`1" />.
            </summary>
            <param name="coroutineStarter">Coroutine starter.</param>
            <param name="tileProducer">Loads tiles that aren't found in the cache.</param>
            <param name="tileDecoder">Tile decoder.</param>
            <param name="urlBuilder">URL builder for building cache keys.</param>
            <param name="clock">Clock.</param>
            <param name="projection">Coordinate system.</param>
            <param name="persistentCache">Custom persistent cache.</param>
            <param name="requestLogger">Request logger for caching stats.</param>
            <param name="alwaysSendFirstNetworkRequest">
            Whether to send the first network request unconditionally.
            </param></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.LoadTile(Google.Maps.TileLoading.TileParameters,Google.Maps.TileLoading.TileCacheResult{`0})">
            <summary>
            Asynchronously loads the tile with the given <see cref="T:Google.Maps.Coord.MercatorTileCoords" />.
            </summary>
            <remarks>
            The steps to load a tile are as follows:
            <list type="bullet">
            <item>
            Look for the 4x4 <see cref="T:Google.Maps.TileLoading.CacheBlock`1" /> containing this tile in the in-memory
            <see cref="T:UnityEngine.Cache" />. If it's not there, look for it in <see cref="F:Google.Maps.TileLoading.TileCache{`0}.PersistentCache" />. If
            it's not on disk, create an empty block.
            </item>
            <item>
            Look up the <see cref="T:Google.Maps.TileLoading.CacheBlock{`0}.Entry" /> for this tile. If it has expired, clear
            it.
            </item>
            <item>
            If the <see cref="T:Google.Maps.TileLoading.CacheBlock{`0}.Entry" /> has a <see cref="T:Google.Maps.Feature.MapTile" />, return it
            immediately.
            </item>
            <item>
            If the <see cref="T:Google.Maps.TileLoading.CacheBlock{`0}.Entry" /> has SVT, parse it to a <see cref="T:Google.Maps.Feature.MapTile" />
            and return it.
            </item>
            <item>
            If we get this far, fall through to <see cref="F:Google.Maps.TileLoading.TileCache{`0}.TileProducer" />.LoadTile (which will
            typically load from Factile over the network). If this succeeds and the response contains
            SVT, save it to <see cref="F:Google.Maps.TileLoading.TileCache{`0}.PersistentCache" />, parse it into a MapTile, and return it.
            </item>
            </list>
            </remarks></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.CreateMapTileAndFillSvt(Google.Maps.TileLoading.TileParameters,Google.Maps.TileLoading.CacheBlock{`0}.Transaction,Google.Maps.Util.CoroutineResult{System.Exception})">
            <summary>
            Asynchronously loads a <see cref="T:Google.Maps.Feature.MapTile" />, either from <see cref="T:UnityEngine.Cache" />, or by parsing
            SVT from the persistent cache or Factile.
            </summary>
            <param name="tileParams">Tile parameters.</param>
            <param name="transaction">Transaction to update the persistent cache if necessary.</param>
            <param name="errorResult">
            Returns an exception if the coroutine encounters any errors.
            </param></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.LoadMapTile(Google.Maps.TileLoading.TileParameters,Google.Maps.TileLoading.CacheBlock{`0}.Transaction,Google.Maps.TileLoading.TileCacheResult{`0})">
            <summary>
            Asynchronously loads a <see cref="T:Google.Maps.Feature.MapTile" />, either from <see cref="T:UnityEngine.Cache" />, or by parsing
            SVT from the persistent cache or Factile. Terrain data is loaded directly from Factile.
            </summary>
            <param name="tileParams">Tile parameters.</param>
            <param name="transaction">Transaction to update the persistent cache if necessary.</param>
            <param name="result">Result of the coroutine.</param></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.FindOrCreate(Google.Maps.TileLoading.CacheBlockParameters,Google.Maps.Util.CoroutineResult{Google.Maps.TileLoading.CacheBlock{`0}})">
            <summary>
            Finds a block in the cache by coordinates. Also moves it to the head of <see cref="T:UnityEngine.Cache" />
            (i.e. makes it the Most Recently Used). If not found, it creates and returns an empty block.
            </summary>
            <param name="blockParams">Parameters for the cache block.</param>
            <param name="result">Result of the coroutine.</param></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.EvictLru">
            <summary>
            Evicts the Least Recently Used cache entries, to bring the size down to
            <see cref="F:Google.Maps.TileLoading.TileCache{`0}.MaxMemoryBlocks" />.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.UpdateFloatingOrigin">
            <summary>
            Translates the origin of each cached tile in response to changing the floating origin.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.OnCoroutineShutdown(Google.Maps.Util.ICoroutineStarter)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.TileCache`1.OnCoroutineStartup(Google.Maps.Util.ICoroutineStarter)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.TileLoading.TileManager">
            <summary>
            Manages the lifecycle of a set of tiles as they're loaded from Factile or elsewhere, up to the
            point where they generate MapTiles.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.PerTileObjectCreationFrameBudget">
            <summary>
            The maximum length of time in milliseconds that we'll spend creating game objects per tile
            per frame. We limit this time to reduce jank when we're loading tiles.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.Tiles">
            <summary>
            All the tiles managed by this TileManager, indexed by their coordinates.
            </summary>
            <remarks>
            All tile coordinates in <see cref="N:Google.Maps.Loading" /> and <see cref="F:Google.Maps.TileLoading.TileManager.Unloading" /> are in Tiles, as
            well as any idle tiles (tiles that aren't actively being loaded or unloaded right now).
            Tiles are only removed from this after they have been fully unloaded.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.TileManager.Loading">
            <summary>Set of tiles that are currently being loaded.</summary>
            <remarks>
            There should generally be no overlap between Loading and Unloading. However, if moving from
            one to the other, it should be added to the new set before being removed from the old (so it
            will briefly be in both). This avoids incorrectly triggering MapEvents.Loaded.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.TileManager.Unloading">
            <summary>Set of tiles that are currently being unloaded.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.DirectlyRequestedTiles">
            <summary>
            Set of directly requested tiles. Does not contain the tile coordinates of tiles that are
            loaded to satisfy dependencies. <see cref="M:Google.Maps.TileLoading.TileManager.LoadTiles(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords},Google.Maps.GameObjectOptions,System.Boolean)" />
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.NumErrors">
            <summary>
            The number of times that a TileState has changed to state Error since the last
            <see cref="F:Google.Maps.Event.MapEvents.Loaded" /> event.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.RecentlyLoaded">
            <summary>
            List of TileStates that have been successfully loaded since the last
            <see cref="F:Google.Maps.Event.MapEvents.Progress" /> event.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.Events">
            <summary>
            Container for all events fired by the SDK.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.FeatureCache">
            <summary>Feature cache.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.TerrainCache">
            <summary>Terrain cache.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.GameObjectLoader">
            <summary>Game object loader.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.MapsServiceParameters">
            <summary>MapsService parameters.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.TileRequestOptions">
            <summary>Tile request options.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.Attribution">
            <summary>Attribution.</summary></member>
        <member name="P:Google.Maps.TileLoading.TileManager.GameObjectQueue">
            <summary>
            Queue that determines the order in which tiles will be loaded by
            <see cref="T:Google.Maps.Unity.GameObjectLoader" />.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.CoroutineStarter">
            <summary>
            The <see cref="T:Google.Maps.Util.ICoroutineStarter" /> that this instance will use to start coroutines.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.Clock">
            <summary>
            Injectable clock.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileManager.QuadTree">
            <summary>Quad tree for multi zoom.</summary>
            <remarks>
            The quad tree is reused in each frame to avoid GC churn. It will accumulate empty nodes if
            the map moves around a lot, which will affect performance. If this becomes a problem, we
            could create a new one if the proportion of leaf nodes that are empty becomes too high, or
            something.
            </remarks></member>
        <member name="M:Google.Maps.TileLoading.TileManager.#ctor(Google.Maps.Util.ICoroutineStarter,Google.Maps.Util.IClock,Google.Maps.Event.Events,Google.Maps.TileLoading.TileCache{Google.Maps.Feature.MapTile},Google.Maps.TileLoading.ITileCache{Google.Maps.Terrain.TerrainTile},Google.Maps.Unity.IGameObjectLoader,Google.Maps.MapsServiceParameters,Google.Maps.TileLoading.TileRequestOptions,Google.Maps.Unity.Attribution.IAttribution)">
            <summary>Initializer.</summary>
            <param name="coroutineStarter">Coroutine runner.</param>
            <param name="clock">Clock.</param>
            <param name="events">Event handlers.</param>
            <param name="featureCache">Tile cache.</param>
            <param name="terrainCache"></param>
            <param name="gameObjectLoader">Game object loader.</param>
            <param name="mapsServiceParameters">
            MapsService parameters, for ObjectCreationFrameBudget.
            </param>
            <param name="tileRequestOptions">Tile request options.</param>
            <param name="attribution">Attribution.</param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.Update">
            <summary>
            Pumped every frame by <see cref="M:Google.Maps.MapsService.FrameUpdate" />.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.LoadTiles(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords},Google.Maps.GameObjectOptions,System.Boolean)">
            <summary>Loads a list of tiles.</summary>
            <param name="coords">
            Coordinates of the tiles to load. The order of the list determines the priority, i.e. tile
            coordinates earlier in the list will be loaded first.
            </param>
            <param name="options">Styling and construction options.</param>
            <param name="processDependencies">
            Whether to load tile dependencies (all neighbouring tiles).
            </param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.StartLoadingTile(Google.Maps.TileLoading.TileState)">
            <summary>
            Commences loading of the tile specified by the supplied tile coordinate, prioritizing the
            loading of this tile.
            </summary>
            <param name="state">TileState for the requested tile</param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.UnloadTilesOutside(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords},System.Int32,System.Boolean)">
            <summary>Unloads tiles not contained in the given list.</summary>
            <param name="coords">Coordinates of tiles <b>not</b> to unload.</param>
            <param name="zoom">Zoom level.</param>
            <param name="processDependencies">
            If true, the region described by the coords parameter will be expanded by on tile in all
            directions. This is useful, e.g., to prevent tile dependencies from being unloaded before
            the tiles on which they depend are loaded.
            </param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.GetTileState(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Retrieves a managed TileState with the given coordinates, or null if none exists.
            </summary>
            <param name="coords">Coordinates of the tile.</param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.GetOrCreateTileState(Google.Maps.Coord.MercatorTileCoords,Google.Maps.GameObjectOptions,Google.Maps.TileLoading.TileState@)">
            <summary>
            Retrieves a tile state with the given coordinates, or a new one if none exists yet.
            </summary>
            <param name="coords">Coordinates of the tile.</param>
            <param name="gameObjectOptions">Options for creating the GameObject.</param>
            <param name="tileState">The existing or new TileState.</param>
            <returns>
            True if there was an existing tile with these coordinates. False if this call created a new
            TileState.
            </returns></member>
        <member name="M:Google.Maps.TileLoading.TileManager.InvokeError(Google.Maps.Event.MapLoadErrorArgs)">
            <summary>
            Indicates that an error occurred during tile loading, by incrementing the number of errors
            that will be reported with the next <see cref="F:Google.Maps.Event.MapEvents.Loaded" />. Also invokes
            <see cref="F:Google.Maps.Event.MapEvents.LoadError" /> if arguments are supplied.
            </summary>
            <param name="args">
            Arguments to invoke the <see cref="F:Google.Maps.Event.MapEvents.LoadError" />. If null, don't
            invoke the event.
            </param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.Remove(Google.Maps.TileLoading.TileState)">
            <summary>Removes the given <see cref="T:Google.Maps.TileLoading.TileState" /> from the manager.</summary>
            <param name="state">The <see cref="T:Google.Maps.TileLoading.TileState" /> to remove.</param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.SetLoadingStatus(Google.Maps.Coord.MercatorTileCoords,System.Boolean)">
            <summary>
            Adds or removes a tile from the set of tiles that are currently being loaded.
            </summary>
            <remarks>
            If isLoading is false, this triggers a <see cref="F:Google.Maps.Event.MapEvents.Progress" /> event,
            and also a <see cref="F:Google.Maps.Event.MapEvents.Loaded" /> event if this was the last in-progress
            (loading or unloading) tile.
            </remarks>
            <param name="coords">Coordinates of the tile.</param>
            <param name="isLoading">Whether the tile is being loaded.</param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.SetUnloadingStatus(Google.Maps.Coord.MercatorTileCoords,System.Boolean)">
            <summary>
            Adds or removes a tile from the set of tiles that are currently being unloaded.
            </summary>
            <remarks>
            If isUnloading is false, this triggers a <see cref="F:Google.Maps.Event.MapEvents.Loaded" /> event if
            this was the last in-progress (loading or unloading) tile.
            </remarks>
            <param name="coords">Coordinates of the tile.</param>
            <param name="isUnloading">Whether the tile is being unloaded.</param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.MaybeInvokeMapLoadStart">
            <summary>
            Triggers a <see cref="F:Google.Maps.Event.MapEvents.LoadStart" /> event, if there is no pending
            work.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.MaybeInvokeMapLoaded">
            <summary>
            Triggers a <see cref="F:Google.Maps.Event.MapEvents.Loaded" /> event, if there is no pending
            work.
            Pending work is deemed to be pending if any tile is unloading, or any directly requested
            tile is loading (<see cref="F:Google.Maps.TileLoading.TileManager.DirectlyRequestedTiles" />).
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.UnloadingOrDirectlyLoadingInProgress">
            <summary>
            Returns true if any tiles are in the Unloading state, or any directly loaded tiles (as
            opposed to dependency satisfaction tiles) are in the loading state.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.GetLoadingAndDirectlyRequestedTileCoords">
            <summary>
            Returns the tile coordinates of any directly requested tiles (as opposed to dependency
            satisfaction tiles) that are currently in the <see cref="N:Google.Maps.Loading" /> set.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.InvokeMapLoadProgress">
            <summary>
            Triggers a <see cref="F:Google.Maps.Event.MapEvents.Progress" /> event, if there are no more
            tiles loading (<see cref="N:Google.Maps.Loading" />).
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.States">
            <summary>
            Returns the collection of all <see cref="T:Google.Maps.TileLoading.TileState" />s owned by this manager.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.SetAllDirty">
            <summary>Marks all tiles as dirty (i.e. incompletely loaded).</summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.UpdateCacheFloatingOrigin">
            <summary>
            Updates the floating origin of each cached tile.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.NumParallelTilesLoading">
            <summary>
            Calculates the number of tiles that should be loaded in parallel, based on the frame budget.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.UnloadUnusedSince(System.DateTime)">
            <summary>
            Unload all tiles that have been unused since <paramref name="cutoff" />.
            </summary>
            <param name="cutoff">Anything that has been unused since this time be unloaded.</param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.ActivateTileCovering(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords})">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.TileManager.GetLoadedAndPartiallyLoadedTiles">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileLoading.TileManager.OnCoroutineShutdown(Google.Maps.Util.ICoroutineStarter)">
            <summary>
            Called when coroutines have been shut down. Disables all the <see cref="T:Google.Maps.TileLoading.TileState" />s to
            stop their in-progress loading or unloading work as much as possible.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.OnCoroutineStartup(Google.Maps.Util.ICoroutineStarter)">
            <summary>
            Called immediately after it is safe to start coroutines. Enables all the
            <see cref="T:Google.Maps.TileLoading.TileState" />s.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileManager.SetGameObjectLoadingStage(Google.Maps.Coord.MercatorTileCoords,Google.Maps.TileLoading.TileState.GameObjectLoadingStageEnum)">
            <summary>
            Set the reification state of the tile indicated by the supplied coordinates if there is an
            existing state for the tile.
            </summary>
            <param name="coords">Coordinates of tile.</param>
            <param name="loadingStage">Desired reification state.</param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.Stall(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Stall processing of the tile indicated by the supplied coordinates if there is an existing
            state for the tile.
            </summary>
            <param name="coords">Coordinates of tile.</param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.Unstall(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Unstall processing of the tile indicated by the supplied coordinates if there is an existing
            state for the tile.
            </summary>
            <param name="coords">Coordinates of tile.</param></member>
        <member name="M:Google.Maps.TileLoading.TileManager.IsActive(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Returns whether there is an active record in the tile processing priority queue for the
            supplied tile coordinate.
            </summary>
            <param name="coords">Coordinates to check</param>
            <returns>Whether an active token exists</returns></member>
        <member name="M:Google.Maps.TileLoading.TileManager.HasReachedState(Google.Maps.Coord.MercatorTileCoords,Google.Maps.TileLoading.TileState.GameObjectLoadingStageEnum)">
            <summary>
            Returns whether there is a record in the tile processing priortiy queue indicating that
            process for the indicated tile has reached at least the supplied game object laoding state.
            </summary>
            <param name="coords">Coordinates of the tile.</param>
            <param name="minimumState">Minimum reification state.</param>
            <returns>If the tile has reached the supplied minimum state</returns></member>
        <member name="T:Google.Maps.TileLoading.TilePriorityQueue">
            <summary>
            A special Priority Queue used for things like parsing tiles.
            </summary>
            <remarks>
            This class is essentially a stack of FIFO blocks.
            </remarks></member>
        <member name="T:Google.Maps.TileLoading.TilePriorityQueue.TokenState">
            <summary>
            The possible states a Token can be in at at given time.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.TokenState.Idle">
            <summary>
            Indicates a token in neither active nor stalled.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.TokenState.Active">
            <summary>
            Indicates a token is active and thus counts toward the
            <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.MaxActiveTokens" /> limit.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.TokenState.Stalled">
            <summary>
            Indicates a token is not active, but is unavailable to be made active, and that the token
            does not count toward the <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.MaxActiveTokens" />  limit.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.TilePriorityQueue.Token">
            <summary>
            Priority token. Each of these represents an entry in the queue. They are activated in the
            order that they occur in the <see cref="T:Google.Maps.TileLoading.TilePriorityQueue" />, with the maximum number of
            active tokens limited by the parameter to the <see cref="T:Google.Maps.TileLoading.TilePriorityQueue" /> constructor.
            </summary>
            <remarks>
            Tile processing should call <see cref="M:Google.Maps.TileLoading.TilePriorityQueue.Add(Google.Maps.Coord.MercatorTileCoords)" />
            (or <see cref="M:Google.Maps.TileLoading.TilePriorityQueue.AddLast(Google.Maps.Coord.MercatorTileCoords)" />) to get a token; wait until
            <see cref="M:Google.Maps.TileLoading.TilePriorityQueue.Token.IsActive" /> is true; then do whatever processing it needs to, and then
            <see cref="M:Google.Maps.TileLoading.TilePriorityQueue.Token.Release" /> the token.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.Token.Queue">
            <summary>Priority queue that owns this token.</summary></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.Token.Coords">
            <summary>Coordinates of the tile that requested this token.</summary></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.Token.Node">
            <summary>Position of this token in <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.List" />.</summary></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.Token.State">
            <summary>The current State of this token.</summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Token.#ctor(Google.Maps.TileLoading.TilePriorityQueue,Google.Maps.Coord.MercatorTileCoords)">
            <summary>Constructor.</summary>
            <param name="queue">Priority queue that owns this token.</param>
            <param name="coords">Tile coordinate.</param></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Token.Prioritize">
            <summary>Moves this token in front of the queue's priority tail.</summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Token.Release">
            <summary>
            Releases this token. If it is active, the next inactive token in the queue will be
            activated.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Token.Stall">
            <summary>
            Move this token to a Stalled state.
            Stalled tokens do not count to active Token limit.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Token.Unstall">
            <summary>
            Move this token out of the Stalled state, so it is available to be Activated again.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Token.IsStalled">
            <summary>
            Returns whether this token is currently stalled.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Token.IsActive">
            <summary>
            Returns whether this token is currently active.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.List">
            <summary>
            The list of tokens given out by this queue, in priority order.
            </summary>
            <remarks>
            Tokens are activated starting from the head of the list, but later reordering (e.g. adding
            new nodes before the priority tail) can mean that there are inactive tokens in front of
            active ones.
            </remarks></member>
        <member name="P:Google.Maps.TileLoading.TilePriorityQueue.Count">
            <summary>Number of items in the queue.</summary></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.PriorityTail">
            <summary>
            The most recent node in this Queue that is not part of the last region to be added.
            <see cref="M:Google.Maps.TileLoading.TilePriorityQueue.Prioritize(Google.Maps.TileLoading.TilePriorityQueue.Token)" /> moves elements just before this node.
            </summary>
            <remarks>
            When <see cref="M:Google.Maps.TileLoading.TileManager.LoadTiles(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords},Google.Maps.GameObjectOptions,System.Boolean)" /> is called, if any tiles in that list have already
            been loaded and parsed, we want to prioritize GameObject creation for those tiles. However,
            we also want to keep them in the same order that they appear in that list. A simple stack or
            queue doesn't work, because the new tiles need to be FIFO amongst themselves but LIFO with
            respect to the rest of the list. So:
            - When prioritizing a tile, we move it to just before the current priority tail. This
            preserves the order among tiles moved since the last <see cref="M:Google.Maps.TileLoading.TilePriorityQueue.MarkPriorityTail" />, but
            puts them ahead of all other tiles.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.CoordIndex">
            <summary>Index into <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.List" /> by <see cref="T:Google.Maps.Coord.MercatorTileCoords" />.</summary></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.ActiveTokens">
            <summary>Number of currently allocated active tokens.</summary></member>
        <member name="F:Google.Maps.TileLoading.TilePriorityQueue.MaxActiveTokens">
            <summary>Maximum total number of allocated tokens.</summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.#ctor(System.Int32)">
            <summary>Constructor.</summary>
            <param name="maxActive">Maximum number of active tokens.</param></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Add(Google.Maps.Coord.MercatorTileCoords)">
            <summary>Adds the given <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to the queue.</summary>
            <returns>A token for this tile.</returns></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.AddLast(Google.Maps.Coord.MercatorTileCoords)">
            <summary>Adds the given <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to the end of the queue.</summary>
            <returns>A token for this tile.</returns></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.AddTokenForCoord(Google.Maps.Coord.MercatorTileCoords,System.Boolean)">
            <summary>
            Internal method to add a new token for a given <see cref="T:Google.Maps.Coord.MercatorTileCoords" />.
            </summary>
            <param name="coords">Tile coordinates.</param>
            <param name="beforePriorityTail">
            If true, add before the priority tail. If false (or if <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.PriorityTail" /> is null),
            add at the end.</param></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Get(Google.Maps.Coord.MercatorTileCoords)">
            <summary>Returns the token for a given tile coordinate, or null if not found.</summary>
            <param name="coords">Coordinates of the tile.</param></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Remove(Google.Maps.TileLoading.TilePriorityQueue.Token)">
            <summary>Removes the given token from the queue.</summary>
            <param name="token">Token to remove.</param></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Prioritize(Google.Maps.TileLoading.TilePriorityQueue.Token)">
            <summary>
            Bumps up the priority of the given token, to just before the current priority tail.
            </summary>
            <param name="token">Token to prioritize.</param></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.MarkPriorityTail">
            <summary>Sets the priority tail to the current head of the queue.</summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.SetMaxActiveTokens(System.Int32)">
            <summary>Sets the size of the pool of active tokens.</summary>
            <remarks>
            If this is less than the current number of active tokens, they will stay active. The queue
            will just not activate any more tokens until the number of active tokens falls below the
            pool size.
            </remarks>
            <param name="maxActiveTokens">Maximum number of active tokens at any one time.</param></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.ActivateMoreTokens">
            <summary>
            Activates tokens from the start of <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.List" /> until the pool of active tokens is
            used up or all tokens are active.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Stall(Google.Maps.TileLoading.TilePriorityQueue.Token)">
            <summary>
            Moves a token to the <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.TokenState.Stalled" /> state, and calls ActivateMoreTokens
            on the priority queue to permit another token to be activated in its place.
            </summary>
            <param name="token">The token to modify.</param></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Unstall(Google.Maps.TileLoading.TilePriorityQueue.Token)">
            <summary>
            Moves a token from <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.TokenState.Stalled" /> state to the idle state, and calls
            ActivateMoreTokens on the priority queue to allow this, or another available token to
            become active.
            </summary>
            <remarks>
            If the supplied token is not in the stalled state, this method does nothing.</remarks>
            <param name="token">The token to modify.</param></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Stall(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Move any existing token for the supplied tile coordinates to the
            <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.TokenState.Stalled" /> state.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.Unstall(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            If a token exists for the supplied coordinates, move it from the
            <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.TokenState.Stalled" /> state to the <see cref="F:Google.Maps.TileLoading.TilePriorityQueue.TokenState.Idle" /> state.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TilePriorityQueue.IsActive(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Returns true if an active token exists for the supplied coordinates.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.TileParameters">
            <summary>Parameters for fetching a tile from Factile or cache.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileParameters.Coord">
            <summary>Tile coordinates.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileParameters.Options">
            <summary>Tile request options.</summary></member>
        <member name="M:Google.Maps.TileLoading.TileParameters.#ctor(Google.Maps.Coord.MercatorTileCoords,Google.Maps.TileLoading.TileRequestOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="coord">Tile coordinates.</param>
            <param name="options">Tile request options.</param></member>
        <member name="T:Google.Maps.TileLoading.TileRequestOptions">
            <summary>
            Tile request options.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileRequestOptions.EnableModeledVolumes">
            <summary>
            Whether to request "3D building meshes" from VectorTile.
            </summary>
            <remarks>
            When set to false, VectorTile will only return extruded areas (smaller tiles), which will
            result in the SDK creating <see cref="T:Google.Maps.Feature.ExtrudedStructure" />s instead of <see cref="T:Google.Maps.Feature.ModeledStructure" />s (reduced CPU/memory).
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.TileRequestOptions.EnablePoliticalFeatures">
            <summary>
            Whether to request political features from the server.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileRequestOptions.EnablePrivateRoads">
            <summary>Whether to request private roads from the server.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileRequestOptions.LanguageCode">
            <summary>The language to use when localizing.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileRequestOptions.RegionCode">
            <summary>The region code to use when localizing.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileRequestOptions.EnableTerrain">
            <summary>Whether to enable terrain.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileRequestOptions.ElevationResolution">
            <summary>
            The resolution for returned elevation height maps across the X and Z axes.
            Possible values: between 1 and 1024.
            </summary>
            <remarks>This field is unused if <see cref="F:Google.Maps.TileLoading.TileRequestOptions.EnableTerrain" /> is false.</remarks></member>
        <member name="F:Google.Maps.TileLoading.TileRequestOptions.AltitudePrecision">
            <summary>
            The vertical precision of terrain altitudes in meters. Possible values: between 0.01 (cm
            level precision) and 10000 (10-kilometer level precision).
            </summary>
            <remarks>This field is unused if <see cref="F:Google.Maps.TileLoading.TileRequestOptions.EnableTerrain" /> is false.</remarks></member>
        <member name="M:Google.Maps.TileLoading.TileRequestOptions.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Single,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="enableModeledVolumes">Whether to enable (<see cref="T:Google.Maps.Feature.ModeledStructure" />)s.
            When set to false, extruded structures (<see cref="T:Google.Maps.Feature.ExtrudedStructure" />) will be used
            instead, which may result in reduced network traffic and CPU/memory usage.
            </param>
            <param name="enablePoliticalFeatures">Whether to return political features such as
            prefectures, states, and localities.
            </param>
            <param name="enablePrivateRoads">Whether to return private roads.</param>
            <param name="enableTerrain">Whether to enable terrain.</param>
            <param name="elevationResolution">
            The resolution for returned elevation height maps across the X and Y axes.
            Possible values: between 1 and 1024.
            </param>
            <param name="altitudePrecision">
            The vertical precision of terrain altitudes in meters. Possible values: between 0.01 (cm
            level precision) and 10000 (10-kilometer level precision).
            </param>
            <param name="languageCode">The language to use when localizing.</param>
            <param name="regionCode">The region to use when localizing.</param></member>
        <member name="M:Google.Maps.TileLoading.TileRequestOptions.ToString">
            <inheritdoc /></member>
        <member name="T:Google.Maps.TileLoading.TileState">
            <summary>
            Represents the current state of a tile.
            </summary></member>
        <member name="P:Google.Maps.TileLoading.TileState.Coords">
            <summary>
            Coordinates of this tile.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.TileParameters">
            <summary>Parameters to use when fetching the tile from Factile or cache.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.GameObjectOptions">
            <summary>
            Options to use to build a GameObject for this tile after it's parsed.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.HasDestroyedGameObjects">
            <summary>
            If true, game objects belonging to this tile have been destroyed since the last time they
            were created by <see cref="T:Google.Maps.Unity.GameObjectLoader" />.
            </summary></member>
        <member name="P:Google.Maps.TileLoading.TileState.IsAtLeastPartiallyLoaded">
            <summary>
            True if this tile is being loaded, and has reached the point in the loading process where
            its GameObjects are being created. It may not be fully loaded yet.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.IsUsed">
            <summary>
            Whether this tile is currently in use. A tile is "in use" when it is first loaded, or when
            it is part of the Ideal or Render sets (see <see cref="T:Google.Maps.TileLoading.MixedZoom.QuadTree" />).
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.LastUsed">
            <summary>The last time this tile was used.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.TileManager">
            <summary>Tile manager that manages this tile.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.FeatureCache">
            <summary>Tile cache for loading feature tiles.</summary>
            <remarks>
            This also wraps the <see cref="T:Google.Maps.TileLoading.ProtoTileProducer" /> that loads feature tiles from the
            network.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.TileState.TerrainCache">
            <summary>Tile cache for loading terrain.</summary>
            <remarks>
            This also wraps the <see cref="T:Google.Maps.TileLoading.ProtoTileProducer" /> that loads terrain tiles from the
            network.
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.TileState.GameObjectLoader">
            <summary>GameObjectLoader that creates GameObjects from a <see cref="T:Google.Maps.Feature.MapTile" />.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.CoroutineStarter">
            <summary>
            The <see cref="T:Google.Maps.Util.ICoroutineStarter" /> that this instance will use to start coroutines.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.MapFeatureEvents">
            <summary>
            Container for <see cref="T:Google.Maps.Feature.MapFeature" />-related events fired by the SDK.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.Clock">
            <summary>
            Injectable clock for <see cref="F:Google.Maps.TileLoading.TileState.LastUsed" />.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.TileState.GameObjectLoadingStageEnum">
            <summary>
            State indicating progress through the tile geometry creation process.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.GameObjectLoadingStageEnum.None">
            <summary>
            No progress has been made.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.GameObjectLoadingStageEnum.GeometryLoaded">
            <summary>
            All Unity geometry has been generated to the referenced tile.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.GameObjectLoadingStageEnum.Done">
            <summary>
            Reification has completed including, if enabled, Terrain tile texture painting.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.Attribution">
            <summary>
            The attributions to provide for map tiles.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.TileState.ActionEnum">
            <summary>
            Enum representing whether the tile has been (or is being) loaded or unloaded.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.ActionEnum.None">
            <summary>Nothing happening. The tile starts in this state.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.ActionEnum.Load">
            <summary>Loading the tile.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.ActionEnum.Unload">
            <summary>Unloading the tile.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.Action">
            <summary>Current <see cref="T:Google.Maps.TileLoading.TileState.ActionEnum" />.</summary></member>
        <member name="T:Google.Maps.TileLoading.TileState.StateEnum">
            <summary>
            Enum representing the state of processing to move the tile towards <see cref="T:System.Action" />.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.StateEnum.Idle">
            <summary>
            Nothing happening. No coroutine is currently running, and the contents of the tile are
            in an indeterminate state.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.StateEnum.Run">
            <summary>
            A coroutine is doing work on the tile right now. That coroutine <i>should</i> correspond
            to the current <see cref="T:System.Action" />. If it doesn't, it's up to the coroutine to notice
            that and cancel itself, so that the tile can start a new coroutine that's doing the
            right thing.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.StateEnum.Done">
            <summary>
            The tile has successfully completed the work specified by <see cref="T:System.Action" />. No
            coroutine is currently running, and another one shouldn't be started unless
            <see cref="T:System.Action" /> changes.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.State">
            <summary>Current <see cref="T:Google.Maps.TileLoading.TileState.StateEnum" />.</summary></member>
        <member name="F:Google.Maps.TileLoading.TileState.PriorityToken">
            <summary>
            Token that marks this tile's position in
            <see cref="P:Google.Maps.TileLoading.TileManager.GameObjectQueue" />, if any.
            </summary>
            <remarks>
            This is stored as a field so that <see cref="M:Google.Maps.TileLoading.TileState.Disable" /> can release it, since Unity doesn't
            clean up coroutines on disable. (If it did, the finally clauses in <see cref="M:Google.Maps.TileLoading.TileState.DoLoad" /> and
            <see cref="M:Google.Maps.TileLoading.TileState.DoUnload" /> could take care of this.)
            </remarks></member>
        <member name="F:Google.Maps.TileLoading.TileState.Enabled">
            <summary>
            Is the TileState enabled?
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileState.Initialize(Google.Maps.Util.ICoroutineStarter,Google.Maps.Util.IClock,Google.Maps.Coord.MercatorTileCoords,Google.Maps.TileLoading.TileRequestOptions,Google.Maps.GameObjectOptions,Google.Maps.TileLoading.TileManager,Google.Maps.TileLoading.TileCache{Google.Maps.Feature.MapTile},Google.Maps.TileLoading.ITileCache{Google.Maps.Terrain.TerrainTile},Google.Maps.Unity.IGameObjectLoader,Google.Maps.Event.MapFeatureEvents,Google.Maps.Unity.Attribution.IAttribution)">
            <summary>
            Initializes a new TileState.
            </summary>
            <param name="coroutineStarter">Coroutine runner.</param>
            <param name="clock">Clock.</param>
            <param name="coords">The coordinates of the tile.</param>
            <param name="tileRequestOptions">
            Options to use when fetching the tile from Factile or cache.
            </param>
            <param name="options">Options to use when building the GameObject for this tile.</param>
            <param name="tileManager">Tile manager.</param>
            <param name="featureCache">Tile cache.</param>
            <param name="terrainCache"></param>
            <param name="gameObjectLoader">Game object loader.</param>
            <param name="mapFeatureEvents"><see cref="T:Google.Maps.Feature.MapFeature" /> events container.</param>
            <param name="attribution">Attribution.</param></member>
        <member name="M:Google.Maps.TileLoading.TileState.Load">
            <summary>Starts the process of loading the tile.</summary>
            <remarks>
            Calling this is idempotent and cheap if the tile is already loading or loaded.
            </remarks></member>
        <member name="M:Google.Maps.TileLoading.TileState.Unload">
            <summary>Starts the process of unloading the tile.</summary>
            <remarks>
            Calling this is idempotent and cheap if the tile is already unloading.
            </remarks></member>
        <member name="M:Google.Maps.TileLoading.TileState.IsUnloading">
            <summary>Returns whether this tile is being unloaded.</summary></member>
        <member name="M:Google.Maps.TileLoading.TileState.IsFullyLoaded">
            <summary>
            Returns whether this tile has been fully loaded, i.e. its GameObjects have been created.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileState.Run">
            <summary>
            Coroutine that runs for the lifetime of the tile, monitors <see cref="F:Google.Maps.TileLoading.TileState.State" /> and
            <see cref="T:System.Action" />, and runs either <see cref="M:Google.Maps.TileLoading.TileState.DoLoad" /> or <see cref="M:Google.Maps.TileLoading.TileState.DoUnload" /> as
            necessary. If the tile is successfully unloaded, this coroutine removes the TileState from
            <see cref="T:Google.Maps.TileLoading.TileManager" /> and then stops.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileState.DoLoad">
            <summary>Coroutine that loads the tile.</summary>
            <remarks>
            On completion, <see cref="F:Google.Maps.TileLoading.TileState.State" /> will be <see cref="F:Google.Maps.TileLoading.TileState.StateEnum.Done" /> if the tile was
            successfully loaded. If there was an error, <see cref="F:Google.Maps.TileLoading.TileState.State" /> will be set to
            <see cref="F:Google.Maps.TileLoading.TileState.StateEnum.Idle" /> and <see cref="T:System.Action" /> to <see cref="F:Google.Maps.TileLoading.TileState.ActionEnum.None" />.
            If something else changes <see cref="T:System.Action" /> to a value other than
            <see cref="F:Google.Maps.TileLoading.TileState.ActionEnum.Load" /> while the coroutine is running, it will cancel loading and
            set <see cref="F:Google.Maps.TileLoading.TileState.State" /> to <see cref="F:Google.Maps.TileLoading.TileState.StateEnum.Idle" />.
            </remarks></member>
        <member name="M:Google.Maps.TileLoading.TileState.DoUnload">
            <summary>Coroutine that unloads the tile.</summary>
            <remarks>
            On completion, <see cref="F:Google.Maps.TileLoading.TileState.State" /> will be <see cref="F:Google.Maps.TileLoading.TileState.StateEnum.Done" /> if the tile was
            successfully unloaded.
            If something else changes <see cref="T:System.Action" /> to a value other than
            <see cref="F:Google.Maps.TileLoading.TileState.ActionEnum.Unload" /> while the coroutine is running, it will cancel unloading
            and set <see cref="F:Google.Maps.TileLoading.TileState.State" /> to <see cref="F:Google.Maps.TileLoading.TileState.StateEnum.Idle" />.
            </remarks></member>
        <member name="M:Google.Maps.TileLoading.TileState.SetDirty">
            <summary>
            Marks the tile as having some of its GameObjects destroyed. The next call to
            <see cref="M:Google.Maps.TileLoading.TileState.Load" /> will try to recreate them.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileState.SetIsUsed(System.Boolean)">
            <summary>Sets whether this tile is in use.</summary>
            <param name="isUsed">Whether this tile is in use.</param></member>
        <member name="M:Google.Maps.TileLoading.TileState.HasBeenUsedSince(System.DateTime)">
            <summary>
            Returns whether the tile is in use, or has been since <paramref name="cutoff" />.
            </summary>
            <param name="cutoff">Cutoff time.</param></member>
        <member name="M:Google.Maps.TileLoading.TileState.Disable">
            <summary>
            When disabled, clean up as much as possible so that when any active coroutines are
            cancelled, everything is left in a stable state that can be resumed later.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.TileState.Enable">
            <summary>When enabled, start up the main <see cref="M:Google.Maps.TileLoading.TileState.Run" /> coroutine.</summary></member>
        <member name="T:Google.Maps.TileLoading.WorkQueue">
            <summary>
            Queue of tasks to be executed in a separate thread.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.WorkQueue.Result`1">
            <summary>
            Container for a result intended to be yielded by a Unity coroutine until it is populated in
            a separate thread, e.g. by <see cref="T:Google.Maps.TileLoading.WorkQueue" />.
            </summary></member>
        <member name="F:Google.Maps.TileLoading.WorkQueue.Result`1.Done">
            <summary>Incremented atomically while setting <see cref="F:Google.Maps.TileLoading.WorkQueue.Result{`0}.Value" />.</summary></member>
        <member name="F:Google.Maps.TileLoading.WorkQueue.Result`1.Lock">
            <summary>Lock guarding <see cref="F:Google.Maps.TileLoading.WorkQueue.Result{`0}.Value" />.</summary></member>
        <member name="F:Google.Maps.TileLoading.WorkQueue.Result`1.Value">
            <summary>The actual result.</summary></member>
        <member name="F:Google.Maps.TileLoading.WorkQueue.Result`1.Deadline">
            <summary>
            Absolute time to stop waiting for a result, or null to wait indefinitely.
            </summary></member>
        <member name="P:Google.Maps.TileLoading.WorkQueue.Result`1.TimedOut">
            <summary>
            True if <see cref="F:Google.Maps.TileLoading.WorkQueue.Result{`0}.Deadline" /> passed before this result was available.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.WorkQueue.Result`1.#ctor">
            <summary>Default constructor.</summary></member>
        <member name="M:Google.Maps.TileLoading.WorkQueue.Result`1.#ctor(System.Nullable{System.TimeSpan})">
            <summary>Constructor with timeout.</summary>
            <param name="timeout">Maximum amount of time to wait for this result.</param></member>
        <member name="P:Google.Maps.TileLoading.WorkQueue.Result`1.keepWaiting">
            <summary>
            Returns true while still waiting for an asynchronous response. Returns false when the
            response is ready and available to the main Unity thread.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.WorkQueue.Result`1.SetValue(`0)">
            <summary>
            Sets <see cref="F:Google.Maps.TileLoading.WorkQueue.Result{`0}.Value" /> and signals that the coroutine can resume.
            </summary></member>
        <member name="T:Google.Maps.TileLoading.WorkQueue.Delegate">
            <summary>Delegate type for work item to be done by this queue.</summary></member>
        <member name="F:Google.Maps.TileLoading.WorkQueue.QueueLock">
            <summary>Lock guarding <see cref="F:Google.Maps.TileLoading.WorkQueue.Queue" />.</summary></member>
        <member name="F:Google.Maps.TileLoading.WorkQueue.Queue">
            <summary>Queue of work items.</summary></member>
        <member name="F:Google.Maps.TileLoading.WorkQueue.PendingLock">
            <summary>Lock guarding <see cref="F:Google.Maps.TileLoading.WorkQueue.NumPending" />.</summary></member>
        <member name="F:Google.Maps.TileLoading.WorkQueue.NumPending">
            <summary>
            Number of work items remaining. This differs by one from <see cref="F:Google.Maps.TileLoading.WorkQueue.Queue" />.Count when a
            work item has been removed from the queue but hasn't finished executing.
            </summary></member>
        <member name="M:Google.Maps.TileLoading.WorkQueue.#ctor">
            <summary>Constructor. Starts the work thread immediately.</summary></member>
        <member name="M:Google.Maps.TileLoading.WorkQueue.Do(Google.Maps.TileLoading.WorkQueue.Delegate)">
            <summary>Adds the given work item to the queue.</summary></member>
        <member name="M:Google.Maps.TileLoading.WorkQueue.Run">
            <summary>Main loop to be executed on a separate thread.</summary></member>
        <member name="M:Google.Maps.TileLoading.WorkQueue.WaitUntilDone">
            <summary>Blocks until the work queue is empty.</summary></member>
        <member name="T:Google.Maps.TileRequestLogger">
            <summary>
            The tile request logger.
            </summary></member>
        <member name="M:Google.Maps.TileRequestLogger.LogSuccessfulTileRequest(System.TimeSpan)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileRequestLogger.LogLoadedTileFromDiskCache">
            <inheritdoc /></member>
        <member name="M:Google.Maps.TileRequestLogger.LogNetworkErrorWhenLoadingTileFromServer">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.Attribution.AttributionRenderer">
            <summary>
            Component for displaying map tile attribution text.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.GameObjectName">
            <summary>
            The name to use for GameObjects created by this script.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.ReferenceDPI">
            <summary>
            Reference DPI used for performing dp-to-px calculations. See
            https://developer.android.com/training/multiscreen/screendensities for more information.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.TextSize">
            <summary>
            The size of the text in density-independent pixels (dp).
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.OutlineSize">
            <summary>
            The size of the outline around the attribution text.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.Alpha">
            <summary>
            The alpha value to use for the text color. Overrides any user-provided values.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.AnchorOffset">
            <summary>
            The amount to offset the attribution text from the edges of the screen (as a percentage of
            the screen between 0 and 1)
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.Renderer">
            <summary>
            The active renderer.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.ReferenceCount">
            <summary>
            The number of references to the active <see cref="T:Google.Maps.Unity.Attribution.AttributionRenderer" />.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.AddReference">
            <summary>
            Adds a reference to the active <see cref="T:Google.Maps.Unity.Attribution.AttributionRenderer" /> and creates one if it
            does not already exist.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.RemoveReference">
            <summary>
            Removes a reference to the active <see cref="T:Google.Maps.Unity.Attribution.AttributionRenderer" /> and removes it if
            no references remain.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.IsQuittingOrDeleted">
            <summary>
            Whether the application is quitting or <see cref="M:Google.Maps.Unity.Attribution.AttributionRenderer.Delete" /> has been called.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.Canvas">
            <summary>
            The canvas that this GameObject belongs to.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.TextRenderer">
            <summary>
            The attribution text renderer.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.CanvasRenderer">
            <summary>
            The canvas renderer.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.Outline">
            <summary>
            The attribution text outline.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.Settings">
            <summary>
            Settings for generating the attribution text mesh.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.Scene">
            <summary>
            The scene this GameObject exists in.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionRenderer.ScaleFactor">
            <summary>
            The scale factor of <see cref="T:UnityEngine.Canvas" />.
            </summary>
            <remarks>
            This is stored so that we can check if the scale factor of <see cref="T:UnityEngine.Canvas" /> has changed
            without calling an internal Unity function each frame.
            </remarks></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.MakeAttributionGameObject">
            <summary>
            Creates the required GameObjects for <see cref="T:Google.Maps.Unity.Attribution.AttributionRenderer" />.
            </summary>
            <returns>The created <see cref="T:Google.Maps.Unity.Attribution.AttributionRenderer" />.</returns></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.LogWithoutStackTrace(UnityEngine.LogType,Google.Maps.Util.Debugging.LogCode.Code,System.String)">
            <summary>
            Logs an error to the console without a stack trace to hide the internal workings of this
            script.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.GetDefaultTextGenerationSettings(UnityEngine.Font)">
            <summary>
            Get the default <see cref="T:UnityEngine.TextGenerationSettings" /> used to generate the text mesh.
            </summary>
            <returns>The <see cref="T:UnityEngine.TextGenerationSettings" /> used to render the text mesh.</returns></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.ShouldRenderOnDevice">
            <summary>
            Returns true if the attribution text should be rendered.
            </summary>
            <returns>True if the attribution text should be rendered.</returns></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.GetDPI">
            <summary>
            Returns the current DPI of the device.
            </summary>
            <remarks>
            If <see cref="P:UnityEngine.Screen.dpi" /> returns 0, the device DPI can't be determined and
            <see cref="F:Google.Maps.Unity.Attribution.AttributionRenderer.ReferenceDPI" /> is returned as a fallback. See
            https://docs.unity3d.com/ScriptReference/Screen-dpi.html for more information.
            </remarks>
            <returns>The current DPI of the device.</returns></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.Start">
            <summary>
            Called before the first frame update.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.OnCanvasHierarchyChanged">
            <summary>
            Called when the canvas hierarchy changes and when the canvas is disabled.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.OnCanvasGroupChanged">
            <summary>
            Called when the canvas group changes;
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.OnWillRenderCanvases">
            <summary>
            Called immediately before canvases are rendered. Ensures that the attribution text is
            rendered with the appropriate settings.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.UpdateCanvasScale">
            <summary>
            Updates the scale factor of <see cref="T:UnityEngine.Canvas" /> to ensure that UI elements contained
            within it maintain a constant physical size.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.OnDisable">
            <summary>
            Called when this component is destroyed or disabled.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.OnApplicationQuit">
            <summary>
            Called when the application quits.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.AttributionRenderer.Delete">
            <summary>
            Deletes this renderer and associated GameObjects.
            </summary></member>
        <member name="T:Google.Maps.Unity.Attribution.Attribution">
            <summary>
            Keeps track of providers for map tiles and generates an attribution string for them.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attribution.TileAttributionInfo.Providers">
            <summary>
            The providers of this tile to give attribution to.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attribution.TileAttributionInfo.Visible">
            <summary>
            Whether attribution for this tile is visible.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.Attribution.TileAttributionInfo.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Constructor.
            </summary>
            <param name="providers">The providers of this tile.</param></member>
        <member name="F:Google.Maps.Unity.Attribution.Attribution.Changed">
            <summary>
            Called when the visible providers have changed.
            </summary></member>
        <member name="P:Google.Maps.Unity.Attribution.Attribution.IsActive">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Unity.Attribution.Attribution.EmptyStringArray">
            <summary>
            Returned by <see cref="M:Google.Maps.Unity.Attribution.Attribution.GetVisibleProviders" />. Reused to reduce garbage.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attribution.ProviderCounts">
            <summary>
            Keeps track of the number of loaded tiles for providers that are being rendered.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attribution.TileInfoMap">
            <summary>
            Keeps track of all loaded tiles. This includes tiles that are not currently being rendered.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attribution._IsActive">
            <summary>
            True if attribution should be shown for map tiles.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.Attribution.SetVisibleProvidersFromCoords(System.Collections.Generic.IList{Google.Maps.Coord.MercatorTileCoords})">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Attribution.Attribution.AddProviders(System.Collections.Generic.IList{System.String},Google.Maps.Coord.MercatorTileCoords)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Attribution.Attribution.RemoveProviders(Google.Maps.Coord.MercatorTileCoords)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Attribution.Attribution.GetVisibleProviders">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Attribution.Attribution.ShowAttribution(Google.Maps.Unity.Attribution.Attribution.TileAttributionInfo@,System.Boolean)">
            <summary>
            Show attribution for the given tile.
            </summary>
            <param name="attributionInfo">The tile attribution info.</param>
            <param name="update">Whether to update the attribution string.</param></member>
        <member name="M:Google.Maps.Unity.Attribution.Attribution.HideAttribution(Google.Maps.Unity.Attribution.Attribution.TileAttributionInfo@,System.Boolean)">
            <summary>
            Show attribution for the given tile.
            </summary>
            <param name="attributionInfo">The tile attribution info.</param>
            <param name="update">Whether to regenerate the attribution string.</param></member>
        <member name="T:Google.Maps.Unity.Attribution.Attributions">
            <summary>
            Aggregates attributions of multiple <see cref="T:Google.Maps.Unity.Attribution.IAttribution" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attributions.All">
            <summary>
            The game-wide instance of <see cref="T:Google.Maps.Unity.Attribution.Attributions" />.
            </summary></member>
        <member name="P:Google.Maps.Unity.Attribution.Attributions.Text">
            <summary>
            The attribution text.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attributions.Changed">
            <summary>
            Called when the visible providers have changed.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attributions.AttributionFormatStrings">
            <summary>
            Maps language codes to hardcoded translations of 'Map data Â©YEAR PROVIDERS'.
            </summary>
            <remarks>
            {0} = year placeholder; {1} = providers placeholder
            </remarks></member>
        <member name="F:Google.Maps.Unity.Attribution.Attributions.StringBuilder">
            <summary>
            Used for building the attribution string. Reused to reduce garbage.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attributions.SortedProviders">
            <summary>
            Used to aggregate and sort providers from multiple <see cref="T:Google.Maps.Unity.Attribution.Attribution" /> objects.
            Reused to reduce garbage.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attributions.Tracked">
            <summary>
            Used for generating the attribution string.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.Attributions.CultureInfoProvider">
            <summary>
            Used for getting the <see cref="T:System.Globalization.CultureInfo" /> of the target language.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.Attributions.TryBuildAttributionString(System.Globalization.CultureInfo,System.Collections.Generic.IEnumerable{Google.Maps.Unity.Attribution.Attribution},System.String,System.String@)">
            <summary>
            Builds an attribution string from the providers of multiple <see cref="T:Google.Maps.Unity.Attribution.Attribution" />
            objects.
            </summary>
            <param name="cultureInfo">The target language's <see cref="T:System.Globalization.CultureInfo" />.</param>
            <param name="attributions">The <see cref="T:Google.Maps.Unity.Attribution.Attribution" /> objects to aggregate.</param>
            <param name="previousString">
            The previous attribution string. No garbage will be generated if this is equal to
            <paramref name="nextString" />.
            </param>
            <param name="nextString">
            Set to the attribution string built from <paramref name="attributions" />.
            </param>
            <returns>
            Whether <paramref name="nextString" /> is different to <paramref name="previousString" />.
            </returns></member>
        <member name="M:Google.Maps.Unity.Attribution.Attributions.GetFormatString(System.Globalization.CultureInfo@)">
            <summary>
            Returns a localized attribution format string.
            </summary>
            <remarks>
            Format parameters {0} and {1} correspond to the copyright year and provider name list
            respectively.
            If the given <paramref name="cultureInfo" /> is not supported, it is reset to
            <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.
            </remarks>
            <returns>
            The localized attribution format string.
            </returns></member>
        <member name="M:Google.Maps.Unity.Attribution.Attributions.#ctor(Google.Maps.Util.Localization.ICultureInfoProvider)">
            <summary>
            Constructor.
            </summary>
            <param name="cultureInfoProvider">
            Provides an instance of <see cref="T:System.Globalization.CultureInfo" /> for the target language.
            </param></member>
        <member name="M:Google.Maps.Unity.Attribution.Attributions.CreateAndRegister">
            <summary>
            Returns a new instance of <see cref="T:Google.Maps.Unity.Attribution.IAttribution" />. Changes made to it are
            reflected in <see cref="P:Google.Maps.Unity.Attribution.Attributions.Text" />.
            </summary>
            <returns>
            The new <see cref="T:Google.Maps.Unity.Attribution.IAttribution" /> instance.
            </returns></member>
        <member name="M:Google.Maps.Unity.Attribution.Attributions.Unregister(Google.Maps.Unity.Attribution.IAttribution)">
            <summary>
            Unregisters an instance of <see cref="T:Google.Maps.Unity.Attribution.IAttribution" />.
            </summary>
            <param name="attribution">The <see cref="T:Google.Maps.Unity.Attribution.IAttribution" /> instance to unregister.</param></member>
        <member name="M:Google.Maps.Unity.Attribution.Attributions.OnChanged">
            <summary>
            Called when the visible providers have changed.
            </summary></member>
        <member name="T:Google.Maps.Unity.Attribution.AttributionStyle">
            <summary>
            Styling options for the attribution text. If an instance of this component does not exist
            in the scene, default settings are used instead.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionStyle.TextAnchor">
            <summary>
            Sets the anchor of the attribution text.
            </summary></member>
        <member name="F:Google.Maps.Unity.Attribution.AttributionStyle.TextColor">
            <summary>
            The color of the attribution text. The outline color is given by the inverse of the text
            color.
            </summary></member>
        <member name="T:Google.Maps.Unity.Attribution.FakeAttribution">
            <summary>
            Empty implementation of <see cref="T:Google.Maps.Unity.Attribution.IAttribution" /> used for tests and preview mode.
            </summary></member>
        <member name="P:Google.Maps.Unity.Attribution.FakeAttribution.IsActive">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Attribution.FakeAttribution.AddProviders(System.Collections.Generic.IList{System.String},Google.Maps.Coord.MercatorTileCoords)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Attribution.FakeAttribution.RemoveProviders(Google.Maps.Coord.MercatorTileCoords)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Attribution.FakeAttribution.SetVisibleProvidersFromCoords(System.Collections.Generic.IList{Google.Maps.Coord.MercatorTileCoords})">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.Attribution.IAttribution">
            <summary>
            Interface for providing attribution for map tiles.
            </summary></member>
        <member name="P:Google.Maps.Unity.Attribution.IAttribution.IsActive">
            <summary>
            True if attribution should be shown for map tiles.
            </summary></member>
        <member name="M:Google.Maps.Unity.Attribution.IAttribution.AddProviders(System.Collections.Generic.IList{System.String},Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Records and shows attribution for providers of the given tile coordinate.
            </summary>
            <param name="providers">The providers of the given tile coordinate.</param>
            <param name="mercatorTileCoords">The tile coordinate.</param></member>
        <member name="M:Google.Maps.Unity.Attribution.IAttribution.RemoveProviders(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Forgets and removes attribution for providers of the given tile coordinate.
            </summary>
            <param name="mercatorTileCoords">The tile coordinate.</param></member>
        <member name="M:Google.Maps.Unity.Attribution.IAttribution.SetVisibleProvidersFromCoords(System.Collections.Generic.IList{Google.Maps.Coord.MercatorTileCoords})">
            <summary>
            Shows attribution for the given coordinates, and hides all others.
            </summary>
            <param name="coords">The tile coordinates to show attribution for.</param></member>
        <member name="M:Google.Maps.Unity.Attribution.IAttribution.GetVisibleProviders">
            <summary>
            Returns the visible providers.
            </summary>
            <returns>The visible providers.</returns></member>
        <member name="T:Google.Maps.Unity.FinalizerRegister`1">
            <summary>
            Register that associates finalizers with objects. Clients can register finalizers against
            objects and invoke all registered finalizers for the specified objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.FinalizerRegister`1.Finalizers">
            <summary>
            Dictionary mapping objects to finalizers.
            </summary></member>
        <member name="M:Google.Maps.Unity.FinalizerRegister`1.InvokeFinalizers(`0)">
            <summary>
            Invoke the finalizers for the specified objects. Finalizers are unregistered after
            invocation.
            </summary>
            <param name="obj">The object whose finalizers should be invoked.</param></member>
        <member name="M:Google.Maps.Unity.FinalizerRegister`1.InvokeAllFinalizers">
            <summary>
            Invoke all registered finalizers. Finalizers are unregistered after invocation.
            </summary></member>
        <member name="M:Google.Maps.Unity.FinalizerRegister`1.RegisterFinalizer(`0,System.Action)">
            <summary>
            Register a finalizer against an object.
            </summary>
            <param name="obj">The object to register the finalizer against.</param>
            <param name="finalizer">The finalizer to register against the object.</param></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.GameObjectStyleApplicator">
            <summary>
            Applies <see cref="T:Google.Maps.GameObjectStyle" /> settings to <see cref="T:UnityEngine.GameObject" />s.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.GameObjectStyleApplicator.SetLayer(UnityEngine.GameObject,Google.Maps.GameObjectStyle)">
            <summary>
            Apply <see cref="T:Google.Maps.GameObjectStyle" /> to a <see cref="T:UnityEngine.GameObject" />.
            </summary>
            <param name="gameObject">
            <see cref="T:UnityEngine.GameObject" /> to apply <see cref="T:Google.Maps.GameObjectStyle" /> to.
            </param>
            <param name="style">
            <see cref="T:Google.Maps.GameObjectStyle" /> to apply to the <see cref="T:UnityEngine.GameObject" />.
            </param></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.IntersectionGameObjectFactory">
            <summary>
            Factory for creating GameObjects from <see cref="T:Google.Maps.Unity.Intersections.IntersectionFeature" />s.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.IntersectionGameObjectFactory.Events">
            <summary>
            Events to invoke during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.IntersectionGameObjectFactory.StaticBatcher">
            <summary>
            Handles the static batching of all created GameObjects marked as static.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.IntersectionGameObjectFactory.MetadataManager">
            <summary>
            Used to add metadata to game objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.IntersectionGameObjectFactory.IntersectionFactory">
            <summary>
            Used to generate intersection meshes.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.IntersectionGameObjectFactory.GameObjectStyleApplicator">
            <summary>
            Used to apply properties of <see cref="T:Google.Maps.GameObjectStyle" />s to <see cref="T:UnityEngine.GameObject" />s.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.IntersectionGameObjectFactory.#ctor(Google.Maps.Event.IntersectionEvents,Google.Maps.Unity.StaticBatcher,Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},Google.Maps.MetadataOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="events">IntersectionEvents to invoke during GameObject creation.</param>
            <param name="staticBatcher">Manages the batching of GameObjects marked as static.</param>
            <param name="renderOrderManager">
            The render order manager to use for game objects created by this factory.
            </param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="metadataOptions">Metadata options.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.IntersectionGameObjectFactory.CreateGameObject(Google.Maps.Unity.Intersections.IntersectionFeature,Google.Maps.Feature.Style.SegmentStyle,System.Boolean,UnityEngine.GameObject,UnityEngine.GameObject,Google.Maps.Unity.Intersections.RoadLattice)">
            <summary>
            Creates a <see cref="T:UnityEngine.GameObject" /> from an <see cref="T:Google.Maps.Unity.Intersections.IntersectionFeature" /> object.
            </summary>
            <param name="feature">The feature used for construction.</param>
            <param name="style">Style that supplies the road width used to build intersections.</param>
            <param name="globalStaticBatchEnabled">
            When true, will statically batch created GameObjects unless otherwise specified in the
            corresponding WillCreate event args.
            </param>
            <param name="root">Root <see cref="T:UnityEngine.GameObject" />.</param>
            <param name="parent">
            An object that is set as the parent of the created intersection
            <see cref="T:UnityEngine.GameObject" />s.
            </param>
            <param name="roadLattice">
            The road lattice of the map tile <paramref name="feature" /> belongs to.
            </param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.IntersectionGameObjectFactory.InsertArmsIntoRoadLattice(Google.Maps.Unity.Intersections.RoadLattice,Google.Maps.Unity.Intersections.RoadLatticeNode,System.Collections.Generic.IEnumerable{Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape},Google.Maps.Feature.Style.SegmentishStyle)">
            <summary>
            Inserts new nodes and edges in the given road lattice corresponding to the
            beginning of the each intersection arm.
            </summary>
            <remarks>
            Edges that begin at an arm and enter the intersection are flagged with
            <see cref="F:Google.Maps.Unity.Intersections.RoadLatticeEdge.Flags.Intersection" />.
            </remarks>
            <param name="roadLattice">The road lattice to modify.</param>
            <param name="root">The root node of the intersection.</param>
            <param name="armShapes">The arms to insert.</param>
            <param name="style">The intersection styling.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.IntersectionGameObjectFactory.InsertArmIntoRoadLattice(Google.Maps.Unity.Intersections.RoadLattice,Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,System.Single)">
            <summary>
            Inserts a new node and edges into the given road lattice corresponding to the
            beginning of the intersection arm.
            </summary>
            <remarks>
            The edge that begins at the arm and enters the intersection is flagged with
            <see cref="F:Google.Maps.Unity.Intersections.RoadLatticeEdge.Flags.Intersection" />. If a new node was inserted into the road
            lattice for this arm, the edge flagged is one of the outgoing edges from that node.
            </remarks>
            <param name="roadLattice">The road lattice to modify.</param>
            <param name="root">The root intersection node.</param>
            <param name="armNode">The arm node with an edge to <paramref name="root" />.</param>
            <param name="armLength">The length along the arm to insert an node at.</param></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.TerrainGameObjectFactory">
            <summary>
            Factory for creating Unity <see cref="T:UnityEngine.Terrain" /> tiles from
            <see cref="T:Google.Maps.Terrain.TerrainTile" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.TerrainGameObjectFactory.Events">
            <summary>
            Events to invoke during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.TerrainGameObjectFactory.AltitudeSeparation">
            <summary>
            The height of the terrain bounding box must be an integer multiple of this value. This
            causes most adjacent tiles to have the same terrain bounding box. Where adjacent tiles have
            significantly different bounding boxes, Unity's rounding can cause gaps between tiles even
            if they start matching altitudes at the boundary.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.TerrainGameObjectFactory.GameObjectManager">
            <summary>
            GameObject manager used to record state of loaded GameObjects.
            </summary>
            <remarks>
            This is used to stitch a generated <see cref="T:UnityEngine.Terrain" /> tile with its neighbors.
            </remarks></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.TerrainGameObjectFactory.GameObjectStyleApplicator">
            <summary>
            Used to apply properties of <see cref="T:Google.Maps.GameObjectStyle" />s to <see cref="T:UnityEngine.GameObject" />s.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.TerrainGameObjectFactory.#ctor(Google.Maps.Event.TerrainEvents,Google.Maps.Unity.GameObjectManager)">
            <summary>
            Constructor.
            </summary>
            <param name="events">
            <see cref="T:Google.Maps.Event.TerrainEvents" /> to invoke during <see cref="T:UnityEngine.GameObject" /> creation.
            </param>
            <param name="gameObjectManager">GameObject manager.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.TerrainGameObjectFactory.CreateGameObject(Google.Maps.Terrain.TerrainTile,Google.Maps.Coord.MercatorTileCoords,Google.Maps.Terrain.TerrainStyle@,UnityEngine.GameObject)">
            <summary>
            Creates a GameObject from the specified <see cref="T:Google.Maps.Terrain.TerrainTile" /> object.
            </summary>
            <param name="terrainTile">
            <see cref="T:Google.Maps.Terrain.TerrainTile" /> used for construction.
            </param>
            <param name="mercatorTileCoords">
            The <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> the <see cref="T:Google.Maps.Terrain.TerrainTile" /> belongs to.
            </param>
            <param name="terrainStyle">
            Style to apply to the generated <see cref="T:UnityEngine.GameObject" />.
            </param>
            <param name="parent">Parent of the generated GameObject.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.TerrainGameObjectFactory.GenerateTerrainData(Google.Maps.Terrain.TerrainTile,System.Single,System.Single,Google.Maps.Terrain.TerrainStyle,Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Generates <see cref="T:UnityEngine.TerrainData" /> from the specified terrain information component.
            </summary>
            <param name="terrainTile">
            <see cref="T:Google.Maps.Terrain.TerrainTile" /> used for construction of <see cref="T:UnityEngine.TerrainData" />.
            </param>
            <param name="altitudeLowerBound">
            The lower bound altitude values are normalized against.
            </param>
            <param name="altitudeUpperBound">
            The upper bound altitude values are normalized against.
            </param>
            <param name="terrainStyle">Style to apply to the generated <see cref="T:UnityEngine.GameObject" />.</param>
            <param name="mercatorTileCoords">
            The <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> the <see cref="T:Google.Maps.Terrain.TerrainTile" /> belongs to.
            </param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.TerrainGameObjectFactory.NormalizeAltitudes(System.Single[0:,0:],System.Single,System.Single)">
            <summary>
            Returns a 2D array representing a normalization of the specified altitudes against the range
            [lowerNormalizationBound, upperNormalizationBound].
            </summary>
            <param name="altitudes">The altitudes to normalize.</param>
            <param name="lowerNormalizationBound">
            The lower bound of the range of values altitudes are normalized against.
            </param>
            <param name="upperNormalizationBound">
            The upper bound of the range of values altitudes are normalized against.
            </param></member>
        <member name="T:Google.Maps.Unity.GameObjectLoader">
            <summary>
            Schedules creation and destruction of GameObjects.
            </summary>
            <remarks>
            Created GameObjects are parented to the GameObjectLoader's GameObject.
            </remarks></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.GlobalStaticBatchEnabled">
            <summary>
            When true, will statically batch created GameObjects unless otherwise specified in the
            corresponding WillCreate event args.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.RoadLatticeEnabled">
            <summary>
            When true, a global road lattice will be maintained merging individual road lattices
            generated for each loaded tile.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.IntersectionsEnabled">
            <summary>
            Whether extra geometry will be generated to display road intersections.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.TerrainEnabled">
            <summary>
            Whether geometry will be generated to represent terrain.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.GameObjectFactories">
            <summary>
            GameObject factories.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.Events">
            <summary>
            Events fired by the SDK.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.RootMonoBehaviour">
            <summary>
            The <see cref="T:UnityEngine.MonoBehaviour" /> that this instance belongs to. Will be used, for example,
            to start coroutines.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.GameObjectManager">
            <summary>
            GameObject manager.
            </summary>
            <remarks>
            Keeps track of destroyed and suppressed <see cref="T:UnityEngine.GameObject" />s.
            </remarks></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.TerrainPaintingManager">
            <summary>
            Terrain painting manager.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.StaticBatcher">
            <summary>
            Handles the static batching of all created GameObjects marked as static.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.RoadLatticeManager">
            <summary>
            Road lattice manager.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.ActiveTiles">
            <summary>
            The coordinates of active tiles.
            </summary>
            <remarks>
            A tile's active state corresponds to the active state of its GameObjects. When a tile
            is set active, its <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" /> is merged into the global road lattice,
            and unmerged when set inactive.
            A loaded tile may be either active or inactive.
            </remarks></member>
        <member name="F:Google.Maps.Unity.GameObjectLoader.IsSetActiveTilesInUse">
            <summary>
            This is set to true when <see cref="M:Google.Maps.Unity.GameObjectLoader.SetActiveTiles(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords})" /> is called, which is used with mixed
            zoom. It is used to determine whether to only load road lattices of map tiles with
            coordinates contained in <see cref="F:Google.Maps.Unity.GameObjectLoader.ActiveTiles" />, and to determine whether buildings
            should be revealed at the end of <see cref="M:Google.Maps.Unity.GameObjectLoader.GameObjectCreatorEnumeratorForTile(Google.Maps.Feature.MapTile,Google.Maps.Terrain.TerrainTile,Google.Maps.GameObjectOptions,Google.Maps.Util.ValueWrapper{System.Action})" />.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.Initialize(UnityEngine.MonoBehaviour,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Google.Maps.Event.Events,Google.Maps.Coord.Projection,Google.Maps.Unity.GameObjectManager,Google.Maps.Unity.Intersections.RoadLatticeManager,Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},Google.Maps.MetadataOptions,Google.Maps.TileLoading.TileManager)">
            <summary>
            Initializes the GameObjectLoader.
            </summary>
            <param name="rootMonoBehaviour">
            The root <see cref="F:Google.Maps.Unity.GameObjectLoader.RootMonoBehaviour" /> that this instance belongs to.
            </param>
            <param name="globalStaticBatchEnabled">
            When true, will statically batch created GameObjects unless otherwise specified in the
            corresponding WillCreate event args.
            </param>
            <param name="intersectionsEnabled">
            When true, geometry will be generated to display intersections.
            </param>
            <param name="roadLatticeEnabled">
            When true, a global road lattice will be maintained from loaded features.
            </param>
            <param name="terrainEnabled">
            When true, geometry will be generated to display terrain.
            </param>
            <param name="mercatorTilesEnabled">
            When true, game objects will be generated for Mercator tiles.
            </param>
            <param name="use32BitMeshIndexBuffers">
            Whether to use 32-bit index buffers when creating a mesh (i.e. support more than 65536
            vertices).
            </param>
            <param name="events">Events.</param>
            <param name="projection">Game world coordinate system.</param>
            <param name="gameObjectManager">The GameObjectManager.</param>
            <param name="roadLatticeManager">The road lattice manager.</param>
            <param name="renderOrderManager">
            Render order manager to pass down to game object factories.
            </param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="metadataOptions">Metadata options.</param>
            <param name="tileManager"></param></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.Destroy">
            <summary>
            Clean up any resources created by thie class.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.SpreadCreateGameObjectsForTile(Google.Maps.Feature.MapTile,Google.Maps.Terrain.TerrainTile,Google.Maps.GameObjectOptions,Google.Maps.Util.CoroutineResult{System.Exception})">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.SetActiveTiles(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords})">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.SpreadDestroyGameObjectsForTile(Google.Maps.Coord.MercatorTileCoords,Google.Maps.Util.CoroutineResult{System.Boolean})">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.PaintTerrainTile(Google.Maps.Terrain.TerrainTile,UnityEngine.Terrain,Google.Maps.Terrain.TerrainStyle,Google.Maps.Util.ValueWrapper{System.Action})">
            <summary>
            Paint an existing <see cref="T:UnityEngine.Terrain" /> that was created for a terrain tile.
            </summary>
            <param name="terrainTile">
            <see cref="T:Google.Maps.Terrain.TerrainTile" /> that the <see cref="T:UnityEngine.Terrain" /> was created for.
            </param>
            <param name="unityTerrain"><see cref="T:UnityEngine.Terrain" /> to paint.</param>
            <param name="terrainStyle">Terrain style settings.</param>
            <param name="tileLoadFinalizer">Tile load finalizer.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.CreateTerrainGameObject(Google.Maps.Terrain.TerrainTile,Google.Maps.Terrain.TerrainStyle@)">
            <summary>
            Create an unpainted terrain <see cref="T:UnityEngine.GameObject" /> with attached
            <see cref="T:UnityEngine.TerrainData" /> including heights and connectivity.
            </summary>
            <param name="terrainTile">Terrain tile to create <see cref="T:UnityEngine.GameObject" /> for.</param>
            <param name="terrainStyle">Terrain style settings.</param>
            <returns>New <see cref="T:UnityEngine.GameObject" /> for terrain tile.</returns></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.CalculateExtrudedStructureTerrainAdjustments(UnityEngine.Terrain,Google.Maps.Feature.ExtrudedStructure,UnityEngine.Vector3@,System.Single@)">
            <summary>
            Calculate a positional offset and minimum base height for an extruded structure that will
            help it to sit better on the terrain.
            </summary>
            <param name="unityTerrain">Terrain tile on which the extruded structure sits.</param>
            <param name="extrudedStructure">Extruded structure to calculate adjustments for.</param>
            <param name="offset">Positional offset to apply to structure on creation.</param>
            <param name="minBaseHeight">Minimum base height to apply to structure on creation.</param>
            <remarks>
            The base of an <see cref="T:Google.Maps.Feature.ExtrudedStructure" /> is the shortest extrusion at the
            bottom-most part of the structure. In buildings with a single extrusion, the base of the
            extrusion is the entire object.
            </remarks></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.CalculateModeledStructureTerrainOffset(UnityEngine.Terrain,Google.Maps.Feature.ModeledStructure)">
            <summary>
            Calculate a positional offset for a modeled structure that will help it to sit better
            on the terrain.
            </summary>
            <param name="unityTerrain">Terrain tile on which the modeled structure sits.</param>
            <param name="modeledStructure">Modeled structured to calculate offset for.</param>
            <returns>Positional offset to apply to modeled structure on creation.</returns></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.GameObjectCreatorEnumeratorForTile(Google.Maps.Feature.MapTile,Google.Maps.Terrain.TerrainTile,Google.Maps.GameObjectOptions,Google.Maps.Util.ValueWrapper{System.Action})">
            <summary>
            Creates the next GameObject for the given tile, then yields.
            </summary>
            <param name="mapTile">MapTile to process.</param>
            <param name="terrainTile">TerrainTile to process.</param>
            <param name="options">GameObjectOptions.</param>
            <param name="tileLoadFinalizer">
            Finalizer that will be called when tile load is finished or will be aborted.
            </param></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.DependenciesFulfilled(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Returns true if all neighbouring tiles of the the tile referenced by coord have reached
            <see cref="F:Google.Maps.TileLoading.TileState.GameObjectLoadingStageEnum.GeometryLoaded" /> stage.
            </summary>
            <param name="coords">Coordinates of tile for which dependencies are tested</param>
            <returns>If dependencies are satisfied</returns></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.ShouldCreateGameObjectForFeature(Google.Maps.Feature.MapFeature,Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Whether to create a new <see cref="T:UnityEngine.GameObject" /> for the given <see cref="T:Google.Maps.Feature.MapFeature" />
            for the given tileCoord.
            </summary>
            <remarks>
            A <see cref="T:Google.Maps.Feature.MapFeature" /> loaded from an uncached tile will always have a single
            <see cref="T:Google.Maps.Coord.MercatorTileCoords" />, but if loaded from cache it may come pre-stitched, so we
            need to supply the <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> that we are loading.
            </remarks>
            <param name="mapFeature">The MapFeature to test.</param>
            <param name="mercatorTileCoords">
            The coordinates of the tile from which we are loading.
            </param></member>
        <member name="M:Google.Maps.Unity.GameObjectLoader.ShouldCreateGameObjectForPlaceId(System.String,Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Whether to create a new <see cref="T:UnityEngine.GameObject" /> for the given place ID
            for the given <see cref="T:Google.Maps.Coord.MercatorTileCoords" />.
            </summary>
            <remarks>
            A <see cref="T:Google.Maps.Feature.MapFeature" /> loaded from an uncached tile will always have a single
            <see cref="T:Google.Maps.Coord.MercatorTileCoords" />, but if loaded from cache it may come pre-stitched, so we
            need to supply the <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> that we are loading.
            </remarks>
            <param name="placeId">The place ID to test.</param>
            <param name="mercatorTileCoords">
            The coordinates of the tile from which we are loading.
            </param></member>
        <member name="T:Google.Maps.Unity.IGameObjectLoader">
            <summary>
            Interface for classes that schedule creation and destruction of GameObjects.
            </summary></member>
        <member name="M:Google.Maps.Unity.IGameObjectLoader.SetActiveTiles(System.Collections.Generic.IEnumerable{Google.Maps.Coord.MercatorTileCoords})">
            <summary>
            Activates the given tiles and deactivates all other tiles.
            </summary>
            <param name="activateCoords">The coordinates of the tiles to activate.</param></member>
        <member name="M:Google.Maps.Unity.IGameObjectLoader.SpreadCreateGameObjectsForTile(Google.Maps.Feature.MapTile,Google.Maps.Terrain.TerrainTile,Google.Maps.GameObjectOptions,Google.Maps.Util.CoroutineResult{System.Exception})">
            <summary>
            Creates GameObjects for all of the MapFeatures on a tile, spreading load across frames.
            Parents should generally be created before children, as GameObjects are destroyed in
            reverse order of creation.
            </summary>
            <param name="mapTile">Map tile.</param>
            <param name="terrainTile">Terrain information.</param>
            <param name="options">Options to load with.</param>
            <param name="result">Result of the coroutine. result.Value is null on success.</param></member>
        <member name="M:Google.Maps.Unity.IGameObjectLoader.SpreadDestroyGameObjectsForTile(Google.Maps.Coord.MercatorTileCoords,Google.Maps.Util.CoroutineResult{System.Boolean})">
            <summary>
            Destroys all GameObjects for a tile, spreading load across frames. GameObjects are
            destroyed in reverse order of creation.
            </summary>
            <param name="coords">Tile coordinate.</param>
            <param name="result">
            Result of the coroutine. This is just to allow cancellation; result.Value is ignored.
            </param></member>
        <member name="T:Google.Maps.Unity.IGameObjectManager">
            <summary>
            Interface for <see cref="T:Google.Maps.Unity.GameObjectManager" />, for injecting fakes in tests.
            </summary>
            <remarks>
            Add methods from <see cref="T:Google.Maps.Unity.GameObjectManager" /> to this interface as needed for tests.
            </remarks></member>
        <member name="M:Google.Maps.Unity.IGameObjectManager.SetObjectsActive(Google.Maps.Coord.MercatorTileCoords,System.Boolean)">
            <summary>
            Sets the active state of GameObjects corresponding to the given tile.
            </summary>
            <param name="activateCoords">The coordinate of tile to activate.</param>
            <param name="state">The new active state of the GameObjects.</param></member>
        <member name="T:Google.Maps.Unity.IMapFeatureComponent`1">
            <summary>
            Component storing information about the map feature used to create
            a game object.
            </summary></member>
        <member name="P:Google.Maps.Unity.IMapFeatureComponent`1.MapFeature">
            <summary>
            The map feature used to create this game object.
            </summary></member>
        <member name="T:Google.Maps.Unity.HotLoadableMonoBehaviour">
            <summary>MonoBehaviour designed to be hot loaded.</summary></member>
        <member name="F:Google.Maps.Unity.HotLoadableMonoBehaviour.UnityPlatformProvider">
            <summary>
            <see cref="T:Google.Maps.Unity.IUnityPlatformProvider" /> instance.
            </summary></member>
        <member name="F:Google.Maps.Unity.HotLoadableMonoBehaviour.Initialized">
            <summary>
            Has the class been initialized?
            </summary></member>
        <member name="F:Google.Maps.Unity.HotLoadableMonoBehaviour.BeforeAssemblyReloadHook">
            <summary>
            Mechanism for hooking assembly reload.
            </summary></member>
        <member name="F:Google.Maps.Unity.HotLoadableMonoBehaviour.CoroutineStarterListeners">
            <summary>
            Listeners for <see cref="T:Google.Maps.Util.ICoroutineStarter" /> events.
            </summary></member>
        <member name="F:Google.Maps.Unity.HotLoadableMonoBehaviour.CanStartCoroutines">
            <summary>
            Whether it's safe to call <see cref="M:Google.Maps.Unity.HotLoadableMonoBehaviour.StartCoroutine(System.Collections.IEnumerator)" />.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.#ctor">
            <summary>
            Internal constructor to prevent this class from being inherited from outside the assembly.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.SimulateOnEnable">
            <summary>
            Simulate the Unity *OnEnable* event.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.SimulateOnDisable">
            <summary>
            Simulate the Unity *OnDisable* event.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.SimulateAssemblyReload">
            <summary>
            Simulate the Unity *AssemblyReloadEvents.beforeAssemblyReload* event.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Update">
            <summary>
            Handle Unity's *Update* event.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.TriggerCoroutineStartupHandlers">
            <summary>
            Trigger <see cref="M:Google.Maps.ICoroutineStarterListener.OnCoroutineStartup(Google.Maps.Util.ICoroutineStarter)" /> for all added listeners.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.TriggerCoroutineShutdownHandlers">
            <summary>
            Trigger <see cref="M:Google.Maps.ICoroutineStarterListener.OnCoroutineShutdown(Google.Maps.Util.ICoroutineStarter)" /> for all added
            listeners.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.TryStartup">
            <summary>
            Try to start component. If <see cref="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Startup" /> throws an exception startup will be
            cancelled.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.BeforeAssemblyReloadHookCount">
            <summary>
            Count of the number of assembly reload hooks registered with Unity. Used for testing of
            hook cleanup.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.OnEnable">
            <summary>
            Handle Unity OnEnable event.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.OnDisable">
            <summary>
            Handle Unity OnDisable event.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.OnDestroy">
            <summary>
            Handle Unity OnDestroy event.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.EnsureHooksInstalled">
            <summary>
            Install any necessary hooks. Has no effect if hooks have already been installed.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.EnsureHooksUninstalled">
            <summary>
            Uninstall any registered hooks. Has no effect if hooks are not installed.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.TryShutdown">
            <summary>
            Try component shutdown. If <see cref="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Shutdown" /> throws an exception shutdown will be
            cancelled.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.TryShutdownAux(System.Boolean)">
            <summary>
            Try component shutdown. If <see cref="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Shutdown" /> throws an exception shutdown will be
            cancelled.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.OnApplicationPause(System.Boolean)">
            <summary>
            Handle Unity application pause/resume events.
            </summary>
            <param name="pauseStatus">
            True if the application is pausing, false if it is resuming.
            </param></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.OnApplicationQuit">
            <summary>
            Handle Unity application quit events.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Startup">
            <summary>
            Override with startup logic. This is called after Unity has deserialized all the
            serializable attributes and before <see cref="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Enable" /> is called.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Shutdown">
            <summary>
            Override with shutdown logic. This is called when the object is going to be disposed of,
            e.g. because it is being destroyed, because the assembly is about to be reloaded, etc.
            Finalization logic should be placed here.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Enable">
            <summary>
            Override with enable logic.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Disable">
            <summary>
            Override with disable logic.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Destroy">
            <summary>
            Override with destruction logic. This is not meant to containing finalization code, as
            it won't be called if the object is disabled. Finalization code should be placed into
            <see cref="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Shutdown" />.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.FrameUpdate">
            <summary>
            Override with update logic. Won't run until initialization succeeds.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.MobilePause">
            <summary>
            Override with logic to be triggered when the application is paused on mobile platforms.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.MobileUnpause">
            <summary>
            Override with logic to be triggered when the application is unpaused on mobile platforms.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.MobileQuit">
            <summary>
            Override with logic to be triggered when the application quits on mobile platforms.
            </summary></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.StartCoroutine(System.Collections.IEnumerator)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Google#Maps#Util#ICoroutineStarter#AddCoroutineStarterListener(Google.Maps.ICoroutineStarterListener)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.HotLoadableMonoBehaviour.Google#Maps#Util#ICoroutineStarter#RemoveCoroutineStarterListener(Google.Maps.ICoroutineStarterListener)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.Intersections.Intersection">
            <summary>
            A representation of a road intersection that can have multiple in/outgoing roads.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.Intersection.Arms">
            <summary>
            The intersection arms.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.Intersection.Root">
            <summary>
            The root node of the intersection.
            </summary>
            <remarks>
            The neighbors of this node given by <see cref="P:Google.Maps.Unity.Intersections.RoadLatticeNode.Neighbors" /> represent
            the roads connected to this intersection. For example, three neighbors may indicate a
            T-intersection.
            </remarks></member>
        <member name="M:Google.Maps.Unity.Intersections.Intersection.FromRootNode(Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Constructs an intersection shape from the given root node.
            </summary>
            <param name="root">The root node of the intersection.</param>
            <returns>The intersection feature created from the given node.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.Intersection.GenerateLine(System.Collections.Generic.List{UnityEngine.Vector3},Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,System.Single,Google.Maps.Unity.Intersections.RoadLatticeNode@,Google.Maps.Unity.Intersections.RoadLatticeNode@)">
            <summary>
            Generates a polyline by following the edges of the road lattice. Starting from startNode,
            a vertex at the location of that node is appended to the polyline. The same is repeated for
            neighborNode and then for its unvisited neighbor and so on until an intersection (a node
            with more than two neighbors) is found or the maximum length is reached.
            These polylines represent the centrelines of entire roads, and their extrusions are used to
            find line intersections between outgoing roads of road intersections.
            </summary>
            <param name="line">The line to which to append vertices.</param>
            <param name="startNode">
            The node to start generating vertices from. All line vertices are relative to the position
            of this node.
            </param>
            <param name="neighborNode">
            The next node to generate a vertex after the start node. This node is assumed to share an
            edge with the start node.
            </param>
            <param name="maxLength">The maximum length of the line to be generated.</param>
            <param name="otherIntersection">
            If another intersection is detected while generating the line, this is set to the node of
            that intersection.
            </param>
            <param name="armLoopNode">
            If the line generated loops back to <paramref name="startNode" />, this is set to the node
            traversed immediately before looping back.
            </param>
            <returns>The length of the line generated.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.Intersection.TranslateGeometry(UnityEngine.Vector2)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Intersections.Intersection.CalculateLocalBoundingBox">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Intersections.Intersection.#ctor(Google.Maps.Unity.Intersections.RoadLatticeNode,System.Collections.Generic.IEnumerable{Google.Maps.Unity.Intersections.IntersectionArm})">
            <summary>
            Constructor.
            </summary>
            <param name="root">The root node of the intersection.</param>
            <param name="arms">The arms of the intersection.</param></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.GameObjectFactories">
            <summary>
            Container for <see cref="T:Google.Maps.Unity.GameObjectFactory.IGameObjectFactory" /> instances.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.GameObjectFactories.AreaWater">
            <summary>
            A factory for generating Unity GameObjects from an AreaWater.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.GameObjectFactories.ExtrudedStructure">
            <summary>
            A factory for generating Unity GameObjects from an ExtrudedStructure.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.GameObjectFactories.LineWater">
            <summary>
            A factory for generating Unity GameObjects from a LineWater.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.GameObjectFactories.ModeledStructure">
            <summary>
            A factory for generating Unity GameObjects from a ModeledStructure.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.GameObjectFactories.Region">
            <summary>
            A factory for generating Unity GameObjects from a Region.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.GameObjectFactories.Segment">
            <summary>
            A factory for generating Unity GameObjects from a Segment.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.GameObjectFactories.Intersection">
            <summary>
            A factory for generating unity GameObjects from an Intersection.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.GameObjectFactories.Terrain">
            <summary>
            A factory for generating Unity GameObjects for Terrain.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.GameObjectFactories.#ctor(Google.Maps.Event.Events,Google.Maps.Unity.StaticBatcher,Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},Google.Maps.MetadataOptions,Google.Maps.Unity.GameObjectManager,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="events">Events.</param>
            <param name="staticBatcher">Manages the batching of GameObjects marked as static.</param>
            <param name="renderOrderManager">
            The render order manager to use for game objects created by this factory.
            </param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="metadataOptions">Metadata options.</param>
            <param name="gameObjectManager">GameObject manager.</param>
            <param name="use32BitMeshIndexBuffers">
            Whether to use 32-bit index buffers when creating a mesh (i.e. support more than 65536
            vertices).
            </param></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.LineWaterGameObjectFactory">
            <summary>
            Factory for creating GameObjects from <see cref="T:Google.Maps.Feature.LineWater" />s.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.LineWaterGameObjectFactory.LineGroupFactory">
            <summary>
            Generates a Unity Mesh during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.LineWaterGameObjectFactory.Events">
            <summary>
            Events to invoke during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.LineWaterGameObjectFactory.StaticBatcher">
            <summary>
            Handles the static batching of all created GameObjects marked as static.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.LineWaterGameObjectFactory.MetadataManager">
            <summary>
            Used to add metadata to game objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.LineWaterGameObjectFactory.GameObjectStyleApplicator">
            <summary>
            Used to apply properties of <see cref="T:Google.Maps.GameObjectStyle" />s to <see cref="T:UnityEngine.GameObject" />s.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.LineWaterGameObjectFactory.#ctor(Google.Maps.Event.LineWaterEvents,Google.Maps.Unity.StaticBatcher,Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},Google.Maps.MetadataOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="events"><see cref="T:Google.Maps.Event.Events" /> to invoke during GameObject
            creation.</param>
            <param name="staticBatcher">Manages the batching of GameObjects marked as static.</param>
            <param name="renderOrderManager">
            The render order manager to use for game objects created by this factory.
            </param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="metadataOptions">Metadata options.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.LineWaterGameObjectFactory.CreateGameObject(Google.Maps.Feature.LineWater,Google.Maps.Feature.Style.LineWaterStyle,System.Boolean,UnityEngine.GameObject,UnityEngine.GameObject)">
            <summary>
            Attempts to create a Unity GameObject from the specified MapFeature and Style objects.
            </summary>
            <remarks>
            Returns null if GameObject creation was cancelled by a WillCreate event handler, or if the
            Line within the provided LineWater contains invalid geometry, preventing object creation.
            </remarks>
            <param name="lineWater"><see cref="T:Google.Maps.Feature.LineWater" /> used for construction.</param>
            <param name="style">Style to apply to the generated GameObject.</param>
            <param name="globalStaticBatchEnabled">When true, will statically batch created GameObjects
            unless otherwise specified in the corresponding WillCreate event args.</param>
            <param name="root">Root <see cref="T:UnityEngine.GameObject" />.</param>
            <param name="parent">Parent of the generated <see cref="T:UnityEngine.GameObject" />.</param></member>
        <member name="T:Google.Maps.Unity.GameObjectManager">
            <summary>
            The GameObject manager, which tracks destroyed <see cref="T:UnityEngine.GameObject" />s.
            </summary>
            <remarks>
            If you destroy a GameObject (for example, to reclaim memory for distant
            objects), then you should call <see cref="M:Google.Maps.Unity.GameObjectManager.DidDestroy(UnityEngine.GameObject)" /> so
            the SDK will create a new GameObject the next time you load that area of
            the map. Similarly, you should call <see cref="M:Google.Maps.Unity.GameObjectManager.DidDestroyAll" /> when you
            unload the entire scene.
            </remarks></member>
        <member name="F:Google.Maps.Unity.GameObjectManager.Loaded">
            <summary>
            For each <see cref="T:Google.Maps.Coord.MercatorTileCoords" />, a collection of <see cref="T:Google.Maps.Feature.MapFeature" />s that
            have been loaded, represented as a mapping from place IDs to their corresponding
            <see cref="T:UnityEngine.GameObject" />s.
            </summary>
            <remarks>
            Keys of the inner Dictionary are Place IDs, and <see cref="T:UnityEngine.GameObject" />s are stored
            in the order in which they were created. Objects will be destroyed in reverse order of
            creation (so that, e.g., parents can be guaranteed to be destroyed after their children).
            Stitched features can exist in the inner Dictionary for multiple
            <see cref="T:Google.Maps.Coord.MercatorTileCoords" />s.
            </remarks></member>
        <member name="T:Google.Maps.Unity.GameObjectManager.GameObjectInfo">
            <summary>
            Information about a <see cref="T:UnityEngine.GameObject" /> that was created for a map feature.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectManager.GameObjectInfo.MercatorTileCoords">
            <summary>
            Coordinate of the tile for which this game object was created.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectManager.GameObjectInfo.PlaceId">
            <summary>
            Place ID of the feature for which this game object was created.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectManager.GameObjectInfoMap">
            <summary>
            Map from <see cref="T:UnityEngine.GameObject" />s to <see cref="T:Google.Maps.Unity.GameObjectManager.GameObjectInfo" />s.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectManager.TerrainState">
            <summary>
            Maintains the state of the terrain objects that have been loaded.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectManager.TileManager">
            <summary>
            Tile manager.
            </summary>
            <remarks>
            Used to mark tiles as dirty when objects are deleted.
            </remarks></member>
        <member name="F:Google.Maps.Unity.GameObjectManager.FinalizerRegister">
            <summary>
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectManager.GameObjectCounter">
            <summary>
            The number of GameObjects currently alive.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.Initialize(Google.Maps.TileLoading.TileManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject})">
            <summary>
            Constructor.
            </summary>
            <param name="tileManager">Tile manager.</param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.IsFeatureLoadedFromTile(System.String,Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Whether the <see cref="T:Google.Maps.Unity.GameObjectManager" /> has recorded the loading of a feature with the
            supplied Place ID from a tile with the supplied <see cref="T:Google.Maps.Coord.MercatorTileCoords" />
            </summary>
            <remarks>
            Due to feature chunking a given Place ID may occur on multiple feature chunks in adjoining
            tiles, but each Place ID will only occur at most once on any given tile. This method tests
            the loaded state of a given chunk by accepting a Place ID and a TileCoord.
            </remarks>
            <param name="placeId">Place ID.</param>
            <param name="mercatorTileCoords">Tile coordinates to test.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.DidLoad(Google.Maps.Coord.MercatorTileCoords,System.String,UnityEngine.GameObject)">
            <summary>
            Records that a <see cref="T:UnityEngine.GameObject" /> was created for the supplied PlaceId and TileCoord.
            </summary>
            <param name="mercatorTileCoords">
            The coordinate of the tile that this game object was created for.
            </param>
            <param name="placeId">
            The place ID of the feature that this game object was created for.
            </param>
            <param name="gameObject">The game object that was created.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.DidDestroy(Google.Maps.Coord.MercatorTileCoords,System.String)">
            <summary>
            Remove the mapping from tile and place ID to game object and mark the tile as dirty.
            </summary>
            <param name="mercatorTileCoords">Coordinate of the tile the feature belongs to.</param>
            <param name="placeId">Place ID of the feature.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.DidDestroy(UnityEngine.GameObject)">
            <summary>
            Notifies the SDK that a <see cref="T:UnityEngine.GameObject" /> was destroyed, or that
            a GameObject is scheduled to be destroyed at the end of the current
            Update loop.
            </summary>
            <remarks>
            The SDK doesn't actually destroy the GameObject. You can do that via
            %Unity's API
            (<see cref="M:UnityEngine.Object.Destroy(UnityEngine.Object)" />). After
            you call the `DidDestroy` method, the next call to
            <see cref="M:Google.Maps.MapsService.LoadMap(UnityEngine.Bounds,Google.Maps.GameObjectOptions)" /> generates a new
            <see cref="T:UnityEngine.GameObject" />.
            </remarks>
            <param name="gameObject">A GameObject.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.GameObjectsForTile(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Returns the collection of <see cref="T:UnityEngine.GameObject" />s created for a tile, indexed by place ID;
            or null if the tile is not loaded.
            </summary>
            <param name="mercatorTileCoords">Coordinates of the tile.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.GameObjectForPlaceId(System.String,Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Returns the <see cref="T:UnityEngine.GameObject" /> that was created for a given place ID and tile
            coordinate, if one has been created. Otherwise, return null.
            </summary>
            <param name="placeId">The place ID.</param>
            <param name="mercatorTileCoords">The tile coordinate.</param>
            <returns>
            The <see cref="T:UnityEngine.GameObject" />, or null if none has been created for the given place ID
            and tile coordinate.
            </returns></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.RemoveByPlaceId(Google.Maps.Coord.MercatorTileCoords,System.String)">
            <summary>
            Removes the entry for a given Place ID at given tile coordinates. If this is the last entry
            for that tile, remove that tile's collection as well.
            </summary>
            <remarks>
            Unlike DidDestroy, this works for GameObjects that have already been destroyed.
            </remarks>
            <param name="mercatorTileCoords">Tile coordinate to remove from.</param>
            <param name="placeId">Place ID of the feature to remove.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.DidDestroyAll">
            <summary>
            Notifies the SDK that all <see cref="T:UnityEngine.GameObject" />s in the scene were
            destroyed; for example, when unloading the scene.
            </summary>
            <remarks>
            After you call the `DidDestroyAll` method, calling
            <see cref="M:Google.Maps.MapsService.LoadMap(UnityEngine.Bounds,Google.Maps.GameObjectOptions)" /> causes new <see cref="T:UnityEngine.GameObject" />s
            to be generated.
            </remarks></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.AlignAltitudesWithNeighboringTerrain(Google.Maps.Coord.MercatorTileCoords,System.Single[0:,0:])">
            <summary>
            Aligns the provided altitudes with that of any loaded neighboring <see cref="T:UnityEngine.Terrain" />
            tiles.
            </summary>
            <param name="mercatorTileCoords">
            The tile coordinate for which neighbors should be found.
            </param>
            <param name="altitudes">
            The grid of altitudes that need to be aligned with any loaded neighbors. The grid must be
            a square oriented south-west to north-east, as illustrated:
            rows[y, 0]        rows[y, x]
            +-----------------+
            |                 |
            |        N        |
            |        |        |
            |        |        |
            |   W ---+--- E   |
            |        |        |
            |        |        |
            |        S        |
            |                 |
            +-----------------+
            rows[0, 0]        rows[0, x]
            </param></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.RecordNewTerrain(Google.Maps.Coord.MercatorTileCoords,UnityEngine.Terrain,System.Single[0:,0:])">
            <summary>
            Adds the specified terrain information to the record of loaded terrain states.
            </summary>
            <param name="mercatorTileCoords">
            The <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> for the loaded terrain information.
            </param>
            <param name="terrain">The <see cref="T:UnityEngine.Terrain" /> tile to record.</param>
            <param name="altitudes">The raw altitudes written to the terrain tile.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.UnloadTerrain(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Unloads the terrain tile for the specified <see cref="T:Google.Maps.Coord.MercatorTileCoords" />, if one exists.
            </summary>
            <param name="mercatorTileCoords">
            The <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to remove terrain for.
            </param></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.Google#Maps#Unity#IGameObjectManager#SetObjectsActive(Google.Maps.Coord.MercatorTileCoords,System.Boolean)">
            <inheritdoc />
            <remarks>
            This uses explicit interface implementation to avoid having to make it public. It
            effectively gives it the same visibility as <see cref="T:Google.Maps.Unity.IGameObjectManager" /> since callers
            need to refer to the interface.
            </remarks></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.DestroyAll">
            <summary>
            Destroy all objects created by the parent <see cref="T:Google.Maps.MapsService" />.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectManager.GetGameObjectCount">
            <summary>
            Gets the number of GameObjects managed by this class.
            </summary></member>
        <member name="T:Google.Maps.Unity.Intersections.IntersectionFeature">
            <summary>
            A map feature representing an intersection overlay object.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionFeature.Shape">
            <summary>
            The shape of this intersection feature.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionFeature.#ctor(Google.Maps.Feature.MapFeatureMetadata,Google.Maps.Coord.MercatorTileCoords)">
            <summary>Constructor.</summary></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionFeature.#ctor(Google.Maps.Coord.MercatorTileCoords,Google.Maps.Unity.Intersections.Intersection)">
            <summary>
            Constructor that takes a tile coordinate, and creates a new default metadata to associate
            with this feature.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.IntersectionFeature.DefaultGameObjectName">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionFeature.GetShape">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.Intersections.IntersectionComponent">
            <summary>
            Metadata associated with a GameObject constructed for an intersection overlay pseudo feature.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.IntersectionComponent.MapFeature">
            <summary>Intersection feature associated with this GameObject.</summary></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionComponent.GetMapFeature">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.Intersections.IntersectionArm">
            <summary>
            Represents an outgoing/incoming road from an intersection.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.IntersectionArm.Segment">
            <summary>
            The segment that this arm lies on.
            </summary>
            <remarks>
            A road may be composed of multiple segments. In cases where an arm lies on multiple
            segments, this holds the first segment closest to the intersection center.
            </remarks></member>
        <member name="P:Google.Maps.Unity.Intersections.IntersectionArm.Material">
            <summary>
            The material to apply to the arm submesh. If this is not set, the material defined in
            <see cref="P:Google.Maps.Feature.Style.SegmentishStyle.IntersectionMaterial" /> is used by default.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.IntersectionArm.Cancel">
            <summary>
            Whether to cancel the construction of this arm.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.IntersectionArm.Inverse">
            <summary>
            The inverse of this arm, if it exists. Both this arm and its inverse represent the
            opposite direction of a road that leaves and returns to the same intersection.
            ___
            /   \
            / / \ \
            A\ \ / /B
            \ I /
            | |C
            | |
            In the above example, A, B and C are arms of the intersection I. A and B are arms which
            leave and return to I using the same path, and so are inverses of each other.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionArm.Polyline">
            <summary>
            The arm shape.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionArm.PolylineJoinsIntersections">
            <summary>
            Whether both endpoints of <see cref="F:Google.Maps.Unity.Intersections.IntersectionArm.Polyline" /> end at intersections.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionArm.StartEdge">
            <summary>
            The edge that this arm starts frm.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionArm.PolylineLength">
            <summary>
            The length of <see cref="F:Google.Maps.Unity.Intersections.IntersectionArm.Polyline" />.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionArm.IsTwoWay(System.Single)">
            <summary>
            Returns true if this intersection arm is two-way with the given join length.
            </summary>
            <param name="joinLength">The join length to test.</param>
            <returns>True if this intersection arm is two-way with the given join length.</returns></member>
        <member name="T:Google.Maps.Unity.Intersections.IntersectionMeshFactory">
            <summary>
            Generates road intersection meshes from an <see cref="T:Google.Maps.Unity.Intersections.Intersection" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.IntersectionZOrder">
            <summary>
            Z-order to use for intersections.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.RenderOrderManager">
            <summary>
            The render order manager to use for game objects created by this factory.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.FinalizerRegister">
            <summary>
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.#ctor(Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject})">
            <summary>Constructor.</summary>
            <param name="renderOrderManager">Manager for sorting features.</param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param></member>
        <member name="T:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape">
            <summary>
            Keeps track of parameters for generating a mesh from an <see cref="T:Google.Maps.Unity.Intersections.IntersectionArm" />.
            </summary>
            <remarks>
            The sides of an arm refers to the sides seen when facing away from the intersection,
            center, e.g.:
            L |   | R
            |   |
            ( C )
            R \   \ L
            \   \
            </remarks></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape.MeshData">
            <summary>
            The arm mesh data.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape.LeftStart">
            <summary>
            The distance along the left side of the line extrusion to start the mesh from, measured
            from the center of the intersection (i.e. index 0 of the left extrusion line).
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape.LeftLength">
            <summary>
            The length of the left side of the mesh.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape.RightStart">
            <summary>
            The distance along the right side of the line extrusion to start the mesh from, measured
            from the center of the intersection (i.e. index 0 of the right extrusion line).
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape.RightLength">
            <summary>
            The length of the right side of the mesh.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmMeshData.Arm">
            <summary>
            The intersection arm this mesh data is associated with.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmMeshData.Extrusion">
            <summary>
            The mesh extrusion of the intersection arm's polyline.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmMeshData.FromArm(Google.Maps.Unity.Intersections.IntersectionArm,System.Single)">
            <summary>
            Creates a representation of an intersection arm from a polyline.
            </summary>
            <param name="arm">The intersection arm.</param>
            <param name="roadWidth">The width of the road</param>
            <returns>The intersection arm representing the given polyline.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmMeshData.#ctor(Google.Maps.Unity.Intersections.IntersectionArm,Google.Maps.Unity.LineGroupMeshFactory.LineExtrusion)">
            <summary>
            Constructor.
            </summary>
            <param name="arm">The intersection arm this mesh data is associated with.</param>
            <param name="extrusion">The mesh extrusion of the intersection arm's polyline.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.BuildMeshForGameObject(UnityEngine.GameObject,Google.Maps.Unity.Intersections.Intersection,Google.Maps.Feature.Style.SegmentishStyle)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.BuildMeshForGameObject(UnityEngine.GameObject,System.Collections.Generic.IList{Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape},Google.Maps.Feature.Style.SegmentishStyle)">
            <summary>
            Builds the intersection mesh and attaches it to the given GameObject.
            </summary>
            <param name="gameObject">The GameObject to build the mesh for.</param>
            <param name="armShapes">The intersection arm shapes.</param>
            <param name="style">The intersection styling.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.BuildArmShapes(Google.Maps.Unity.Intersections.Intersection,Google.Maps.Feature.Style.SegmentishStyle)">
            <summary>
            Builds the intersection arm shapes used for building the intersection mesh.
            </summary>
            <param name="intersection">The intersection map feature.</param>
            <param name="style">The intersection styling.</param>
            <returns>
            The intersection arm shapes corresponding to the arms in the given intersection.
            </returns></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.AddArmToMesh(Google.Maps.Unity.MeshBuilder,System.Int32,Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape,Google.Maps.Feature.Style.SegmentishStyle)">
            <summary>
            Generates and adds the submesh of the intersection arm to the given
            <see cref="T:Google.Maps.Unity.MeshBuilder" />.
            Intersection arms are added as individual submeshes so that different materials can be
            applied to each individual arm. Materials can use the UV2 coordinates to apply a decal,
            which may differ for each arm.
            </summary>
            <param name="meshBuilder">The MeshBuilder to add the arm submesh to.</param>
            <param name="submeshIdx">The submesh index to use.</param>
            <param name="armShape">The arm to generate a submesh of.</param>
            <param name="style">The intersection styling.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.MakeMesh(System.Collections.Generic.IList{Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape},Google.Maps.Feature.Style.SegmentishStyle)">
            <summary>
            Constructs the mesh for this intersection.
            </summary>
            <summary>
            A submesh is generated for each intersection arm and a single submesh is generated for the
            inner intersection polygon, in that order.
            </summary>
            <param name="arms">The intersection arms.</param>
            <param name="style">The intersection styling.</param>
            <returns>The mesh of the intersection.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.EnforceMinimumPolylineLength(Google.Maps.Unity.Intersections.IntersectionArm,System.Single)">
            <summary>
            Extends the given intersection arm's polyline if it is shorter than the given minimum
            length and does not join two intersections.
            </summary>
            <param name="arm">The intersection arm.</param>
            <param name="minLength">
            The minimum length the arm's polyline should be. If the polyline is shorter, the final line
            segment is extended by the remaining length.
            </param></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.GetIntersections(System.Collections.Generic.IList{Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmMeshData},System.Single)">
            <summary>
            Finds the furthest distance along each arm's left and right side where an intersection with
            another arm occurs.
            </summary>
            <param name="arms">The arm extrusions to test.</param>
            <param name="maxDistance">
            The maximum distance along each arm where an intersection can occur and be recorded.
            Intersections occurring further along this are ignored.
            </param>
            <returns>
            The distances along each arm's left and right side where an intersection with another arm
            was found. Indices i*2 and i*2+1 correspond to the distances along the left and right side
            for arm i respectively.
            </returns></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.GetArms(System.Collections.Generic.IList{Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmMeshData},Google.Maps.Feature.Style.SegmentishStyle)">
            <summary>
            Returns a list of arm shapes that describe points along each arm's extruded lines. These
            points give the start points of each arm where, ideally, there is no longer any overlap
            between them.
            </summary>
            <param name="extrusions">The arm extrusions to find the start points of.</param>
            <param name="style">The intersection styling.</param>
            <returns>The arm shapes.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.GenerateInnerMesh(Google.Maps.Unity.MeshBuilder,System.Collections.Generic.IList{Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmShape},System.Int32)">
            <summary>
            Generates the mesh covering the inner polygon area bordering the intersection arms.
            </summary>
            <param name="meshBuilder">The mesh builder to use.</param>
            <param name="arms">The arms of the intersection.</param>
            <param name="submeshIdx">The submesh index to use.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.GetFurthestPolylineIntersection(System.Collections.Generic.IList{UnityEngine.Vector3},System.Collections.Generic.IList{UnityEngine.Vector3},System.Single@,System.Single@,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Finds the distance along two polylines where the furthest intersection between them occurs
            and updates the given distance values if the distance found is greater.
            </summary>
            <remarks>
            The distance along a polyline refers to the distance measured along successive line
            segments, starting from index 0.
            </remarks>
            <param name="a">The first line to test.</param>
            <param name="b">The second line to test.</param>
            <param name="aDist">
            The distance along line a where the furthest intersection was found.
            </param>
            <param name="bDist">
            The distance along line b where the furthest intersection was found.
            </param>
            <param name="aIsLeftLine">
            Whether <paramref name="a" /> corresponds to the left side of
            <see cref="F:Google.Maps.Unity.Intersections.IntersectionMeshFactory.ArmMeshData.Extrusion" />
            </param>
            <param name="areInverses">
            Whether <paramref name="a" /> is the inverse of <paramref name="b" />. If this is true,
            intersections between the same and neighboring line segments are ignored.
            </param>
            <param name="maxDistance">
            The maximum distance along each line where an intersection can occur and be recorded.
            Intersections occurring further along this are ignored.
            </param></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.GetLineDirection(System.Collections.Generic.IList{UnityEngine.Vector3},System.Single)">
            <summary>
            Get the direction of the line segment (endIdx-1, endIdx) that contains the point along
            the given line and distance.
            </summary>
            <param name="line">The line.</param>
            <param name="dist">The distance along the line where the point lies.</param>
            <returns>
            The direction of the line segment (endIdx-1, endIdx) that contains the point along the
            given line and distance.
            </returns></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.GetPerpendicularPoint(UnityEngine.Vector3,UnityEngine.Vector3,System.Boolean,System.Single)">
            <summary>
            Returns the point t of the line L=(<paramref name="point" />,t) with length
            <paramref name="length" /> and where L is perpendicular to <paramref name="direction" />.
            </summary>
            <remarks>
            The use of this method is demonstrated in the the example below.
            ____________
            /  ________  \
            \  \   \  \\  \
            \  \__/  k o-&gt;p
            \______/ /  /
            A\  \ B
            If we want to find p on line B from o on line A, we cannot simply use
            <see cref="M:Google.Maps.Util.GeometryUtils.GetClosestPointOnLine(System.Collections.Generic.IList{UnityEngine.Vector3},UnityEngine.Vector3,System.Single@)" />. Notice that k is also further along on
            line B, but is closer to o than p is and would be returned instead. Instead of finding
            the closest point to o, we predict where p should be using this method and get the closest
            point to that.
            </remarks>
            <param name="point">The point s of the line (s,t).</param>
            <param name="direction">
            The direction of the line that <paramref name="point" /> lies on.
            </param>
            <param name="isLeftPoint">Whether the point lies on the left line of an extrusion.</param>
            <param name="length">The length of the line (<paramref name="point" />,t).</param>
            <returns>The point t of the line (<paramref name="point" />,t).</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.IntersectionMeshFactory.AddArmUV2sToMesh(Google.Maps.Unity.MeshBuilder,System.Collections.Generic.IList{UnityEngine.Vector3},System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Adds UV2s for the side of an arm to the supplied <see cref="T:Google.Maps.Unity.MeshBuilder" />.
            </summary>
            <remarks>
            Example: We want to produce the following ordered UV2s for a left and right extrusion:
            (0, 0)   |  | (1, 0)
            Left     |  | Right
            (0, 1)   v  v (1, 1)
            Ordered UV2s: (1, 0), (1, 1), (0, 1), (0, 0)
            The left UV2s are added in reverse order as its vertices are added to the MeshBuilder in
            the same way so that they follow on from the right vertices clockwise.
            In this example, the right line is first passed as is, producing UVs (1,0) and (1,1) in that
            order. The left line will next need to be passed in reverse order, with the invertV flag
            set to true to ensure the v-values are inverted to produce the UVs (0,1) and (0,0) in that
            order.
            </remarks>
            <param name="mb">The <see cref="T:Google.Maps.Unity.MeshBuilder" /> to use.</param>
            <param name="line">The line of an arm side to add UV2s for.</param>
            <param name="u">The u-value to use for the UV2 coordinates.</param>
            <param name="vStart">The v-value to start from for the UV2 coordinates.</param>
            <param name="vEnd">The v-value to end at for the UV2 coordinates.</param>
            <param name="invertV">
            Whether the v-value for the UV2 coordinates should be inverted.
            </param></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLattice">
            <summary>
            A representation of a graph of nodes and connections representing the road network in an area.
            For example, a single map tile, or a loaded map region.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLattice.MergeSearchRectHalfSize">
            <summary>
            The half-size of the rectangle used for searching for nearby nodes at different zoom levels
            to merge with.
            </summary>
            <remarks>
            Operations are performed using mercator coordinates at the zoom level defined by
            <see cref="F:Google.Maps.Feature.Shape.GlobalCoordinate.MaxMercatorZoom" />.
            </remarks></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLattice.PathOptions">
            <summary>
            Additional options provided to <see cref="M:Google.Maps.Unity.Intersections.RoadLattice.FindPath(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,System.Int32,Google.Maps.Unity.Intersections.RoadLattice.PathOptions)" /> and
            <see cref="M:Google.Maps.Unity.Intersections.RoadLattice.UncheckedFindPath(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,System.Int32,Google.Maps.Unity.Intersections.RoadLattice.PathOptions)" />.
            </summary></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLattice.PathOptions.Heuristic">
            <summary>
            Delegate for returning the cost of traversing the edge between <paramref name="source" />
            and <paramref name="destination" /> while pathfinding.
            </summary>
            <param name="source">The source node.</param>
            <param name="destination">The destination node.</param></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLattice.PathOptions.Neighbors">
            <summary>
            Delegate for returning the neighbors of a <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" />.
            </summary>
            <param name="node">The node to return the neighbors of.</param></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLattice.PathOptions.Default">
            <summary>
            The default <see cref="T:Google.Maps.Unity.Intersections.RoadLattice.PathOptions" /> used when unspecified.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLattice.PathOptions.HeuristicFunction">
            <summary>
            The function used to estimate the cost of moving from one node to another.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLattice.PathOptions.NeighborsFunction">
            <summary>
            The function used to return the neighbors of a node.
            </summary></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLattice.NoPathException">
            <summary>
            Exception thrown by <see cref="M:Google.Maps.Unity.Intersections.RoadLattice.FindPath(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,System.Int32,Google.Maps.Unity.Intersections.RoadLattice.PathOptions)" /> when a path cannot be found.
            </summary></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLattice.NoNodesFoundException">
            <summary>
            Exception thrown by <see cref="M:Google.Maps.Unity.Intersections.RoadLattice.SnapToNode(UnityEngine.Vector3,Google.Maps.Unity.Intersections.RoadLattice.RoadLatticeNodePredicate)" /> when no nodes can be found.
            For example, when the lattice is currently empty.
            </summary></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLattice.RoadLatticeNodePredicate">
            <summary>
            A predicate on a <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" /> used for filtering. For example, ins
            <see cref="M:Google.Maps.Unity.Intersections.RoadLattice.SnapToNode(UnityEngine.Vector3,Google.Maps.Unity.Intersections.RoadLattice.RoadLatticeNodePredicate)" />.
            </summary>
            <param name="node">The node to test.</param></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLattice.LineSegment2D">
            <summary>
            Encapsulates an immutable, directed line segment that represents a connection between nodes
            in this lattice.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLattice.LineSegment2D.Start">
            <summary>Position of the start of this segment.</summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLattice.LineSegment2D.End">
            <summary>Position of the end of this segment.</summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.LineSegment2D.#ctor(UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>Contstuctor.</summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLattice.Nodes">
            <summary>
            The nodes in this lattice.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLattice.Lattice">
            <summary>
            The collection of nodes in this lattice, indexed by the integer locations of the nodes.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLattice.BorderQuadTree">
            <summary>
            Quadtree used for storing and retrieving boundary nodes.
            </summary>
            <remarks>
            Lazily initialized in `MergeFrom` to avoid unnecessary overhead for road lattices that
            don't use it.
            </remarks></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.CombineNodes(Google.Maps.Feature.Shape.GlobalCoordinate,Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Combines two nodes into a single node at the supplied location where the combined node will
            have connections to all nodes that were connected to either of the supplied nodes.
            </summary>
            <remarks>
            The source nodes may contain non-disjoint sets of neighbors. This will not result in
            multiple links to/from the combined node to any given neighbor.
            </remarks>
            <param name="globalCoordinate">The location of the generated, combined node.</param>
            <param name="nodeA">One node to combine.</param>
            <param name="nodeB">Another node to combine.</param>
            <returns>The generated, combined node.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.AddLatticeSegment(Google.Maps.Unity.Intersections.RoadLatticeSegment)">
            <summary>
            Adds a <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeSegment" /> to this lattice by iterating through the vertices
            of the segment, creating a <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" /> at the location of each vertex,
            with nodes corresponding to adjoining vertices becoming neighbors.
            </summary>
            <remarks>
            If a vertex is marked as being on a tile boundary, the created node will also be marked as
            being on a tile boundary.
            Newly created nodes are added to this lattice using the ALLOW_MERGE option, so if this
            lattice contains a node at the same location as a vertex from the added segment, then the
            newly created node (corresponding to the vertex in question) is merged into the existing
            node. This has the effect of generating intersections where added segments intersect at a
            vertex. Where two segments cross but do not both have a vertex at the crossing point, this
            process does not create any new nodes.
            </remarks>
            <param name="segment">The RoadLatticeSegment to add.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.AddOrMergeNode(Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Adds a supplied <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" /> to this lattice, or merges the supplied node
            with any existing node at the same location.
            </summary>
            <param name="node">The node to add.</param>
            <returns>
            Either the supplied node, or the node to which the supplied node was merged.
            </returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.AddNode(Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Adds the supplied node to this road lattice, replacing any existing node at the same
            integer coordinates.
            </summary>
            <param name="node">The node to add.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.FindNodeAt(UnityEngine.Vector2Int)">
            <summary>
            Find any node in the lattice at the supplied position.
            </summary>
            <param name="location">The location at which to look for nodes.</param>
            <returns>Any node found at the supplied location, or null if none exists.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.FindNodeAt(System.UInt64)">
            <summary>
            Find any node in the lattice at the supplied location UID.
            </summary>
            <remarks>
            See <see cref="P:Google.Maps.Unity.Intersections.RoadLatticeNode.LocationUID" /> for more information.
            </remarks>
            <param name="locationUID">The location UID at which to look for nodes.</param>
            <returns>Any node found at the supplied location UID, or null if none exists.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.GetEdgeSegments">
            <summary>
            Returns a list of <see cref="T:Google.Maps.Unity.Intersections.RoadLattice.LineSegment2D" /> objects representing all the edges in this
            lattice.
            </summary>
            <remarks>
            This method is primarily intended for use in debugging methods, e.g., displaying a
            representation of the RoadLattice.
            </remarks>
            <returns>All of the edges in this lattice.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.GetLocationsOfNodeType(Google.Maps.Unity.Intersections.RoadLatticeNode.RoadLatticeNodeType)">
            <summary>
            Returns a list of positions of all of the nodes of the supplied type in this lattice.
            </summary>
            <remarks>
            This method is primarily intended for use in debugging methods, e.g., displaying a
            representation of the RoadLattice.
            </remarks>
            <returns>List of positions of nodes of the supplied type.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.GetNodes">
            <summary>
            Deprecated. Please use <see cref="P:Google.Maps.Unity.Intersections.RoadLattice.Nodes" /> instead.
            Returns a list of all the nodes in this lattice.
            </summary>
            <returns>The list of nodes.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.GetLocationsOfNodes">
            <summary>
            Returns a list of positions of all of the nodes in this lattice.
            </summary>
            <remarks>
            This method is primarily intended for use in debugging methods, e.g. display.
            </remarks>
            <returns>List of positions of nodes.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.Clear">
            <summary>
            Clears all nodes and connections from this lattice.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.TranslateOrigin(UnityEngine.Vector2)">
            <summary>
            Translates the origin of all <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" />s in this lattice.
            </summary>
            <param name="offset">The amount by which to translate nodes.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.MergeFrom(Google.Maps.Unity.Intersections.RoadLattice,Google.Maps.Coord.MercatorTileCoords,Google.Maps.Unity.Intersections.RoadLatticeManager)">
            <summary>
            Merge the supplied road lattice into this <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" />
            </summary>
            <param name="sourceLattice">The lattice to merge into this lattice.</param>
            <param name="coords">Tile coordinate of the source lattice.</param>
            <param name="roadLatticeManager">
            The <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeManager" />, which is required for recording lattice node merges.
            </param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.MergeFrom(System.Collections.Generic.IEnumerable{Google.Maps.Unity.Intersections.RoadLatticeNode},Google.Maps.Coord.MercatorTileCoords,Google.Maps.Unity.Intersections.RoadLatticeManager)">
            <summary>
            Merge the supplied road lattice into this <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" />
            </summary>
            <param name="sourceNodes">The lattice nodes to merge into this lattice.</param>
            <param name="coords">Tile coordinate of the source lattice.</param>
            <param name="roadLatticeManager">
            The <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeManager" />, which is required for recording lattice node merges.
            </param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.MaybeUnloadNodes(System.Collections.Generic.IEnumerable{Google.Maps.Unity.Intersections.RoadLatticeNode})">
            <summary>
            Unloads each of the supplied <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" /> objects if it is not currently
            referenced from another tile.
            </summary>
            <param name="tileRoadLatticeNodes">The nodes to possibly unload.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.RemoveNode(Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Removes the supplied <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" /> from the road lattice.
            </summary>
            <param name="node">The node to remove.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.Clone">
            <summary>
            Creates a clone of this road lattice by creating an entirely new lattice with an identical
            structure.
            </summary>
            <remarks>
            The generated clone is entirely independent of the original, containing new nodes that do
            not reference the original lattice.
            </remarks>
            <returns>The clone</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.UncheckedFindPath(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,System.Int32,Google.Maps.Unity.Intersections.RoadLattice.PathOptions)">
            <summary>
            Returns a list of RoadLatticeNodes on the (inclusive) path from start node to end node, or
            null if there is no path.
            </summary>
            <param name="start">The node that starts the path.</param>
            <param name="end">The node that ends the path.</param>
            <param name="searchLimit">
            The maximum number of search iterations. If a path is not found within this limit, then null
            is returned.
            </param>
            <param name="options">
            Additional pathfinding options. If null, <see cref="F:Google.Maps.Unity.Intersections.RoadLattice.PathOptions.Default" /> is used.
            </param>
            <returns>An ordered list of nodes on the found path, or null.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.FindPath(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,System.Int32,Google.Maps.Unity.Intersections.RoadLattice.PathOptions)">
            <summary>
            Finds a path between the supplied nodes, or throws a <see cref="T:Google.Maps.Unity.Intersections.RoadLattice.NoPathException" /> when a
            path cannot be found between the supplied nodes.
            </summary>
            <param name="start">The node that begins the path.</param>
            <param name="end">The node that ends the path.</param>
            <param name="searchLimit">
            The maximum number of search iterations. If a path is not found within this limit, then no
            path is returned.
            </param>
            <param name="options">
            Additional pathfinding options. If null, <see cref="F:Google.Maps.Unity.Intersections.RoadLattice.PathOptions.Default" /> is used.
            </param>
            <exception cref="T:System.ArgumentException">If a path cannot be found.</exception>
            <returns>An ordered list of nodes on the found path</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.SnapToNode(UnityEngine.Vector3,Google.Maps.Unity.Intersections.RoadLattice.RoadLatticeNodePredicate)">
            <summary>
            Finds the nearest node in the <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" /> to the supplied position.
            </summary>
            <remarks>
            This is a proof of concept brute force implementation.
            Performance is O(n), where n is lattice.GetNodes().Count.
            </remarks>
            <param name="position">The 3D position to snap.</param>
            <param name="predicate">
            An optional predicate used to select which nodes are available for snapping. If provided,
            only nodes for which this predicate returns true can be returned as the result of snapping.
            </param>
            <returns>
            The nearest node to the supplied position or null if the lattice has no nodes, or no nodes
            pass the supplied predicate.
            </returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.UncheckedSnapToNode(UnityEngine.Vector3,Google.Maps.Unity.Intersections.RoadLattice.RoadLatticeNodePredicate)">
            <summary>
            Finds the nearest node in the <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" /> to the supplied position.
            </summary>
            <param name="position">The 3D position to snap.</param>
            <param name="predicate">
            An optional predicate used to select which nodes are available for snapping. If provided,
            only nodes for which this predicate returns true can be returned as the result of snapping.
            </param>
            <returns>
            The nearest node to the supplied position, or null if the lattice has no nodes, or if no
            nodes pass the supplied predicate.
            </returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLattice.InitializeBorderQuadTree">
            <summary>
            Initializes <see cref="F:Google.Maps.Unity.Intersections.RoadLattice.BorderQuadTree" /> and adds to it all boundary nodes stored
            <see cref="F:Google.Maps.Unity.Intersections.RoadLattice.Lattice" />.
            </summary></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeDebugUtils">
            <summary>
            Utility functions useful for debugging RoadLattice behaviour including, e.g., generating debug
            GameObject representing a lattice.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeDebugUtils.MakeRoadLatticeGameObject(Google.Maps.Unity.Intersections.RoadLattice,UnityEngine.Material)">
            <summary>
            Make a GameObject showing connections between <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" />s and marking
            Nodes that lie on tile boundaries.
            </summary>
            <param name="lattice">The lattice to reify as a GameObject.</param>
            <param name="material">The material to apply to the generated mesh.</param>
            <returns>The GameObject representation of the supplied lattice.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeDebugUtils.MakeSublatticeMeshes(UnityEngine.GameObject,System.Collections.Generic.List{Google.Maps.Unity.Intersections.RoadLattice.LineSegment2D},UnityEngine.Material)">
            <summary>
            Make a number of debug meshes from the supplied list of road lattice segments, dividing
            the collection of segments into multiple subsets to avoid creating any meshes with an
            excessively large number of vertices.
            </summary>
            <param name="parent">The parent object for created sublattice objects.</param>
            <param name="segments">Lines segments of the road lattice.</param>
            <param name="material">The material to apply to the generated mesh.</param>
            <returns>The constructed mesh.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeDebugUtils.MakeBoundaryPins(UnityEngine.GameObject,Google.Maps.Unity.Intersections.RoadLattice,UnityEngine.Material)">
            <summary>
            Adds tetrahedral pins to nodes on tile boundaries.
            </summary>
            <param name="parent">The parent object for created sublattice objects.</param>
            <param name="lattice">The RoadLattice.</param>
            <param name="material">The material to apply to the generated mesh.</param>
            <returns>The constructed mesh.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeDebugUtils.AddLine(Google.Maps.Unity.MeshBuilder,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
            <summary>
            Adds to the supplied <see cref="T:Google.Maps.Unity.MeshBuilder" /> a rectangle representing the a line segment.
            </summary>
            <param name="mb">The mesh builder to which to add a rectangle.</param>
            <param name="p1">One end of the line segment in 2D world space.</param>
            <param name="p2">One end of the line segment in 2D world space.</param>
            <param name="width">The width of the generated line segment rectangle.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeDebugUtils.AddPin(Google.Maps.Unity.MeshBuilder,UnityEngine.Vector2,System.Single)">
            <summary>
            Add a vertically oriented triangle to the supplied <see cref="T:Google.Maps.Unity.MeshBuilder" />, with the
            triangle standing on one vertex, i.e., pointing down.
            </summary>
            <param name="mb">The MeshBuilder.</param>
            <param name="position">The 2D world space position of the triangle base.</param>
            <param name="size">The size of the generated pin.</param></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeEdge">
            <summary>
            A structure representing an outbound connection to a <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" />. The source
            of the edge is not explicitly represented, only the destination.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeEdge.Target">
            <summary>
            The target node to which this edge joins.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeEdge.Segment">
            <summary>
            The source <see cref="T:Google.Maps.Feature.Segment" /> map feature from which this lattice edge was generated.
            </summary></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeEdge.Flags">
            <summary>
            The possible flags for an edge.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeEdge.Flags.None">
            <summary>
            An ordinary edge.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeEdge.Flags.Intersection">
            <summary>
            An edge entering an intersection.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeEdge.EdgeFlags">
            <summary>
            The flags for this edge.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeEdge.#ctor(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Feature.Segment,Google.Maps.Unity.Intersections.RoadLatticeEdge.Flags)">
            <summary>
            Constructor.
            </summary>
            <param name="target">The target node to which this edge joins.</param>
            <param name="segment">The source map feature for this edge.</param>
            <param name="flags">The flags that apply to this edge.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeEdge.DuplicateWithNewTarget(Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Creates a duplicate version of this edge with a new target, but all other properties
            transferred.
            </summary>
            <remarks>
            This method is useful, e.g., for cloning <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" /> objects.
            </remarks>
            <param name="target">New target.</param>
            <returns>The duplicate.</returns></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeManager">
            <summary>
            Handles the global road lattice and keeps track of all loaded and unloaded road lattices
            local to specific <see cref="T:Google.Maps.Feature.MapTile" />s.
            </summary></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeManager.RoadLatticeInfo">
            <summary>
            Used to assign extra data to a <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeManager.RoadLatticeInfo.RoadLattice">
            <summary>
            The road lattice.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeManager.RoadLatticeInfo.ActiveNodes">
            <summary>
            The nodes cloned from <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" /> that have been merged into
            <see cref="F:Google.Maps.Unity.Intersections.RoadLatticeManager.GlobalRoadLattice" />.
            </summary>
            <remarks>
            This set may also contain other nodes added by
            <see cref="M:Google.Maps.Unity.Intersections.RoadLatticeManager.DidMergeLatticeNode(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Coord.MercatorTileCoords)" />.
            </remarks></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeManager.RoadLatticeInfo.IsActive">
            <summary>
            Whether this road lattice is active. See
            <see cref="M:Google.Maps.Unity.Intersections.RoadLatticeManager.SetRoadLatticeActive(Google.Maps.Coord.MercatorTileCoords,System.Boolean)" /> for more information.
            </summary>
            <remarks>
            An inactive road lattice should have an empty <see cref="F:Google.Maps.Unity.Intersections.RoadLatticeManager.RoadLatticeInfo.ActiveNodes" /> collection.
            </remarks></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeManager.RoadLatticeInfo.#ctor(Google.Maps.Unity.Intersections.RoadLattice,System.Boolean)">
            <summary>
            Constructor.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeManager.GlobalRoadLattice">
            <summary>
            The <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" /> representing the roads in the tiles loaded by this
            RoadLatticeManager.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeManager.Events">
            <summary>
            Events fired by the SDK.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeManager.RoadLattices">
            <summary>
            Maps the tile coordinates of map tiles to their road lattice.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeManager.#ctor(Google.Maps.Unity.Intersections.RoadLattice,Google.Maps.Event.Events)">
            <summary>
            Constructor.
            </summary>
            <param name="globalRoadLattice">The global road lattice.</param>
            <param name="events">Events.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeManager.DidMergeLatticeNode(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Used to inform this <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeManager" /> that the <paramref name="source" /> node
            has been merged into the <paramref name="existing" /> node, and that the the mapping from
            Tile coordinates to nodes should be updated to reflect this merge.
            </summary>
            <param name="existing">The node onto which source was merged.</param>
            <param name="source">The node that was merged.</param>
            <param name="sourceMercatorTileCoords">The tile coordinates of the source node.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeManager.SetRoadLatticeActive(Google.Maps.Coord.MercatorTileCoords,System.Boolean)">
            <summary>
            Sets the active state of the road lattice associated with the given tile coordinate.
            When a road lattice is set active, it is merged with <see cref="F:Google.Maps.Unity.Intersections.RoadLatticeManager.GlobalRoadLattice" />. When
            it is set inactive, it is unloaded from the <see cref="F:Google.Maps.Unity.Intersections.RoadLatticeManager.GlobalRoadLattice" />.
            </summary>
            <param name="mercatorTileCoords">The tile coordinate of the road lattice to modify.</param>
            <param name="isActive">The new active state.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeManager.AddRoadLattice(Google.Maps.Coord.MercatorTileCoords,Google.Maps.Unity.Intersections.RoadLattice)">
            <summary>
            Adds an inactive road lattice associated with the given tile coordinate.
            </summary>
            <remarks>
            A road lattice that is inactive has not yet been merged with the
            <see cref="F:Google.Maps.Unity.Intersections.RoadLatticeManager.GlobalRoadLattice" />.
            When this road lattice is set active by <see cref="M:Google.Maps.Unity.Intersections.RoadLatticeManager.SetRoadLatticeActive(Google.Maps.Coord.MercatorTileCoords,System.Boolean)" />, it is first
            cloned before being merged with the global road lattice. The original road lattice,
            <paramref name="roadLattice" />, is not modified.
            </remarks>
            <param name="mercatorTileCoords">
            The tile coordinate to associate with the road lattice.
            </param>
            <param name="roadLattice">The road lattice to add.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeManager.RemoveRoadLattice(Google.Maps.Coord.MercatorTileCoords)">
            <summary>
            Removes the road lattice associated with the given tile coordinate.
            </summary>
            <remarks>
            If the road lattice is active, it is set inactive and demerged from the global road lattice
            before removal.
            </remarks>
            <param name="mercatorTileCoords">
            The tile coordinate associated with the road lattice to be removed.
            </param></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeNode">
            <summary>
            A node in a graph representing the layout of roads in an area. Each node contains a
            collection of neighbor nodes.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.LocationUIDToVector2Int(System.UInt64)">
            <summary>
            Converts the given encoded integer coordinates to a <see cref="T:UnityEngine.Vector2Int" />.
            </summary>
            <remarks>
            <paramref name="locationUID" /> is expected to be an encoded version of the mercator
            coordinates stored in a <see cref="T:Google.Maps.Feature.Shape.GlobalCoordinate" /> and returned by
            <see cref="P:Google.Maps.Unity.Intersections.RoadLatticeNode.LocationUID" />.
            </remarks>
            <param name="locationUID">The location UID to convert.</param>
            <returns>The converted location UID.</returns></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeNode.RoadLatticeNodeType">
            <summary>
            The possible types of <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeNode.RoadLatticeNodeType.Standard">
            <summary>
            Indicates node with no interesting properties.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeNode.RoadLatticeNodeType.Boundary">
            <summary>
            Indicates a Node lying on the border of a tile.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeNode.RoadLatticeNodeType.BoundaryNeighbor">
            <summary>
            Indicates a Node that is a neighbor of a node lying on a tile boundary.
            </summary></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeNode.Source">
            <summary>
            Indicates whether a node corresponds to a common vertex in two or more segments, or if it
            was generated by discovering an intersection of line segments of roads that did not
            correspond to a vertex in both roads.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeNode.Source.Server">
            <summary>
            Indicates a node generated directly from road vertex data originating on the server.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeNode.Source.Client">
            <summary>
            Indicates a node generated by client road processing code.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeNode.Type">
            <summary>
            Indicates the type of node: Standard, Boundary, etc.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeNode.Location">
            <summary>
            Floating-point World-space location of this node.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeNode.LocationUID">
            <summary>
            An ID derived from the global, real world location of this RoadLatticeNode.
            </summary>
            <remarks>
            This will differ from the LocationUID of any other RoadLatticeNode, unless it occupies the
            same real world location within the resolution of the underlying map data.
            </remarks></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeNode.IntLocation">
            <summary>
            Immutable, integer, world-scale mercator location from <see cref="T:Google.Maps.Feature.Shape.GlobalCoordinate" />.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeNode.GlobalCoordinate">
            <summary>
            Location of this node.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeNode.Neighbors">
            <summary>
            Neighboring nodes in the RoadLattice that contains this node.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeNode._Edges">
            <summary>
            The collection of outbound edges from this node indexed by the target node of each edge.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeNode.Edges">
            <summary>
            The collection of outbound edges from this node to its neighbors.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeNode.NeighborCount">
            <summary>
            The number of neighboring nodes in the RoadLattice that contains this node.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.EdgeTo(Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            The outbound edge from this node to a target node.
            </summary>
            <param name="target">Node to retrieve edge to.</param>
            <returns>The outbound edge to the target node.</returns>
            <exception cref="T:System.ArgumentException">
            If this node does not have an edge to the provided target node.
            </exception></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.HasEdgeTo(Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Checks if this node has an edge to <paramref name="target" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeNode.NodeSource">
            <summary>
            Whether this node came from Factile, or it was generated as part of client side road
            intersection detection.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeNode.RefCount">
            <summary>
            The number of loaded tiles that currently reference this node.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.#ctor(Google.Maps.Feature.Shape.GlobalCoordinate,Google.Maps.Unity.Intersections.RoadLatticeNode.Source)">
            <summary>
            Constructor.
            </summary>
            <param name="globalCoordinate">Location of this node.</param>
            <param name="source">
            Whether the node came directly from server data, or was generated client side.
            </param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.AddEdgeUnconditional(Google.Maps.Unity.Intersections.RoadLatticeEdge)">
            <summary>
            Unconditionally adds an edge connecting a new neighbor to this node, replacing any existing
            edge from this node to the same target.
            </summary>
            <param name="edge">The edge to add.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.AddEdgeIfNewNeighbor(Google.Maps.Unity.Intersections.RoadLatticeEdge)">
            <summary>
            Adds a new edge connecting to the target node of the supplied edge if no edge already exists
            connecting this node to that node.
            </summary>
            <param name="edge">The edge to possibly add.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.AngleToInRadians(Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Returns the relative angle (anticlockwise from positive x-axis, measured in radians) of the
            line joining this node's location to the location of the supplied node.
            </summary>
            <param name="other">Node whose relative angle is returned.</param>
            <returns>The relative angle, in radians, of the location of the supplied node.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.CompareAngleTo(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Compares the angles to from this node to the supplied target nodes.
            </summary>
            <param name="n1">First target node.</param>
            <param name="n2">Second target node</param>
            <returns>Positive, zero, or negative indicating whether the angle to n1 is greater, equal
            to, or less than the angle to n2.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.NeighborsSortedByAngle">
            <summary>
            Returns a sorted list of neighbor nodes, sorted by angle subtended from this node.
            </summary>
            <remarks>Angles are measured anticlockwise from the positive x-axis.</remarks></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.RemoveEdge(Google.Maps.Unity.Intersections.RoadLatticeEdge)">
            <summary>
            Removes any existing edge that currently connects this node to the target node of the
            supplied edge.
            </summary>
            <param name="edge">The edge to remove if present</param>
            <returns>Whether a matching edge was removed.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.RemoveNeighbor(Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Removes any edge referencing the supplied node as a neighbour of this node.
            </summary>
            <param name="neighbor">The node indicating the edge to possibly remove.</param>
            <returns>
            Whether removal was successful. For example, false will be returned if the supplied node is
            not a neighbour.
            </returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.MarkOnTileBoundary">
            <summary>
            Marks this tile a lying on a tile boundary.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.OffsetOrigin(UnityEngine.Vector2)">
            <summary>
            Moves this node.
            </summary>
            <param name="offset">The offset by which to move this node.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.MergeFrom(Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Merges the supplied source node with this node by merging the supplied nodes neighbours
            into this nodes neighbours collection.
            </summary>
            <remarks>
            This merge operation will not result in multiple connections between nodes, even if this
            node and the merge source already share some neighbour nodes.
            </remarks>
            <param name="source">The node to merge from.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.ToString">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.SeparateFromNeighbors">
            <summary>
            Removes any connections between this node and its neighbours, disconnecting it from those
            neighbours.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.IsAppropriateForRemovalFromLattice">
            <summary>
            Indicates whether this node is a valid candidate for removal from its containing road
            lattice. This is true if the node is not a boundary node, or its reference count is zero.
            </summary>
            <returns>Whether this node is a valid removal candidate.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNode.CloneWithoutNeighbours">
            <summary>
            Produces a clone of this <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeNode" />, excluding connections to nieghbours.
            </summary>
            <returns>The clone.</returns></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeNodeNeighborsEnumerable">
            <summary>
            A helper class that derives an enumerable neighbors collection from this nodes edges
            collection. Primarily used to provide backwards compatibility, as RoadLatticeNodes previously
            had a simple neighbors collection rather than an attributed edge collection.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeNodeNeighborsEnumerable.#ctor(System.Collections.Generic.IEnumerable{Google.Maps.Unity.Intersections.RoadLatticeEdge})">
            <summary>
            Constructor that takes a snapshot of the targets from the supplied collection of edges.
            </summary>
            <param name="edges">Edges from which to snapshot neighbors.</param></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeSegment">
            <summary>
            A representation of a connected sequence of vertices (a polyline) that can be added to a
            <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" />.
            </summary>
            <remarks>
            This is a simplification of the <see cref="T:Google.Maps.Feature.Segment" /> map feature type containing just the
            vertices for a single <see cref="T:Google.Maps.Feature.Shape.Line" /> shape, and none of the associated metadata.  This
            removes the need for tight dependency from road lattice system on the map feature system.
            </remarks></member>
        <member name="T:Google.Maps.Unity.Intersections.RoadLatticeSegment.TaggedLocation">
            <summary>
            A vertex definition giving the location of the vertex and a tag indicating if the vertex
            if on a Tile boundary.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeSegment.TaggedLocation.OnBoundary">
            <summary>
            Whether this location is on a tile boundary.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeSegment.TaggedLocation.Source">
            <summary>
            Indicates if this node came from the server of was generated on the client, e.g., by
            segment intersection detection.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeSegment.TaggedLocation.Location">
            <summary>
            The location.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeSegment.TaggedLocation.#ctor(Google.Maps.Feature.Shape.GlobalCoordinate,System.Boolean,Google.Maps.Unity.Intersections.RoadLatticeNode.Source)">
            <summary>
            Constructor.
            </summary>
            <param name="location">Location in world space</param>
            <param name="onBoundary">Whether the location is on a tile boundary</param>
            <param name="source">Whether this location is from server or client generated</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeSegment.TaggedLocation.ToString">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeSegment.TaggedVertices">
            <summary>
            Vertices of this segment tagged with source and on-boundary status.
            </summary></member>
        <member name="P:Google.Maps.Unity.Intersections.RoadLatticeSegment.PlaceId">
            <summary>
            ID of the feature this RoadLatticeSegment represents.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeSegment.Source">
            <summary>
            The source <see cref="T:Google.Maps.Feature.Segment" /> from which the RoadLatticeSegment was generated.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeSegment.#ctor(System.Collections.Generic.IEnumerable{Google.Maps.Unity.Intersections.RoadLatticeSegment.TaggedLocation},Google.Maps.Feature.Segment)">
            <summary>
            Constructor.
            </summary>
            <param name="taggedLocations">
            A list of vertex locations, plus tags indicating if a vertex is on a tile boundary..
            </param>
            <param name="source">The source Segment from which to generate a RoadLatticeSegment.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeSegment.AddVertexAt(System.Int32,Google.Maps.Feature.Shape.GlobalCoordinate,System.Boolean,Google.Maps.Unity.Intersections.RoadLatticeNode.Source)">
            <summary>
            Inserts a vertex into this road lattice segment at the supplied index.
            </summary>
            <param name="index">The index that the inserted vertex will have.</param>
            <param name="location">The position of the inserted vertex.</param>
            <param name="onBoundary">The type of lattice node this vertex represents.</param>
            <param name="source">
            Whether the vertex came from the server or was generated on the client.
            </param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeSegment.FromLineMapFeature(Google.Maps.Feature.Segment,System.Int32)">
            <summary>
            Creates a road lattice segment from an indexed <see cref="T:Google.Maps.Feature.Shape.Line" /> in a
            <see cref="T:Google.Maps.Feature.Segment" />
            </summary>
            <param name="segment">The segment containing the indexed line.</param>
            <param name="index">The index of the source line in the supplied segment.</param>
            <returns>The constructed road lattice segment.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeSegment.FromSegmentMapFeature(Google.Maps.Feature.Segment)">
            <summary>
            Creates a collection of road lattice segments from a <see cref="T:Google.Maps.Feature.Segment" /> map feature.
            </summary>
            <param name="segment">The source Segment.</param>
            <returns>An array of generated RoadLatticeSegment objects.</returns></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeTools.PointQuadTree">
            <summary>
            Used by <see cref="M:Google.Maps.Unity.Intersections.RoadLatticeTools.ClusterNearbyClientNodes(Google.Maps.Unity.Intersections.RoadLattice,Google.Maps.Feature.MapTile)" /> for efficiently clustering
            nearby nodes. This is recycled to reduce garbage.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeTools.SegmentQuadTree">
            <summary>
            Used by <see cref="M:Google.Maps.Unity.Intersections.RoadLatticeTools.CalculateRoadLatticeSegmentIntersections(System.Collections.Generic.List{Google.Maps.Unity.Intersections.RoadLatticeSegment},Google.Maps.Feature.MapTile)" /> for efficiently finding
            line intersections. This is recycled to reduce garbage.
            </summary></member>
        <member name="F:Google.Maps.Unity.Intersections.RoadLatticeTools.Overlaps">
            <summary>
            Used by <see cref="M:Google.Maps.Unity.Intersections.RoadLatticeTools.CalculateRoadLatticeSegmentIntersections(System.Collections.Generic.List{Google.Maps.Unity.Intersections.RoadLatticeSegment},Google.Maps.Feature.MapTile)" /> for efficiently finding
            line intersections. This is recycled to reduce garbage.
            </summary></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeTools.RoadLatticeSegmentsFromTile(Google.Maps.Feature.MapTile)">
            <summary>
            Returns a list of <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeSegment" /> objects generated from the
            <see cref="T:Google.Maps.Feature.Segment" /> features in the supplied <see cref="T:Google.Maps.Feature.MapTile" />.
            </summary>
            <param name="tile">The tile from which to extract segments.</param>
            <returns>The list of generated road lattice segments.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeTools.AddTileToRoadLattice(Google.Maps.Unity.Intersections.RoadLattice,Google.Maps.Feature.MapTile,System.Boolean)">
            <summary>
            Adds a representation of each <see cref="T:Google.Maps.Feature.Segment" /> in the source <see cref="T:Google.Maps.Feature.MapTile" />
            to the supplied <see cref="T:Google.Maps.Unity.Intersections.RoadLattice" />.
            </summary>
            <param name="lattice">The lattice to augment.</param>
            <param name="tile">The source of Segments</param>
            <param name="findExtraIntersections">
            If true, an exhaustive search is performed for intersections that occur at positions that
            don't correspond to segment vertices.
            </param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeTools.GetPointAlongNodeChain(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,System.Single,Google.Maps.Unity.Intersections.RoadLatticeNode@,Google.Maps.Unity.Intersections.RoadLatticeNode@,Google.Maps.Unity.Intersections.RoadLatticeEdge.Flags)">
            <summary>
            Returns the coordinates found a given length along a node chain.
            </summary>
            <remarks>
            A node chain is defined by a sequence of connected nodes n0..nk where all nodes n1..nk-1
            have exactly two neighbors.
            </remarks>
            <param name="startNode">The node to start from.</param>
            <param name="nextNode">The next node to traverse in the chain.</param>
            <param name="length">The length along the node chain to return the coordinates of.</param>
            <param name="fromNode">Node A in the edge A-&gt;B that the returned coordinates lie on.</param>
            <param name="toNode">Node B in the edge A-&gt;B that the returned coordinates lie on.</param>
            <param name="stoppingFlags">
            Returns after encountering an edge with any of the given flags. <paramref name="fromNode" />
            and <paramref name="toNode" /> are set to the nodes of that edge, and the coordinates of
            <paramref name="fromNode" /> are returned.
            </param>
            <returns>The coordinates found.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeTools.InsertIntermediateNode(Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode,Google.Maps.Unity.Intersections.RoadLatticeNode)">
            <summary>
            Inserts a node between two connected nodes, removing existing edges between them.
            </summary>
            <param name="nodeA">The first node.</param>
            <param name="nodeB">The second node.</param>
            <param name="insertionNode">The insertion node.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeTools.CalculateRoadLatticeSegmentIntersections(System.Collections.Generic.List{Google.Maps.Unity.Intersections.RoadLatticeSegment},Google.Maps.Feature.MapTile)">
            <summary>
            Brute force non-endpoint intersections between a collection of
            <see cref="T:Google.Maps.Unity.Intersections.RoadLatticeSegment" />s, adding new vertices to segments at the point of
            calculated intersections.
            </summary>
            <param name="segments">The segments from which to calculate intersections.</param>
            <param name="tile">The source of the segments.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeTools.IntersectRoadLatticeSegments(Google.Maps.Unity.Intersections.RoadLatticeSegment,Google.Maps.Unity.Intersections.RoadLatticeSegment)">
            <summary>
            Calculate at most one intersection between the supplied segments, adding a new vertex to
            each segment where the intersection occurs.
            </summary>
            <param name="segmentA">First segment.</param>
            <param name="segmentB">Second segment.</param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeTools.ClusterNearbyClientNodes(Google.Maps.Unity.Intersections.RoadLattice,Google.Maps.Feature.MapTile)">
            <summary>
            Merges a local road lattice's client-generated nodes with all nearby nodes.
            This method does not support global road lattices (i.e. road lattices created by merging
            many other road lattices).
            </summary>
            <remarks>
            Among nodes generated from client-side exhaustive intersection testing, some which would
            otherwise be merged with an existing node sharing its position are instead slightly offset
            from their shared position. This can cause issues with road intersections where a node one
            would expect to have four neighbours may instead have two nodes with three different
            neighbours.
            Clusters of these 'offset nodes' are found by overlaying a rectangle on top of client node
            generated, and merging all nodes that fall inside of it.
            </remarks>
            <param name="lattice">The road lattice to modify.</param>
            <param name="tile">
            The map tile from which <paramref name="lattice" /> was generated.
            </param></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeTools.RectFromLine(UnityEngine.Vector2Int,UnityEngine.Vector2Int)">
            <summary>
            Returns the minimum <see cref="T:UnityEngine.RectInt" /> encapsulating the two given points.
            </summary>
            <param name="a">The first point.</param>
            <param name="b">The second point.</param>
            <returns>The minimum <see cref="T:UnityEngine.RectInt" /> encapsulating the two given points.</returns></member>
        <member name="M:Google.Maps.Unity.Intersections.RoadLatticeTools.GetProjectedTileBounds(Google.Maps.Feature.MapTile,System.Int32)">
            <summary>
            Returns the global mercator bounds of the given <see cref="T:Google.Maps.Feature.MapTile" /> projected to the
            given zoom level.
            </summary>
            <remarks>
            A projection is given by scaling each corner of <paramref name="tile" />'s bounds by 2^x,
            where x is given by the difference between <paramref name="toZoom" /> and the zoom level of
            <paramref name="tile" />.
            </remarks>
            <param name="tile">The map tile to return the projected bounds of.</param>
            <param name="toZoom">
            The zoom level to project the tile bounds to. The zoom level of <paramref name="tile" />
            is used instead if it is greater than <paramref name="toZoom" />.
            </param>
            <returns>
            The global mercator bounds of the given <see cref="T:Google.Maps.Feature.MapTile" /> projected to zoom level
            <paramref name="toZoom" />.
            </returns></member>
        <member name="M:Google.Maps.Unity.IUnityPlatformProvider.GetPlatform">
            <summary>
            Return type of Unity platform that is currently executing.
            </summary></member>
        <member name="T:Google.Maps.Unity.MeshBuilder">
            <summary>
            A builder that provides an easy interface for generating Unity Meshes.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.WithSubMeshCount(System.Int32,System.Boolean)">
            <summary>
            Creates an instance of a <see cref="T:Google.Maps.Unity.MeshBuilder" /> with specified number of submeshes.
            </summary>
            <param name="subMeshCount">Number of submeshes present in the <see cref="T:Google.Maps.Unity.MeshBuilder" />,
            clamped to 1 if smaller value are provided. Submeshes store distinct groupings of
            triangles, which use a shared vertex list.</param>
            <param name="use32BitIndexBuffers">Whether to use 32-bit index buffers.</param>
            <returns>An instance of a <see cref="T:Google.Maps.Unity.MeshBuilder" /> with specified number of submeshes.
            </returns></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.WithOneSubMesh(System.Boolean)">
            <summary>
            Creates an instance of a <see cref="T:Google.Maps.Unity.MeshBuilder" /> with one submesh.
            </summary>
            <param name="use32BitIndexBuffers">Whether to use 32-bit index buffers.</param>
            <returns>An instance of a <see cref="T:Google.Maps.Unity.MeshBuilder" /> with one submesh.</returns></member>
        <member name="F:Google.Maps.Unity.MeshBuilder.MaxVertices">
            <summary>
            The maximum number of vertices any mesh can have. This is a limit imposed by Unity, as it
            has a 16-bit vertex buffer.
            </summary></member>
        <member name="F:Google.Maps.Unity.MeshBuilder.MaxUVChannels">
            <summary>
            Unity supports a maximum of 8 UV channels.
            </summary></member>
        <member name="F:Google.Maps.Unity.MeshBuilder.Use32BitIndexBuffers">
            <summary>
            Whether to use 32-bit index buffers if <see cref="F:Google.Maps.Unity.MeshBuilder.MaxVertices" /> is exceeded when
            generating a mesh. If false, <see cref="M:Google.Maps.Unity.MeshBuilder.GenerateMesh" /> will return null instead.
            </summary></member>
        <member name="P:Google.Maps.Unity.MeshBuilder.SubMeshCount">
            <summary>
            Number of submeshes present in this <see cref="T:Google.Maps.Unity.MeshBuilder" />.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.#ctor(System.Int32,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="subMeshCount">
            Number of submeshes, clamped to 1 if smaller value are provided.
            </param>
            <param name="use32BitIndexBuffers">Whether to use 32-bit index buffers.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetVertexCount">
            <summary>
            Returns the number of vertices supplied to the MeshBuilder.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetNormalCount">
            <summary>
            Returns the number of normals supplied to the MeshBuilder.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetUVCount(System.Int32)">
            <summary>
            Returns the number of UV coordinates supplied to the MeshBuilder.
            </summary>
            <param name="channel">
            The UV channel in range [0..7] to get the number of coordinates from.
            </param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetTriangleCount">
            <summary>
            Returns the number of triangles contained in all submeshes.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetTriangleCount(System.Int32)">
            <summary>
            Returns the number of triangles in a particular submesh.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddVertex(UnityEngine.Vector3)">
            <summary>
            Adds a vertex to the MeshBuilder.
            </summary>
            <param name="vertex">The vertex to add.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddVertices(System.Collections.Generic.ICollection{UnityEngine.Vector3})">
            <summary>
            Adds a collection of vertices to the MeshBuilder
            </summary>
            <param name="vertices">The vertices to add.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddVertex(System.Single,System.Single,System.Single)">
            <summary>
            Adds a vertex to the MeshBuilder
            </summary>
            <param name="x">The x coordinate of the vertex.</param>
            <param name="y">The y coordinate of the vertex.</param>
            <param name="z">The z coordinate of the vertex.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetVertex(System.Int32)">
            <summary>
            Returns the vertex in the MeshBuilder at the specified index.
            </summary>
            <param name="index">The index of the vertex to retrieve.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.SetVertex(System.Int32,UnityEngine.Vector3)">
            <summary>
            Sets the vertex in the MeshBuilder at the specified index.
            </summary>
            <param name="index">The index of the vertex to set.</param>
            <param name="vertex">The vertex data to write to the MeshBuilder.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddNormals(System.Collections.Generic.ICollection{UnityEngine.Vector3})">
            <summary>
            Adds a range of normals to the MeshBuilder.
            </summary>
            <param name="normals">Normals.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddNormal(UnityEngine.Vector3)">
            <summary>
            Adds a normal to the MeshBuilder.
            </summary>
            <param name="normal">The normal to add.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddNormal(System.Single,System.Single,System.Single)">
            <summary>
            Add a normal to the MeshBuilder.
            </summary>
            <param name="x">The x coordinate of the normal.</param>
            <param name="y">The y coordinate of the normal.</param>
            <param name="z">The z coordinate of the normal.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddUV(UnityEngine.Vector4,System.Int32)">
            <summary>
            Adds a UV to the MeshBuilder.
            </summary>
            <param name="uv">The UV coordinates to add.</param>
            <param name="channel">The UV channel in range [0..7] to add the UV to.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddTriangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a triangle to the MeshBuilder.
            </summary>
            <param name="index1">The first vertex index of the triangle.</param>
            <param name="index2">The second vertex index of the triangle.</param>
            <param name="index3">The third vertex index of the triangle.</param>
            <param name="submesh">The submesh to add the triangle to.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddTriangles(System.Collections.Generic.ICollection{System.Int32},System.Int32)">
            <summary>
            Adds the specified triangle indices to the MeshBuilder. The number of indices must be
            divisible by 3 for triangles to be added.
            </summary>
            <param name="triangles">Triangles.</param>
            <param name="submesh">Submesh.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)">
            <summary>
            Adds a triangle to the MeshBuilder made up of the specified vertices.
            </summary>
            <param name="vertex1">The first vertex to add.</param>
            <param name="vertex2">The second vertex to add.</param>
            <param name="vertex3">The third vertex to add.</param>
            <param name="submesh">The submesh to add the triangle to.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetVertices">
            <summary>
            Returns the vertices stored in the MeshBuilder.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetNormals">
            <summary>
            Returns the normals stored in the MeshBuilder.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetUVs(System.Int32)">
            <summary>
            Returns the UVs stored in the MeshBuilder.
            </summary>
            <param name="channel">The UV channel in range [0..7] to get.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetTriangles(System.Int32)">
            <summary>
            Returns the triangles stored in the MeshBuilder.
            </summary>
            <param name="submesh">The submesh to retrieve.</param></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GetTriangles">
            <summary>
            Returns an array of triangle indexes, with all submeshes collapsed into one triangle list.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.GenerateMesh">
            <summary>
            Generates a Unity Mesh that corresponds to the data supplied to the MeshBuilder. Null is
            returned if the data supplied to the MeshBuilder would form an invalid Mesh in Unity.
            </summary>
            <remarks>
            Empty submeshes are filtered out to prevent errors on iOS builds relating to dynamic
            batching of empty submeshes.
            </remarks></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.Clear">
            <summary>
            Clears all vertices, normals, UVs, and triangles added to this <see cref="T:Google.Maps.Unity.MeshBuilder" />,
            so this <see cref="T:Google.Maps.Unity.MeshBuilder" /> can be reused.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshBuilder.AddUpFacingTriangleFromIndices(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a triangle ensuring that the winding order is such that the triangle's normal faces up,
            that is, along the positive y-axis.
            </summary>
            <param name="i1">Index for first triangle vertex.</param>
            <param name="i2">Index for second triangle vertex.</param>
            <param name="i3">Index for third triangle vertex.</param>
            <param name="submesh">The submesh in which to add the triangle.</param></member>
        <member name="T:Google.Maps.Unity.MeshUtils">
            <summary>
            A collection of utility functions for operating on Unity meshes.
            </summary></member>
        <member name="M:Google.Maps.Unity.MeshUtils.CombineSubMeshes(UnityEngine.GameObject,UnityEngine.GameObject)">
            <summary>
            Combines the meshes of a target and source mesh, each of which both have 2 submeshes, while
            preserving the submeshes, and preserving the world space location of source mesh.
            </summary>
            <remarks>
            After calling this method the target object will have two submeshes, with each submesh being
            the result of merging the corresponding submesh from source and target.
            objects.
            </remarks>
            <param name="target">The target object.</param>
            <param name="source">The source object</param>
            <exception cref="T:System.ArgumentException">If the number of submeshes is not incorrect. This
            function should never be called with such GameObjects.</exception></member>
        <member name="M:Google.Maps.Unity.MeshUtils.CombineUntransformedSubMeshesWithOffset(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector3)">
            <summary>
            Merges the submeshes from source to target in target local space using the supplied offset.
            </summary>
            <remarks>
            Merges the source mesh onto the target mesh without considering the current world space
            transform of the target, but adds the supplied offset to the effective position of source
            before merging. This is in contrast to <see cref="M:Google.Maps.Unity.MeshUtils.CombineSubMeshes(UnityEngine.GameObject,UnityEngine.GameObject)" />, which merges the
            source mesh onto the target incorporating current world space relative transforms (i.e.,
            takes into account the relative positioning etc. of the meshes in world space).
            </remarks>
            <param name="target">The target onto which to merge submeshes from source.</param>
            <param name="source">The source of the merged submeshes.</param>
            <param name="offset">An offset to add to the vertices of source before merging.</param></member>
        <member name="M:Google.Maps.Unity.MeshUtils.CombineSubmeshesWithTransform(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Matrix4x4)">
            <summary>
            Combines the meshes of a target and source mesh, each of which both have 2 submeshes, using
            the local coordinate space of each mesh, but transforming source mesh with the supplied
            transformation matrix before merging.
            </summary>
            <remarks>
            Meshes are merged using their respective local spaces, i.e., generating vertices that are
            relative to the respective meshes origin, but the source vertices are transformed by the
            supplied matrix before merging. This can be used to combine meshes while maintaining world
            space relative position by calculating the transform matrix from source local space to
            target local space (as done in <see cref="M:Google.Maps.Unity.MeshUtils.CombineSubMeshes(UnityEngine.GameObject,UnityEngine.GameObject)" />) or using any arbitrary local
            space relative transform, such as the relative offset used in
            <see cref="M:Google.Maps.Unity.MeshUtils.CombineUntransformedSubMeshesWithOffset(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector3)" />.
            </remarks>
            <param name="target">The target mesh object onto which the merge is performed.</param>
            <param name="source">The source mesh object.</param>
            <param name="transformation">The transformation applied to source mesh vertices.</param>
            <exception cref="T:System.ArgumentException">If invalid meshes are passed.</exception></member>
        <member name="T:Google.Maps.Unity.MetadataRegister">
            <summary>
            A register for associating metadata objects with <see cref="T:UnityEngine.GameObject" />s.
            </summary></member>
        <member name="F:Google.Maps.Unity.MetadataRegister.Core">
            <summary>
            Object providing the core functionality for this class. Must be added to a game object
            with a <see cref="T:Google.Maps.MapsService" /> attached.
            </summary></member>
        <member name="M:Google.Maps.Unity.MetadataRegister.AddMetadata(UnityEngine.GameObject,Google.Maps.Unity.Metadata.IMetadata)">
            <summary>
            Add a metadata object to a given target object of type *T*.
            </summary>
            <param name="target">
            The target object to which the metadata object should be added.
            </param>
            <param name="metadataObj">The metadata object.</param></member>
        <member name="M:Google.Maps.Unity.MetadataRegister.GetMetadata``1(UnityEngine.GameObject)">
            <summary>
            Enumerates all of the metadata objects of type *MT* that are associated with the given
            target object of type *T*. Respects subtyping.
            </summary>
            <param name="target">
            The target object for which to look for an associated metadata object.
            </param>
            <typeparam name="MT">The type of the metadata objects.</typeparam></member>
        <member name="M:Google.Maps.Unity.MetadataRegister.GetGameObjectsByMetadataType``1">
            <summary>
            Enumerate all of the target objects containing one or more metadata objects of the given
            type. Respects subtyping.
            </summary>
            <typeparam name="MT">The type of metadata objects to enumerate.</typeparam></member>
        <member name="M:Google.Maps.Unity.MetadataRegister.RemoveMetadataByGameObject(UnityEngine.GameObject)">
            <summary>
            Remove all the metadata associated with the given game object.
            </summary></member>
        <member name="T:Google.Maps.Unity.MetadataRegisterCore`1">
            <summary>
            Associate metadata objects with target objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.MetadataRegisterCore`1.NestedMetadataMap">
            <summary>
            A map from each concrete type to another map which maps target objects of type *T* to a
            set of instances of the concrete type from the outer map. The inner map is referred to
            as the "target-to-metadata" map in this source file.
            </summary></member>
        <member name="F:Google.Maps.Unity.MetadataRegisterCore`1.SubTypeUpperClosure">
            <summary>
            The upper closure of all the concrete types (over the subtype relation) against which a
            metadata object has been registered.
            </summary></member>
        <member name="M:Google.Maps.Unity.MetadataRegisterCore`1.AddMetadata(`0,System.Object)">
            <summary>
            Add a metadata object to a given target object of type *T*.
            </summary>
            <param name="target">
            The target object to which the metadata object should be added.
            </param>
            <param name="metadataObj">The metadata object.</param></member>
        <member name="M:Google.Maps.Unity.MetadataRegisterCore`1.RemoveMetadata(`0,System.Object)">
            <summary>
            Remove a metadata object from a target object.
            </summary>
            <param name="target">The target object to remove the metadata object from.</param>
            <param name="metadataObj">The metadata object to remove.</param>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            The target doesn't contain the given metadata object.
            </exception></member>
        <member name="M:Google.Maps.Unity.MetadataRegisterCore`1.GetTargetToMetadataMaps(System.Type)">
            <summary>
            Enumerate the target-to-metadata maps for all the subtypes of *type*.
            </summary>
            <param name="type">The type whose subtypes will be enumerated.</param></member>
        <member name="M:Google.Maps.Unity.MetadataRegisterCore`1.GetMetadata``1(`0)">
            <summary>
            Enumerates all of the metadata objects of type *MT* that are associated with the given
            target object of type *T*. Respects subtyping.
            </summary>
            <param name="target">
            The target object for which to look for an associated metadata object.
            </param>
            <typeparam name="MT">The type of the metadata objects.</typeparam></member>
        <member name="M:Google.Maps.Unity.MetadataRegisterCore`1.GetObjectsByMetadataType``1">
            <summary>
            Enumerate all of the target objects containing one or more metadata objects of the given
            type. Respects subtyping.
            </summary>
            <typeparam name="MT">The type of metadata objects to enumerate.</typeparam></member>
        <member name="M:Google.Maps.Unity.MetadataRegisterCore`1._GetObjectsByMetadataType``1">
            <summary>
            Enumerate all of the target objects containing one or more metadata objects of the given
            type. Respects subtyping.
            </summary>
            <typeparam name="MT">The type of metadata objects to enumerate.</typeparam></member>
        <member name="M:Google.Maps.Unity.MetadataRegisterCore`1.RemoveMetadataByGameObject(`0)">
            <summary>
            Clear all metadata for given target object.
            </summary>
            <param name="target">Target to clear of metadata.</param></member>
        <member name="T:Google.Maps.Unity.Metadata.MetadataManager">
            <summary>
            Manages the metadata associated with game objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.Metadata.MetadataManager.FinalizerRegister">
            <summary>
            Used to clean up metadata when game objects are finalized.
            </summary></member>
        <member name="F:Google.Maps.Unity.Metadata.MetadataManager.MetadataOptions">
            <summary>
            Used to add metadata to game objects.
            </summary></member>
        <member name="M:Google.Maps.Unity.Metadata.MetadataManager.#ctor(Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},Google.Maps.MetadataOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="finalizerRegister">Finalizer register.</param>
            <param name="metadataOptions">Metadata options.</param></member>
        <member name="M:Google.Maps.Unity.Metadata.MetadataManager.AddMetadata``2(UnityEngine.GameObject,``1)">
            <summary>
            Add some metadata to a game object using the configured method.
            </summary>
            <param name="gameObject">The game object to add the metadata to.</param>
            <param name="feature">The map feature the game object was created from.</param>
            <typeparam name="CT">Unity component type</typeparam>
            <typeparam name="FT">Feature type</typeparam></member>
        <member name="T:Google.Maps.Unity.Metadata.IGameObjectMetadata">
            <summary>
            Metadata for a game object created from a map feature.
            </summary></member>
        <member name="P:Google.Maps.Unity.Metadata.IGameObjectMetadata.AbstractMapFeature">
            <summary>
            The map feature used to create this game object.
            </summary></member>
        <member name="T:Google.Maps.Unity.Metadata.GameObjectMetadata`1">
            <summary>
            Metadata for a game object created from a map feature.
            </summary></member>
        <member name="F:Google.Maps.Unity.Metadata.GameObjectMetadata`1.MapFeature">
            <summary>
            The map feature used to create this game object.
            </summary></member>
        <member name="M:Google.Maps.Unity.Metadata.GameObjectMetadata`1.#ctor(`0)">
            <summary>
            Constructor.
            </summary></member>
        <member name="P:Google.Maps.Unity.Metadata.GameObjectMetadata`1.AbstractMapFeature">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.Metadata.IMetadata">
            <summary>
            Metadata that can be added to an object using <see cref="T:Google.Maps.Unity.MetadataRegister" />.
            </summary></member>
        <member name="T:Google.Maps.Unity.UnityPlatformProvider">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.UnityPlatformProvider.GetPlatform">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.RenderOrderManager">
            <summary>
            Manages the attribute <see cref="P:UnityEngine.Renderer.sortingOrder" /> for registered game objects
            according to the supplied z-order and the type of feature the game object represents.
            </summary></member>
        <member name="F:Google.Maps.Unity.RenderOrderManager.NonBasemapSortingOrder">
            <summary>
            The sorting order value to use for non-basemap features. These don't have a z-order, and
            are typically drawn on top of the base map.
            </summary></member>
        <member name="T:Google.Maps.Unity.RenderOrderManager.ZOrderingGroup">
            <summary>
            A group of objects that are mutually ordered by z-order.
            </summary></member>
        <member name="F:Google.Maps.Unity.RenderOrderManager.ZOrderingGroup.OrderPreservingMap">
            <summary>
            An order-preserving map from z-order to sorting order.
            </summary></member>
        <member name="F:Google.Maps.Unity.RenderOrderManager.ZOrderingGroup.GameObjects">
            <summary>
            The set of objects belonging to this group.
            </summary></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.ZOrderingGroup.#ctor(Google.Maps.Util.OrderPreservingMap)">
            <summary>
            Constructor.
            </summary>
            <param name="orderPreservingMap">The order preserving map for this group.</param></member>
        <member name="F:Google.Maps.Unity.RenderOrderManager.FinalizerRegister">
            <summary>
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </summary></member>
        <member name="F:Google.Maps.Unity.RenderOrderManager.ZOrders">
            <summary>
            The z-orders for the registered objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.RenderOrderManager.RegionZOrderingGroup">
            <summary>
            The z-ordering group for regions. Drawn below roads.
            </summary></member>
        <member name="F:Google.Maps.Unity.RenderOrderManager.RoadZOrderingGroup">
            <summary>
            The z-ordering group for roads. Drawn above regions and road borders.
            </summary></member>
        <member name="F:Google.Maps.Unity.RenderOrderManager.IntersectionZOrderingGroup">
            <summary>
            The z-ordering group for roads. Drawn above roads.
            </summary></member>
        <member name="F:Google.Maps.Unity.RenderOrderManager.ZOrderingGroups">
            <summary>
            All of the z-ordering groups.
            </summary></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.SetSortingOrder(UnityEngine.GameObject,System.Int32)">
            <summary>
            Set the sorting order of a <see cref="T:UnityEngine.GameObject" />'s <see cref="T:UnityEngine.Renderer" /> component,
            if it has one.
            </summary></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.AddZOrderingGroup(System.Int32,System.Int32)">
            <summary>
            Add a new z-ordering group to this instance with the specified minimum and maximum
            sorting orders.
            </summary>
            <param name="minSortingOrder">The minimum sorting order for this group.</param>
            <param name="maxSortingOrder">The maximum sorting order for this group.</param>
            <returns>The new <see cref="T:Google.Maps.Unity.RenderOrderManager.ZOrderingGroup" /> instance.</returns></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.#ctor(Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="basemapMin">
            The minimum sorting order value to allocate to the managed basemap game objects.
            </param>
            <param name="basemapMax">
            The maximum sorting order value to allocate to the managed basemap game objects.
            </param>
            <param name="nonBasemap">
            The sorting order value to allocate to managed non-basemap game objects.
            </param></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.RegisterRegionGameObject(UnityEngine.GameObject,System.Int32)">
            <summary>
            Register a game object representing a region.
            </summary>
            <param name="gameObject">The game object to register.</param>
            <param name="zOrder">
            The z-order value of the feature corresponding to the game object.
            </param></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.RegisterRoadGameObject(UnityEngine.GameObject,System.Int32)">
            <summary>
            Register a game object representing a road.
            </summary>
            <param name="gameObject">The game object to register.</param>
            <param name="zOrder">
            The z-order value of the feature corresponding to the game object.
            </param></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.RegisterIntersectionGameObject(UnityEngine.GameObject,System.Int32)">
            <summary>
            Register a game object representing an intersection.
            </summary>
            <param name="gameObject">The game object to register.</param>
            <param name="zOrder">
            The z-order value of the feature corresponding to the game object.
            </param></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.RegisterGameObjectWithGroup(UnityEngine.GameObject,System.Int32,Google.Maps.Unity.RenderOrderManager.ZOrderingGroup)">
            <summary>
            Register a game object with a z-ordering group.
            </summary>
            <param name="gameObject">The game object to register.</param>
            <param name="zOrder">
            The z-order value of the feature corresponding to the game object.
            </param>
            <param name="zOrderingGroup">The z-ordering group to place the game object into.</param></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.OnGameObjectDestroy(UnityEngine.GameObject)">
            <summary>
            Handle the destruction of a game object that is registered with this class by cleaning
            up any associated entries. Note that this doesn't remove unused z-orders from the
            order-preserving maps.
            </summary>
            <param name="gameObject">The game object being destroyed.</param></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.RegisterNonBasemapGameObject(UnityEngine.GameObject)">
            <summary>
            Register a non-basemap game object. Note that the corresponding features have no z-order.
            </summary>
            <param name="gameObject">The game object to register.</param></member>
        <member name="M:Google.Maps.Unity.RenderOrderManager.OnRemap(System.Object,Google.Maps.Util.OrderPreservingMap.RemapArgs)">
            <summary>
            Handle one of the order-preserving maps being remapped. In this case, the sorting order
            for existing objects might have changed, so we need to go back and update all the
            relevant renderers.
            </summary></member>
        <member name="T:Google.Maps.Unity.StaticBatcher">
            <summary>
            Provides a mechanism for statically batching GameObjects generated by the SDK.
            </summary></member>
        <member name="F:Google.Maps.Unity.StaticBatcher.GameObjects">
            <summary>
            Collects the GameObjects to be statically batched.
            </summary></member>
        <member name="M:Google.Maps.Unity.StaticBatcher.Add(UnityEngine.GameObject)">
            <summary>
            Adds a GameObject to the static batcher.
            </summary>
            <param name="gameObject">The GameObject to be statically batched.</param></member>
        <member name="M:Google.Maps.Unity.StaticBatcher.Combine(UnityEngine.GameObject)">
            <summary>
            Statically batches all the GameObjects that have been collected.
            </summary>
            <param name="root">Treated as the parent of all the GameObjects that will be statically
            batched.</param></member>
        <member name="M:Google.Maps.Unity.StaticBatcher.ShouldBatch(System.Boolean,Google.Maps.Unity.StaticBatchingPolicyType)">
            <summary>
            Determines whether a <see cref="T:UnityEngine.GameObject" /> should be batched based on the global default
            setting for static batching, and the local batching policy.
            </summary>
            <param name="globalDefault">The global default of whether or not to apply static batching to
            created <see cref="T:UnityEngine.GameObject" />s.</param>
            <param name="localBatchingPolicy">The batching policy for a particular
            <see cref="T:UnityEngine.GameObject" />. This can be used to override the global default policy if the user
            desires.</param>
            <returns>
            Returns true if globalDefault is true and localBatchingPolicy is not equal to
            <see cref="F:Google.Maps.Unity.StaticBatchingPolicyType.DoNotBatch" />, or if globalDefault is false and
            localBatchingPolicy is equal to <see cref="F:Google.Maps.Unity.StaticBatchingPolicyType.Batch" />.
            </returns></member>
        <member name="T:Google.Maps.Unity.StaticBatchingPolicyType">
            <summary>
            A set of values that specify whether created GameObjects are
            statically-batched by %Unity.
            </summary></member>
        <member name="F:Google.Maps.Unity.StaticBatchingPolicyType.Default">
            <summary>
            Use the default static-batching policy set in
            <see cref="F:Google.Maps.MapsService.StaticBatching" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.StaticBatchingPolicyType.Batch">
            <summary>
            Attempt to statically-batch the GameObject created from this MapFeature.
            This value overrides the global default set in
            <see cref="F:Google.Maps.MapsService.StaticBatching" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.StaticBatchingPolicyType.DoNotBatch">
            <summary>
            Do not attempt to statically-batch the GameObject created from this
            MapFeature. This value overrides the global default set in
            <see cref="F:Google.Maps.MapsService.StaticBatching" />.
            </summary></member>
        <member name="T:Google.Maps.Unity.UnityPlatform">
            <summary>
            Enumeration representing Unity platforms.
            </summary></member>
        <member name="F:Google.Maps.Unity.UnityPlatform.AndroidPlayer">
            <summary>
            Unity Android player.
            </summary></member>
        <member name="F:Google.Maps.Unity.UnityPlatform.IOSPlayer">
            <summary>
            Unity IOS Player.
            </summary></member>
        <member name="F:Google.Maps.Unity.UnityPlatform.Unspecified">
            <summary>
            Platform unspecified.
            </summary></member>
        <member name="T:Google.Maps.Unity.UnityPlatformUtils">
            <summary>
            Utilities for <see cref="T:Google.Maps.Unity.UnityPlatform" /> enumeration.
            </summary></member>
        <member name="M:Google.Maps.Unity.UnityPlatformUtils.IsMobile(Google.Maps.Unity.UnityPlatform)">
            <summary>
            Returns true if <see cref="T:Google.Maps.Unity.UnityPlatform" /> represents a mobile platform.
            </summary>
            <param name="platform">The platform to check.</param></member>
        <member name="T:Google.Maps.Unity.UnityTerrainState">
            <summary>
            Describes the state of a currently loaded <see cref="N:Google.Maps.Terrain" /> GameObject.
            </summary></member>
        <member name="F:Google.Maps.Unity.UnityTerrainState.Terrain">
            <summary>
            The <see cref="T:UnityEngine.Terrain" /> object for this state.
            </summary></member>
        <member name="F:Google.Maps.Unity.UnityTerrainState.LeftEdgeAltitudes">
            <summary>
            The raw altitudes along the left (west) edge of <see cref="N:Google.Maps.Terrain" />, in meters above mean
            sea level.
            </summary>
            <remarks>
            This is stored independently to improve performance. Extracting altitudes directly from
            <see cref="N:Google.Maps.Terrain" /> would require de-normalization. The extraction process is also
            markedly slower than reading straight from an array.
            </remarks></member>
        <member name="F:Google.Maps.Unity.UnityTerrainState.TopEdgeAltitudes">
            <summary>
            The raw altitudes along the top (north) edge of <see cref="N:Google.Maps.Terrain" />, in meters above mean
            sea level.
            </summary>
            <remarks>
            This is stored independently to improve performance. Extracting altitudes directly from
            <see cref="N:Google.Maps.Terrain" /> would require de-normalization. The extraction process is also
            markedly slower than reading straight from an array.
            </remarks></member>
        <member name="F:Google.Maps.Unity.UnityTerrainState.RightEdgeAltitudes">
            <summary>
            The raw altitudes along the right (east) edge of <see cref="N:Google.Maps.Terrain" />, in meters above mean
            sea level.
            </summary>
            <remarks>
            This is stored independently to improve performance. Extracting altitudes directly from
            <see cref="N:Google.Maps.Terrain" /> would require de-normalization. The extraction process is also
            markedly slower than reading straight from an array.
            </remarks></member>
        <member name="F:Google.Maps.Unity.UnityTerrainState.BottomEdgeAltitudes">
            <summary>
            The raw altitudes along the bottom (south) edge of <see cref="N:Google.Maps.Terrain" />, in meters above
            mean sea level.
            </summary>
            <remarks>
            This is stored independently to improve performance. Extracting altitudes directly from
            <see cref="N:Google.Maps.Terrain" /> would require de-normalization. The extraction process is also
            markedly slower than reading straight from an array.
            </remarks></member>
        <member name="M:Google.Maps.Unity.UnityTerrainState.#ctor(UnityEngine.Terrain,System.Single[0:,0:])">
            <summary>
            Constructor.
            </summary>
            <param name="terrain">The terrain object to save state for.</param>
            <param name="altitudes">The terrain altitudes in meters above mean sea level.</param></member>
        <member name="T:Google.Maps.Unity.UvSpace3D">
            <summary>
            Stores a 3D reference space for UV coordinates.
            Note: the UAxis and VAxis do not need to be normalized or even the same length. Unexpected
            results will occur if the axes are not linearly independent (i.e. if they point in the same
            direction)
            </summary></member>
        <member name="F:Google.Maps.Unity.UvSpace3D.Origin">
            <summary>
            The three dimensional origin of the UvSpace
            </summary></member>
        <member name="F:Google.Maps.Unity.UvSpace3D.UAxis">
            <summary>
            The axis used to calculate the U component of texture coordinates.
            </summary></member>
        <member name="F:Google.Maps.Unity.UvSpace3D.VAxis">
            <summary>
            The axis used to calculate the V component of texture coordinates.
            </summary></member>
        <member name="M:Google.Maps.Unity.UvSpace3D.#ctor(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Constructor.
            </summary>
            <param name="origin">The origin.</param>
            <param name="uAxis">The U-axis.</param>
            <param name="vAxis">The V-Axis.</param></member>
        <member name="M:Google.Maps.Unity.UvSpace3D.UvForVertex(UnityEngine.Vector3)">
            <summary>
            Calculates the UV coordinates for a vertex relative to this UvSpace.
            </summary>
            <remarks>
            Projects the supplied vertex into the (UAxis, VAxis) plane and returns the coordinates of
            the projected point relative to the UV axes.
            </remarks>
            <param name="vertex">The vertex to calculate the UV coordinate for.</param></member>
        <member name="F:Google.Maps.Unity.UvSpace3D.Default">
            <summary>
            A default, origin centered, axis aligned UV space.
            </summary></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.AreaWaterGameObjectFactory">
            <summary>
            Factory for creating GameObjects from <see cref="T:Google.Maps.Feature.AreaWater" />s.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.AreaWaterGameObjectFactory.WaterMaterial">
            <summary>
            Default color for water.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.AreaWaterGameObjectFactory.AreaFactory">
            <summary>
            Generates a Unity Mesh during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.AreaWaterGameObjectFactory.Events">
            <summary>
            Events to invoke during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.AreaWaterGameObjectFactory.StaticBatcher">
            <summary>
            Handles the static batching of all created GameObjects marked as static.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.AreaWaterGameObjectFactory.MetadataManager">
            <summary>
            Used to add metadata to game objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.AreaWaterGameObjectFactory.GameObjectStyleApplicator">
            <summary>
            Used to apply properties of <see cref="T:Google.Maps.GameObjectStyle" />s to <see cref="T:UnityEngine.GameObject" />s.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.AreaWaterGameObjectFactory.#ctor(Google.Maps.Event.AreaWaterEvents,Google.Maps.Unity.StaticBatcher,Google.Maps.Unity.AreaMeshFactory,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},Google.Maps.MetadataOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="events">WaterEvents to invoke during GameObject creation.</param>
            <param name="staticBatcher">Manages the batching of GameObjects marked as static.</param>
            <param name="areaFactory">The AreaFactory used to create Areas.</param>
            <param name="finalizerRegister">Finalizer register.</param>
            <param name="metadataOptions">Metadata options.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.AreaWaterGameObjectFactory.CreateGameObject(Google.Maps.Feature.AreaWater,Google.Maps.Feature.Style.AreaWaterStyle,System.Boolean,UnityEngine.GameObject,UnityEngine.GameObject)">
            <summary>
            Attempts to create a Unity GameObject from the specified AreaWater and Style objects.
            </summary>
            <remarks>
            Returns null if GameObject creation was cancelled by a WillCreate event handler.
            </remarks>
            <param name="water">AreaWater used for construction.</param>
            <param name="style">Style to apply to the generated GameObject.</param>
            <param name="globalStaticBatchEnabled">When true, will statically batch created GameObjects
            unless otherwise specified in the corresponding WillCreate event args.</param>
            <param name="root">Root <see cref="T:UnityEngine.GameObject" />.</param>
            <param name="parent">Parent of the generated GameObject.</param></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.ExtrudedStructureGameObjectFactory">
            <summary>
            Factory for creating GameObjects from <see cref="T:Google.Maps.Feature.ExtrudedStructure" />s.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.ExtrudedStructureGameObjectFactory.ExtrudedAreaFactory">
            <summary>
            Generates a Unity Mesh during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.ExtrudedStructureGameObjectFactory.Events">
            <summary>
            Events to invoke during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.ExtrudedStructureGameObjectFactory.StaticBatcher">
            <summary>
            Handles the static batching of all created GameObjects marked as static.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.ExtrudedStructureGameObjectFactory.MetadataManager">
            <summary>
            Used to add metadata to game objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.ExtrudedStructureGameObjectFactory.GameObjectStyleApplicator">
            <summary>
            Used to apply properties of <see cref="T:Google.Maps.GameObjectStyle" />s to <see cref="T:UnityEngine.GameObject" />s.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.ExtrudedStructureGameObjectFactory.#ctor(Google.Maps.Event.ExtrudedStructureEvents,Google.Maps.Unity.StaticBatcher,Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},Google.Maps.MetadataOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="events">ExtrudedStructureEvents to invoke during GameObject creation.</param>
            <param name="staticBatcher">Manages the batching of GameObjects marked as static.</param>
            <param name="renderOrderManager">
            Render order manager against which to register game objects created by this factory.
            </param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="metadataOptions">Metadata options.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.ExtrudedStructureGameObjectFactory.CreateGameObject(Google.Maps.Feature.ExtrudedStructure,Google.Maps.Feature.Style.ExtrudedStructureStyle,System.Boolean,UnityEngine.Vector3,System.Single,UnityEngine.GameObject,UnityEngine.GameObject,Google.Maps.Feature.MapTile)">
            <summary>
            Attempts to create a Unity GameObject from the specified MapFeature and Style objects.
            </summary>
            <remarks>
            Returns null if GameObject creation was cancelled by a WillCreate event handler.
            </remarks>
            <param name="extrudedStructure">ExtrudedStructure used for construction.</param>
            <param name="style">Style to apply to the generated GameObject.</param>
            <param name="globalStaticBatchEnabled">When true, will statically batch created GameObjects
            unless otherwise specified in the corresponding WillCreate event args.</param>
            <param name="offset">
            An offset to apply to the transform of the constructed <see cref="T:Google.Maps.Feature.ExtrudedStructure" />.
            </param>
            <param name="minBaseHeight">
            The minimum height of any base-level extrusions. If any extrusions at the bottom-most level
            of the <see cref="T:Google.Maps.Feature.ExtrudedStructure" /> are shorter than this value, an additional margin
            will be added to each contained extrusion, moving the entire building up whilst maintaining
            its profile.
            </param>
            <param name="root">Root of all <see cref="T:UnityEngine.GameObject" />s</param>
            <param name="parent">Parent of the generated <see cref="T:UnityEngine.GameObject" />.</param>
            <param name="mapTile">The MapTile containing the extrudedStructure</param></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.IGameObjectFactory">
            <summary>
            Factory interface for creating GameObjects from <see cref="T:Google.Maps.Feature.MapFeature" />s.
            </summary></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.ModeledStructureGameObjectFactory">
            <summary>
            Factory for creating GameObjects from <see cref="T:Google.Maps.Feature.ModeledStructure" />s.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.ModeledStructureGameObjectFactory.ModeledVolumeFactory">
            <summary>
            Generates a Unity Mesh during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.ModeledStructureGameObjectFactory.Events">
            <summary>
            Events to invoke during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.ModeledStructureGameObjectFactory.StaticBatcher">
            <summary>
            Handles the static batching of all created GameObjects marked as static.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.ModeledStructureGameObjectFactory.MetadataManager">
            <summary>
            Used to add metadata to game objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.ModeledStructureGameObjectFactory.GameObjectStyleApplicator">
            <summary>
            Used to apply properties of <see cref="T:Google.Maps.GameObjectStyle" />s to <see cref="T:UnityEngine.GameObject" />s.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.ModeledStructureGameObjectFactory.#ctor(Google.Maps.Event.ModeledStructureEvents,Google.Maps.Unity.StaticBatcher,Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},Google.Maps.MetadataOptions,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="events">ModeledStructureEvents to invoke during GameObject creation.</param>
            <param name="staticBatcher">Manages the batching of GameObjects marked as static.</param>
            <param name="renderOrderManager">
            Render order manager against which to register game objects created by this factory.
            </param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="metadataOptions">Metadata options.</param>
            <param name="use32BitMeshIndexBuffers">
            Whether to use 32-bit index buffers when creating a mesh (i.e. support more than 65536
            vertices).
            </param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.ModeledStructureGameObjectFactory.CreateGameObject(Google.Maps.Feature.ModeledStructure,Google.Maps.Feature.Style.ModeledStructureStyle,System.Boolean,UnityEngine.Vector3,UnityEngine.GameObject,UnityEngine.GameObject)">
            <summary>
            Attempts to create a Unity GameObject from the specified MapFeature and Style objects.
            </summary>
            <remarks>
            Returns null if GameObject creation was cancelled by a WillCreate event handler.
            </remarks>
            <param name="modeledStructure">ModeledStructure used for construction.</param>
            <param name="style">Style to apply to the generated GameObject.</param>
            <param name="globalStaticBatchEnabled">When true, will statically batch created GameObjects
            unless otherwise specified in the corresponding WillCreate event args.</param>
            <param name="offset">
            An offset to apply to the transform of the constructed <see cref="T:Google.Maps.Feature.ModeledStructure" />.
            </param>
            <param name="root">Root <see cref="T:UnityEngine.GameObject" />.</param>
            <param name="parent">Parent of the generated <see cref="T:UnityEngine.GameObject" />.</param></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.RegionGameObjectFactory">
            <summary>
            Factory for creating GameObjects from <see cref="T:Google.Maps.Feature.Region" />s.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.RegionGameObjectFactory.AreaFactory">
            <summary>
            Generates a Unity Mesh during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.RegionGameObjectFactory.Events">
            <summary>
            Events to invoke during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.RegionGameObjectFactory.StaticBatcher">
            <summary>
            Handles the static batching of all created GameObjects marked as static.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.RegionGameObjectFactory.UsageTypeMaterials">
            <summary>
            Lazily-populated dictionary mapping usage types to materials.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.RegionGameObjectFactory.MetadataManager">
            <summary>
            Used to add metadata to game objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.RegionGameObjectFactory.GameObjectStyleApplicator">
            <summary>
            Used to apply properties of <see cref="T:Google.Maps.GameObjectStyle" />s to <see cref="T:UnityEngine.GameObject" />s.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.RegionGameObjectFactory.#ctor(Google.Maps.Event.RegionEvents,Google.Maps.Unity.StaticBatcher,Google.Maps.Unity.AreaMeshFactory,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},Google.Maps.MetadataOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="events">RegionEvents to invoke during GameObject creation.</param>
            <param name="staticBatcher">Manages the batching of GameObjects marked as static.</param>
            <param name="areaFactory">The AreaFactory used to create Areas.</param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="metadataOptions">Metadata options.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.RegionGameObjectFactory.GetOrCreateDefaultRegionMaterial(Google.Maps.Feature.Region)">
            <summary>
            Get a base map <see cref="T:UnityEngine.Material" /> for a <see cref="T:Google.Maps.Feature.Region" /> with the default color
            for its <see cref="T:Google.Maps.Feature.RegionMetadata.UsageType" />.
            </summary>
            <returns>A base map <see cref="T:UnityEngine.Material" /> with the appropriate default color.</returns></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.RegionGameObjectFactory.CreateGameObject(Google.Maps.Feature.Region,Google.Maps.Feature.Style.RegionStyle,System.Boolean,UnityEngine.GameObject,UnityEngine.GameObject)">
            <summary>
            Attempts to create a Unity GameObject from the specified MapFeature and Style objects.
            </summary>
            <remarks>
            Returns null if GameObject creation was cancelled by a WillCreate event handler.
            </remarks>
            <param name="region">Region used for construction.</param>
            <param name="style">Style to apply to the generated GameObject.</param>
            <param name="globalStaticBatchEnabled">When true, will statically batch created GameObjects
            unless otherwise specified in the corresponding WillCreate event args.</param>
            <param name="root">Root <see cref="T:UnityEngine.GameObject" />.</param>
            <param name="parent">Parent of the generated <see cref="T:UnityEngine.GameObject" />.</param></member>
        <member name="T:Google.Maps.Unity.GameObjectFactory.SegmentGameObjectFactory">
            <summary>
            Factory for creating GameObjects from <see cref="T:Google.Maps.Feature.Segment" />s.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.SegmentGameObjectFactory.LineGroupFactory">
            <summary>
            Generates a Unity Mesh during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.SegmentGameObjectFactory.Events">
            <summary>
            Events to invoke during GameObject creation.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.SegmentGameObjectFactory.StaticBatcher">
            <summary>
            Handles the static batching of all created GameObjects marked as static.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.SegmentGameObjectFactory.MetadataManager">
            <summary>
            Used to add metadata to game objects.
            </summary></member>
        <member name="F:Google.Maps.Unity.GameObjectFactory.SegmentGameObjectFactory.GameObjectStyleApplicator">
            <summary>
            Used to apply properties of <see cref="T:Google.Maps.GameObjectStyle" />s to <see cref="T:UnityEngine.GameObject" />s.
            </summary></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.SegmentGameObjectFactory.#ctor(Google.Maps.Event.SegmentEvents,Google.Maps.Unity.StaticBatcher,Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},Google.Maps.MetadataOptions)">
            <summary>
            Constructor.
            </summary>
            <param name="events">SegmentEvents to invoke during GameObject creation.</param>
            <param name="staticBatcher">Manages the batching of GameObjects marked as static.</param>
            <param name="renderOrderManager">
            The render order manager to use for game objects created by this factory.
            </param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="metadataOptions">Metadata options.</param></member>
        <member name="M:Google.Maps.Unity.GameObjectFactory.SegmentGameObjectFactory.CreateGameObject(Google.Maps.Feature.Segment,Google.Maps.Feature.Style.SegmentStyle,System.Boolean,UnityEngine.GameObject,UnityEngine.GameObject)">
            <summary>
            Attempts to create a Unity GameObject from the specified MapFeature and Style objects.
            </summary>
            <remarks>
            Returns null if GameObject creation was cancelled by a WillCreate event handler, or if the
            Line within the provided Segment contains invalid geometry, preventing object creation.
            </remarks>
            <param name="segment">Segment used for construction.</param>
            <param name="style">Style to apply to the generated GameObject.</param>
            <param name="globalStaticBatchEnabled">When true, will statically batch created GameObjects
            unless otherwise specified in the corresponding WillCreate event args.</param>
            <param name="root">Root <see cref="T:UnityEngine.GameObject" />.</param>
            <param name="parent">Parent of the generated GameObject.</param></member>
        <member name="T:Google.Maps.Unity.MapFeatureComponent">
            <summary>
            Encapsulates metadata associated with a GameObject constructed from a
            Feature.MapFeature.
            </summary></member>
        <member name="M:Google.Maps.Unity.MapFeatureComponent.GetMapFeature">
            <summary>
            Returns the Feature.MapFeature used to create this GameObject.
            </summary></member>
        <member name="P:Google.Maps.Unity.MapFeatureComponent.RandomState">
            <summary>
            A random state associated with the MapFeature.
            </summary></member>
        <member name="M:Google.Maps.Unity.MapFeatureComponent.InitializeRandomState">
            <summary>
            Initializes the <see cref="P:Google.Maps.Unity.MapFeatureComponent.RandomState" /> with an initial state that is suitable for
            procedure generation purpose.
            </summary></member>
        <member name="T:Google.Maps.Unity.RegionComponent">
            <summary>
            Encapsulates metadata associated with a GameObject constructed from a
            Feature.Region.
            </summary></member>
        <member name="P:Google.Maps.Unity.RegionComponent.MapFeature">
            <summary>
            Region used to create this GameObject.
            </summary></member>
        <member name="M:Google.Maps.Unity.RegionComponent.GetMapFeature">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.SegmentComponent">
            <summary>
            Encapsulates metadata associated with a GameObject constructed from a
            Feature.Segment.
            </summary></member>
        <member name="P:Google.Maps.Unity.SegmentComponent.MapFeature">
            <summary>
            Segment used to create this GameObject.
            </summary></member>
        <member name="M:Google.Maps.Unity.SegmentComponent.GetMapFeature">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.AreaWaterComponent">
            <summary>
            Encapsulates metadata associated with a GameObject constructed from an
            Feature.AreaWater.
            </summary></member>
        <member name="P:Google.Maps.Unity.AreaWaterComponent.MapFeature">
            <summary>
            The %AreaWater MapFeature used to create this GameObject.
            </summary></member>
        <member name="M:Google.Maps.Unity.AreaWaterComponent.GetMapFeature">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.LineWaterComponent">
            <summary>
            Encapsulates metadata associated with a GameObject constructed from a
            Feature.LineWater.
            </summary></member>
        <member name="P:Google.Maps.Unity.LineWaterComponent.MapFeature">
            <summary>
            Water MapFeature used to create this GameObject.
            </summary></member>
        <member name="M:Google.Maps.Unity.LineWaterComponent.GetMapFeature">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.ExtrudedStructureComponent">
            <summary>
            Encapsulates metadata associated with a GameObject constructed from an
            Feature.ExtrudedStructure.
            </summary></member>
        <member name="P:Google.Maps.Unity.ExtrudedStructureComponent.MapFeature">
            <summary>
            ExtrudedStructure used to create this GameObject.
            </summary></member>
        <member name="M:Google.Maps.Unity.ExtrudedStructureComponent.GetMapFeature">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Unity.ModeledStructureComponent">
            <summary>
            Metadata associated with a GameObject constructed from a
            Feature.ModeledStructure.
            </summary></member>
        <member name="P:Google.Maps.Unity.ModeledStructureComponent.MapFeature">
            <summary>
            ModeledStructure used to create this GameObject.
            </summary></member>
        <member name="M:Google.Maps.Unity.ModeledStructureComponent.GetMapFeature">
            <inheritdoc /></member>
        <member name="T:Google.Maps.APIKeyResolver">
            <summary>
            Used to resolve an API key from multiple <see cref="T:Google.Maps.APIKeyResolver.IAPIKeyReader" /> sources.
            A collection of <see cref="T:Google.Maps.APIKeyResolver.IAPIKeyReader" />s are passed to <see cref="T:Google.Maps.APIKeyResolver" />'s
            constructor, which are executed sequentially by <see cref="M:Google.Maps.APIKeyResolver.Resolve" /> until one
            succeeds.
            </summary></member>
        <member name="T:Google.Maps.APIKeyResolver.IAPIKeyReader">
            <summary>
            Interface for returning an API key.
            </summary></member>
        <member name="M:Google.Maps.APIKeyResolver.IAPIKeyReader.TryGetAPIKey(System.String@)">
            <summary>
            Try to return an API key.
            </summary>
            <param name="apiKey">Set to the API key, if it exists.</param>
            <returns>True if <paramref name="apiKey" /> has been set to the API key found.</returns></member>
        <member name="T:Google.Maps.APIKeyResolver.ResourceAPIKeyReader">
            <summary>
            Returns an API key stored in a <see cref="T:UnityEngine.TextAsset" /> resource.
            </summary></member>
        <member name="F:Google.Maps.APIKeyResolver.ResourceAPIKeyReader.Path">
            <summary>
            The path to the resource.
            </summary></member>
        <member name="M:Google.Maps.APIKeyResolver.ResourceAPIKeyReader.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="path">The path to the resource.</param></member>
        <member name="M:Google.Maps.APIKeyResolver.ResourceAPIKeyReader.TryGetAPIKey(System.String@)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.APIKeyResolver.StringAPIKeyReader">
            <summary>
            Returns the given key string if it isn't empty;
            </summary></member>
        <member name="F:Google.Maps.APIKeyResolver.StringAPIKeyReader.Key">
            <summary>
            The key to return.
            </summary></member>
        <member name="M:Google.Maps.APIKeyResolver.StringAPIKeyReader.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="key">The key to return.</param></member>
        <member name="M:Google.Maps.APIKeyResolver.StringAPIKeyReader.TryGetAPIKey(System.String@)">
            <inheritdoc /></member>
        <member name="F:Google.Maps.APIKeyResolver.Readers">
            <summary>
            The readers to execute sequentially until one succeeds.
            </summary></member>
        <member name="M:Google.Maps.APIKeyResolver.#ctor(Google.Maps.APIKeyResolver.IAPIKeyReader[])">
            <summary>
            Constructor.
            </summary>
            <param name="readers">The readers to execute sequentially until one succeeds.</param></member>
        <member name="M:Google.Maps.APIKeyResolver.Resolve">
            <summary>
            Returns the API key from the first successful <see cref="T:Google.Maps.APIKeyResolver.IAPIKeyReader" /> passed.
            </summary>
            <returns>The resolved API key.</returns></member>
        <member name="T:Google.Maps.Util.Arrays">
            <summary>
            Static Array utility functions.
            </summary></member>
        <member name="M:Google.Maps.Util.Arrays.ArrayToString``1(System.String,``0[])">
            <summary>
            Returns a string representing contents of the supplied array, separated by the supplied
            separator.
            </summary>
            <remarks>
            This replicates the behaviour available in C#4.0 string.Join(separator, object[]) method,
            but we are restricted to an earlier C# version that does not support this method.
            </remarks></member>
        <member name="M:Google.Maps.Util.Arrays.Concat``1(``0[],``0[])">
            <summary>
            Returns a new Array that is the result of concatenating the supplied Arrays.
            </summary>
            <param name="first">Source of leading elements in result.</param>
            <param name="second">Source of trailing elements in result.</param>
            <typeparam name="T">The type contained in the Arrays.</typeparam>
            <returns>The concatenation of first and second Arrays.</returns></member>
        <member name="M:Google.Maps.Util.Arrays.CopyIntArrayWithDelta(System.Int32[],System.Int32[],System.Int32,System.Int32)">
            <summary>
            Copy the values from src array to dest array offsetting the index of each src entry by
            the supplied index offset and adjusting the value by the supplied value delta.
            </summary>
            <param name="src">Source of integer values.</param>
            <param name="dest">Destination of integer values.</param>
            <param name="indexOffset">Index offset used to relocate values in dest with respect to their
            position in source.</param>
            <param name="valueDelta">Value delta to add to each copied integer.</param></member>
        <member name="M:Google.Maps.Util.Arrays.AreEqual``1(``0[],``0[],System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Returns whether two arrays contain exactly the same values, using the supplied comparer, or
            defaulting to the Type's Equals method if no comparator is provided.
            </summary>
            <param name="a1">The first Array.</param>
            <param name="a2">The second Array.</param>
            <param name="comparer">An optional Equality Comparer.</param>
            <returns>Whether the compared arrays contain the same values in the same order.</returns></member>
        <member name="M:Google.Maps.Util.Arrays.Extents``1(``0[0:,0:],``0@,``0@,System.Collections.Generic.IComparer{``0})">
            <summary>
            Returns the largest and smallest values in the provided array.
            </summary>
            <param name="values">The input array.</param>
            <param name="comparer">An optional comparer.</param>
            <param name="min">The smallest found value in the provided array.</param>
            <param name="max">The largest found value in the provided array.</param>
            <exception cref="T:System.ArgumentNullException">If the provided array is null.</exception>
            <exception cref="T:System.ArgumentException">If the provided array has length 0.</exception></member>
        <member name="T:Google.Maps.Util.ClientInfoUtils">
            <summary>
            Utilities for generating Client Info.
            </summary></member>
        <member name="F:Google.Maps.Util.ClientInfoUtils.UserIdKey">
            <summary>
            The key which the User ID is stored under in PlayerPrefs.
            </summary></member>
        <member name="F:Google.Maps.Util.ClientInfoUtils._ClientInfo">
            <summary>
            Metadata describing the Semantic Tile API client (application + SDK) for use in logging.
            </summary></member>
        <member name="F:Google.Maps.Util.ClientInfoUtils._SharedClientInfo">
            <summary>
            Metadata describing the Semantic Tile API client (application + SDK) for use in logging.
            Same as _ClientInfo but using the newer version of the proto.
            </summary></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.GetClientInfo">
            <summary>
            Gets the static ClientInfo.
            </summary>
            <returns>The ClientInfo.</returns></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.GetSharedClientInfo">
            <summary>
            Gets the static ClientInfo in the new proto format.
            </summary>
            <returns>The ClientInfo.</returns></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.Init">
            <summary>
            Initializes the client info.
            </summary></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.Convert(Google.Maps.VectorTile.V1.ClientInfo)">
            <summary>
            Converts ClientInfo into the new proto.
            </summary></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.Convert(Google.Maps.VectorTile.V1.ClientInfo.Types.Platform)">
            <summary>
            Converts ClientInfo platform to the new proto enum.
            </summary></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.SetClientInfoForTesting(Google.Maps.VectorTile.V1.ClientInfo)">
            <summary>
            Sets the client info for testing, since we can't get a bunch of client info in a unit test
            environment. This should only be used inside test methods.
            </summary>
            <param name="clientInfo">The fake client info for testing.</param></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.GenerateClientInfo">
            <summary>
            Generates the metadata describing the Semantic Tile API client.
            </summary>
            <returns>The generated ClientInfo.</returns></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.BuildClientInfoString">
            <summary>
            Builds a base64-encoded ClientInfo string, for use in the X-VectorTile-ClientInfo header.
            </summary>
            <returns>The body for the request.</returns></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.GetOrCreateUserId">
            <summary>
            Generates a pseudonymous random string that represents a User ID and stores it in
            <see cref="T:UnityEngine.PlayerPrefs" />. Retrieves an existing User ID if one was previously created.
            </summary>
            <remarks>
            The generated User ID is a random 128-bit sequence that is converted into a base-64
            encoded string.
            </remarks></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.GetApplicationId">
            <summary>
            Gets the ID of the application running the SDK.
            </summary>
            <remarks>
            For iOS apps, returns the bundle identifier. For Android apps, returns the package name.
            </remarks></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.GetApplicationVersion">
            <summary>
            Returns the version of the application running the SDK.
            </summary></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.GetPlatform">
            <summary>
            Returns the platform on which the application is running.
            </summary></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.MapPlatform(UnityEngine.RuntimePlatform)">
            <summary>
            Maps the runtime platform reported by Unity to the appropriate ClientInfo Platform enum.
            </summary>
            <param name="runtimePlatform">The runtime platform to map.</param></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.GetOperatingSystem">
            <summary>
            Returns the OS name and version on which the application is running.
            </summary></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.GetApiClient">
            <summary>
            Returns the name and version number of the Semantic Tile API client (this SDK).
            </summary>
            <remarks>
            The returned data is in the format sdk_name sdk_version (unity_version).
            </remarks></member>
        <member name="M:Google.Maps.Util.ClientInfoUtils.GetDeviceModel">
            <summary>
            Gets the model of the device running the application.
            </summary></member>
        <member name="T:Google.Maps.Util.CollectionUtils">
            <summary>
            Utilities for collections.
            </summary></member>
        <member name="M:Google.Maps.Util.CollectionUtils.AddRangeReversed``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IList{``0})">
            <summary>
            Adds the items from <paramref name="source" /> to <paramref name="destination" /> in reverse
            order.
            </summary>
            <param name="destination">The destination collection.</param>
            <param name="source">The source list.</param></member>
        <member name="M:Google.Maps.Util.CollectionUtils.MaybeGetFirst``1(System.Collections.Generic.ICollection{``0},``0@)">
            <summary>
            Get the first element in a collection.
            </summary>
            <param name="collection">The collection to take the element from.</param>
            <param name="first">
            Set to the first element in the collection if the collection is non-empty, otherwise set
            to the default value of <typeparamref name="T" />.
            </param>
            <returns>True if the collection is non-empty, false otherwise.</returns></member>
        <member name="T:Google.Maps.Util.CoordsUtil">
            <summary>
            Encapsulates utility methods for working with coordinate systems.
            </summary></member>
        <member name="F:Google.Maps.Util.CoordsUtil.MaxSupportedZoomLevel">
            <summary>
            The maximum supported zoom level.
            </summary></member>
        <member name="F:Google.Maps.Util.CoordsUtil.MinSupportedZoomLevel">
            <summary>
            The minimum supported zoom level.
            </summary></member>
        <member name="M:Google.Maps.Util.CoordsUtil.FromVector2DToVector3(Google.Maps.Coord.Vector2D,System.Double,Google.Maps.Coord.Vector2D)">
            <summary>
            Converts a Vector2D value (Earth-scale Mercator space) into a Vector3 (Unity Worldspace), by
            translating relative to the floatingOrigin and scaling relative to the mercatorScale.
            </summary>
            <param name="vector2D">The Vector2D value to convert.</param>
            <param name="mercatorScale">Mercator scale factor.</param>
            <param name="floatingOrigin">Floating origin in Earth-scale Mercator space.</param>
            <returns>A Vector3 value in Unity Worldspace.</returns></member>
        <member name="M:Google.Maps.Util.CoordsUtil.FromVector2DToVector3NoWrapping(Google.Maps.Coord.Vector2D,System.Double,Google.Maps.Coord.Vector2D)">
            <summary>
            Converts a Vector2D value (Earth-scale Mercator space) into a Vector3 (Unity Worldspace), by
            translating relative to the floatingOrigin and scaling relative to the mercatorScale without
            crossing or wrapping around the antimeridian  - should be used when the longitude is
            needed to be in the range of -180 degrees to 180 degrees which goes all around the world.
            </summary>
            <remarks>
            Antimeridian is the line at -180/180 longitude. Crossing the antimeridian ensures that
            the longitude stay all positive or all negative. (i.e. 170 degrees to -170 degrees
            (340 degrees apart) becomes 170 degrees to 190 degrees (20 degrees apart))
            However, when it is comes to converting a large, low zoom level
            <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to Bounds, crossing the antimeridian causes its Bounds to
            be lot smaller than it is as we do want the Bounds of <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to
            go all the way around the world.
            </remarks>
            <param name="vector2D">The Vector2D value to convert.</param>
            <param name="mercatorScale">Mercator scale factor.</param>
            <param name="floatingOrigin">Floating origin in Earth-scale Mercator space.</param>
            <returns>A Vector3 value in Unity Worldspace.</returns></member>
        <member name="M:Google.Maps.Util.CoordsUtil.FromVector3ToVector2D(UnityEngine.Vector3,System.Double,Google.Maps.Coord.Vector2D)">
            <summary>
            Converts a Vector3 value (Unity Worldspace) into Earth-scale Mercator space (Vector2D).
            </summary>
            <remarks>
            Inverse of <see cref="M:Google.Maps.Util.CoordsUtil.FromVector2DToVector3(Google.Maps.Coord.Vector2D,System.Double,Google.Maps.Coord.Vector2D)" /> (ie. takes into account that the Vector3
            value would have been translated relative to the floatingOrigin" and scaled
            relative to the mercatorScale.
            </remarks>
            <param name="vector3">The Vector3 value to convert.</param>
            <param name="mercatorScale">Mercator scale factor.</param>
            <param name="floatingOrigin">Floating origin in Earth-scale Mercator space.</param>
            <returns>A Vector2D value in Earth-scale Mercator space.</returns></member>
        <member name="M:Google.Maps.Util.CoordsUtil.FromVector3ToTileCoord(UnityEngine.Vector3,System.Int32,System.Double,Google.Maps.Coord.Vector2D,System.Boolean)">
            <summary>
            Converts a Unity Worldspace value (Vector3) into Google Maps Tile Coordinates (TileCoord).
            </summary>
            <remarks>
            The conversion is lossy, since TileCoord space is less granular than Vector3 space.
            See: https://developers.google.com/maps/documentation/javascript/maptypes#TileCoordinates
            </remarks>
            <param name="vector3">The Vector3 value to convert.</param>
            <param name="zoom">Zoom level.</param>
            <param name="mercatorScale">Mercator scale factor.</param>
            <param name="floatingOrigin">Floating origin in Earth-scale Mercator space.</param>
            <param name="normalize">
            Whether to limit the tile coords to the extents of tile coord space at this zoom level.
            </param>
            <returns>A TileCoord value.</returns></member>
        <member name="M:Google.Maps.Util.CoordsUtil.FromTileCoordToVector3(Google.Maps.Coord.MercatorTileCoords,System.Int32,System.Double,Google.Maps.Coord.Vector2D)">
            <summary>
            Converts a TileCoord value (Google Maps Tile Coordinates) into Unity Worldspace (Vector3).
            </summary>
            <remarks>
            For convenience, the south-west corner of the tile is chosen, since this corresponds to the
            local tile origin in Vector3 space. Inverse of <see cref="M:Google.Maps.Util.CoordsUtil.FromVector3ToTileCoord(UnityEngine.Vector3,System.Int32,System.Double,Google.Maps.Coord.Vector2D,System.Boolean)" />.
            </remarks>
            <param name="mercatorTileCoords">The TileCoord value to convert.</param>
            <param name="zoom">Zoom level.</param>
            <param name="mercatorScale">Mercator scale factor.</param>
            <param name="floatingOrigin">Floating origin in Earth-scale Mercator space.</param>
            <returns>A Vector3 value in Unity Worldspace.</returns></member>
        <member name="M:Google.Maps.Util.CoordsUtil.FromTileCoordToBounds(Google.Maps.Coord.MercatorTileCoords,System.Int32,System.Double,Google.Maps.Coord.Vector2D)">
            <summary>
            Converts a TileCoord to the square Bounds covered by that tile in Worldspace with zero
            vertical extent.
            </summary>
            <param name="mercatorTileCoords">Tile coordinates.</param>
            <param name="zoom">Zoom level.</param>
            <param name="mercatorScale">Mercator scale factor.</param>
            <param name="floatingOrigin">Floating origin in Earth-scale Mercator space.</param></member>
        <member name="M:Google.Maps.Util.CoordsUtil.Vector3PointInTile(Google.Maps.Coord.MercatorTileCoords,System.Double,System.Double,System.Int32,System.Double,Google.Maps.Coord.Vector2D)">
            <summary>Converts a point within a tile into Worldspace coordinates.</summary>
            <param name="mercatorTileCoords">Tile coordinates.</param>
            <param name="tileX">X coordinate within the tile. 0 is the west edge, 1 is east.</param>
            <param name="tileY">Y coordinate within the tile. 0 is the south edge, 1 is north.</param>
            <param name="zoom">Zoom level.</param>
            <param name="mercatorScale">Mercator scale factor.</param>
            <param name="floatingOrigin">Floating origin in Earth-scale Mercator space.</param></member>
        <member name="M:Google.Maps.Util.CoordsUtil.Vector3PointInTileNoWrapping(Google.Maps.Coord.MercatorTileCoords,System.Double,System.Double,System.Int32,System.Double,Google.Maps.Coord.Vector2D)">
            <summary>
            Converts a point within a tile into Worldspace coordinates without crossing or wrapping
            around the antimeridian  - should be used when the longitude is needed to be in the range of
            -180 degrees to 180 degrees which goes all around the world.
            </summary>
            <remarks>
            Antimeridian is the line at -180/180 longitude. Crossing the antimeridian ensures that
            the longitude stay all positive or all negative. (i.e. 170 degrees to -170 degrees
            (340 degrees apart) becomes 170 degrees to 190 degrees (20 degrees apart))
            However, when it is comes to converting a large, low zoom level
            <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to Bounds, crossing the antimeridian causes its Bounds to
            be lot smaller than it is as we do want the Bounds of <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to
            go all the way around the world.
            </remarks>
            <param name="mercatorTileCoords">Tile coordinates.</param>
            <param name="tileX">X coordinate within the tile. 0 is the west edge, 1 is east.</param>
            <param name="tileY">Y coordinate within the tile. 0 is the south edge, 1 is north.</param>
            <param name="zoom">Zoom level.</param>
            <param name="mercatorScale">Mercator scale factor.</param>
            <param name="floatingOrigin">Floating origin in Earth-scale Mercator space.</param></member>
        <member name="M:Google.Maps.Util.CoordsUtil.DistanceToNumTiles(System.Single,System.Int32)">
            <summary>
            Converts a distance in Worldspace coordinates to the maximum number of tiles that could be
            covered by that distance.
            </summary>
            <param name="distance">Distance in Worldspace coordinates.</param>
            <param name="zoom">Zoom level.</param></member>
        <member name="M:Google.Maps.Util.CoordsUtil.FromBoundsToTileCoords(UnityEngine.Bounds,System.Int32,System.Double,Google.Maps.Coord.Vector2D)">
            <summary>
            Converts a Bounds value (Unity Worldspace) into a list of Google Maps Tile Coordinates.
            </summary>
            <param name="bounds">The Bounds value to convert.</param>
            <param name="zoom">Zoom level.</param>
            <param name="mercatorScale">Mercator scale factor.</param>
            <param name="floatingOrigin">Floating origin in Earth-scale Mercator space.</param>
            <returns>A list of Google Maps Tile Coordinates.</returns></member>
        <member name="M:Google.Maps.Util.CoordsUtil.DistanceFromPoint(Google.Maps.Coord.MercatorTileCoords,UnityEngine.Vector3,System.Double,Google.Maps.Coord.Vector2D)">
            <summary>
            Calculates the distance in terms of a Unity Worldspace value (Vector3) between the tile
            coordinate and a point.
            </summary>
            <remarks>
            Uses the closest point on the <see cref="T:Google.Maps.Coord.MercatorTileCoords" /> to the point to calculate
            the distance from. If the point is on the <see cref="T:Google.Maps.Coord.MercatorTileCoords" />, it will return
            zero.
            Precondition: point is not null.
            </remarks>
            <param name="mercatorTileCoords">Tile coordinate.</param>
            <param name="point">Point in worldspace.</param>
            <param name="mercatorScale"><see cref="P:Google.Maps.Coord.Projection.MercatorScale" /></param>
            <param name="floatingOrigin"><see cref="P:Google.Maps.Coord.Projection.FloatingOrigin" /></param>
            <returns>The distance result.</returns></member>
        <member name="M:Google.Maps.Util.CoordsUtil.GetTileCoordInfo(Google.Maps.Coord.Projection,System.Int32,Google.Maps.Coord.MercatorTileCoords@,System.Single@,UnityEngine.Vector3@)">
            <summary>
            Returns the tile origin, tile size and world position origin from the supplied
            <see cref="T:Google.Maps.Coord.Projection" />.
            </summary>
            <remarks>
            The tile origin is the TileCoord of the tile containing the floating origin.
            </remarks>
            <param name="projection">The coords from which to derive tile size data.</param>
            <param name="zoom">The current zoom level.</param>
            <param name="mercatorTileOrigin">Output for tile origin.</param>
            <param name="tileSize">Output for tile size.</param>
            <param name="origin">The relative offset of the SW corner of the tile containing the
            floating origin as measured from the map anchor, i.e., the floating origin.</param></member>
        <member name="M:Google.Maps.Util.CoordsUtil.GetTileScale(Google.Maps.Coord.Projection,System.Int32)">
            <summary>
            Scaling multiplier used to stretch map tile geometry (in "tile local" coords) into Unity
            Worldspace (Vector3).
            </summary>
            <param name="projection">
            Coordinate system used to determine the scaling factor due to Mercator distortion.
            </param>
            <param name="zoom">Zoom level of the <see cref="T:Google.Maps.Coord.MercatorTileCoords" />.</param></member>
        <member name="M:Google.Maps.Util.CoordsUtil.GetWorldSpaceTileSizeFromTileScale(System.Single)">
            <summary>
            Get the world space size of a tile from the tile scale.
            </summary>
            <param name="tileScale">Tile scale.</param></member>
        <member name="T:Google.Maps.Util.CoroutineResult`1">
            <summary>
            A generic class to use for passing a result from a coroutine back to the caller, that supports
            cancellation from outside the coroutine, and also child sub-coroutines that are also cancelled
            when the parent is cancelled.
            </summary>
            <typeparam name="T">Type of the result.</typeparam></member>
        <member name="T:Google.Maps.Util.CoroutineResult`1.WaitUntilDoneInternal">
            <summary>
            Instruction to yield in a coroutine to wait until a CoroutineResult is Done.
            </summary></member>
        <member name="F:Google.Maps.Util.CoroutineResult`1.WaitUntilDoneInternal.Result">
            <summary>Result to wait for.</summary></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.WaitUntilDoneInternal.#ctor(Google.Maps.Util.CoroutineResult{`0})">
            <summary>Constructor.</summary>
            <param name="result">Result to wait for.</param></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.WaitUntilDoneInternal.MoveNext">
            <summary>
            Called once per frame to check whether to finish waiting and resume the coroutine.
            </summary></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.WaitUntilDoneInternal.Reset">
            <inheritdoc /></member>
        <member name="P:Google.Maps.Util.CoroutineResult`1.WaitUntilDoneInternal.Current">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Util.CoroutineResult`1.StateEnum">
            <summary>Enum representing the states the result can be in.</summary></member>
        <member name="F:Google.Maps.Util.CoroutineResult`1.StateEnum.Pending">
            <summary>Coroutine is in progress.</summary></member>
        <member name="F:Google.Maps.Util.CoroutineResult`1.StateEnum.Success">
            <summary>
            Coroutine has finished successfully. Result contains the return value; Done is true.
            </summary></member>
        <member name="F:Google.Maps.Util.CoroutineResult`1.StateEnum.Cancelled">
            <summary>Coroutine was cancelled.</summary></member>
        <member name="F:Google.Maps.Util.CoroutineResult`1.State">
            <summary>Current state.</summary></member>
        <member name="P:Google.Maps.Util.CoroutineResult`1.Value">
            <summary>Result on success.</summary></member>
        <member name="F:Google.Maps.Util.CoroutineResult`1.Children">
            <summary>
            List of child coroutine results to recursively cancel if this is cancelled.
            </summary></member>
        <member name="P:Google.Maps.Util.CoroutineResult`1.Done">
            <summary>Whether the coroutine has finished.</summary>
            <remarks>
            <see cref="M:Google.Maps.Util.CoroutineResult{`0}.Return(`0)" />implicitly sets this to true.
            <see cref="M:Google.Maps.Util.CoroutineResult{`0}.Cancel" /> does not, because it's expected to be called from outside the
            coroutine; the coroutine is expected to call <see cref="M:Google.Maps.Util.CoroutineResult{`0}.AbortIfCancelled" /> to check whether
            it has been cancelled, which will set this to true.
            </remarks></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.#ctor">
            <summary>Constructor.</summary></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.#ctor(Google.Maps.Util.ICancellable)">
            <summary>Constructor with a parent.</summary>
            <param name="parent">
            Parent coroutine result. If the parent coroutine is cancelled, it will cancel this one.
            </param></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.Return(`0)">
            <summary>Reports that the coroutine has finished with a successful result.</summary>
            <remarks>If <see cref="M:Google.Maps.Util.CoroutineResult{`0}.Cancel" /> has been called, this does nothing.</remarks>
            <param name="result">Result of the coroutine.</param></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.Cancel">
            <summary>Cancels the coroutine and its child sub-coroutines.</summary>
            <remarks>
            This is typically called from outside the coroutine. Calling code should yield the return
            value to wait until the coroutine has actually finished.
            This depends on the coroutine to check <see cref="M:Google.Maps.Util.CoroutineResult{`0}.AbortIfCancelled" /> periodically. If the
            coroutine doesn't handle the cancellation (either because it doesn't check at all, or
            because <see cref="M:Google.Maps.Util.CoroutineResult{`0}.Cancel" /> was called too late and the coroutine is ready to return), then
            <see cref="M:Google.Maps.Util.CoroutineResult{`0}.Return(`0)" /> has the same effect as <see cref="M:Google.Maps.Util.CoroutineResult{`0}.AbortIfCancelled" />.
            </remarks></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.WaitUntilAllDone">
            <inheritdoc />
            <remarks>
            It is implicit that coroutines should wait for child routines that they care about the
            result of to be done before returning. This method is useful for tests.
            </remarks></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.WaitUntilDone">
            <summary>Waits for this coroutine to be done.</summary>
            <remarks>Does not wait for its children to finish.</remarks></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.AddChild(Google.Maps.Util.ICancellable)">
            <summary>Adds a child that should be cancelled if this is cancelled.</summary>
            <param name="child">Child coroutine result.</param></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.IsPending">
            <summary>Checks whether the coroutine is still running.</summary></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.IsSuccess">
            <summary>Checks whether the coroutine finished successfully.</summary></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.IsCancelled">
            <summary>Checks whether the coroutine has been cancelled.</summary></member>
        <member name="M:Google.Maps.Util.CoroutineResult`1.AbortIfCancelled">
            <summary>
            If the coroutine has been cancelled but hasn't finished, abort with no result and return
            true. Otherwise return false.
            </summary></member>
        <member name="T:Google.Maps.Util.Debugging.GDebug">
            <summary>
            Logging utility class.
            </summary>
            <remarks>
            The Verbose* methods in this class are used to log verbose messages (that is, messages that
            are relevant for SDK developers and developers using the SDK) to the Unity console. These
            methods are simple wrappers around the Unity.Log* methods that only generate output if:
            * The SDK was built with the DEBUG flag, and
            * the client explicitly turned on verbose logging via the
            <see cref="M:Google.Maps.MapsService.EnableVerboseLogging(System.Boolean)" /> method.
            This is to ensure that verbose logging doesn't affect release builds or clog up the console.
            NUnit tests should set "Debug.logger.logEnabled = false" to ensure that calls to Debug.Log()
            don't generate runtime exceptions (Debug.Log() cannot be called outside of a Unity project).
            </remarks></member>
        <member name="T:Google.Maps.Util.Debugging.GDebug.DecoratedStringArgs">
            <summary>
            Specifies string decoration arguments.
            </summary></member>
        <member name="F:Google.Maps.Util.Debugging.GDebug.DecoratedStringArgs.ShowLogCode">
            <summary>
            Whether to prepend the log code to the message.
            </summary></member>
        <member name="F:Google.Maps.Util.Debugging.GDebug.DecoratedStringArgs.ShowLink">
            <summary>
            Whether to append a link to the documentation to the message.
            </summary></member>
        <member name="F:Google.Maps.Util.Debugging.GDebug.Logger">
            <summary>
            The log handler to send messages to. If this is null, <see cref="P:UnityEngine.Debug.unityLogger" /> is
            used by default.
            </summary></member>
        <member name="F:Google.Maps.Util.Debugging.GDebug.EnableVerboseLogging">
            <summary>
            Whether to enable verbose log messages.
            </summary></member>
        <member name="M:Google.Maps.Util.Debugging.GDebug.Log(Google.Maps.Util.Debugging.LogCode.Code,System.Object,UnityEngine.Object)">
            <summary>
            Logs to the Unity console.
            </summary>
            <param name="logCode">The log code.</param>
            <param name="message">The log message.</param>
            <param name="context">Object to which the message applies.</param></member>
        <member name="M:Google.Maps.Util.Debugging.GDebug.LogWarning(Google.Maps.Util.Debugging.LogCode.Code,System.Object,UnityEngine.Object)">
            <summary>
            Logs a warning to the Unity console.
            </summary>
            <param name="logCode">The log code.</param>
            <param name="message">The log message.</param>
            <param name="context">Object to which the message applies.</param></member>
        <member name="M:Google.Maps.Util.Debugging.GDebug.LogError(Google.Maps.Util.Debugging.LogCode.Code,System.Object,UnityEngine.Object)">
            <summary>
            Logs an error to the Unity console.
            </summary>
            <param name="logCode">The log code.</param>
            <param name="message">The log message.</param>
            <param name="context">Object to which the message applies.</param></member>
        <member name="M:Google.Maps.Util.Debugging.GDebug.Verbose(System.Object,UnityEngine.Object)">
            <summary>
            Logs to the Unity console if verbose logging is enabled.
            </summary>
            <param name="message">String or object to be converted to string representation for
            display.</param>
            <param name="context">Object to which the message applies.</param></member>
        <member name="M:Google.Maps.Util.Debugging.GDebug.GetLogger">
            <summary>
            Returns <see cref="T:UnityEngine.Logger" />. If <see cref="T:UnityEngine.Logger" /> is null,
            <see cref="P:UnityEngine.Debug.unityLogger" /> is returned instead.
            </summary>
            <returns>
            Returns <see cref="T:UnityEngine.Logger" /> if it is not null. Otherwise, <see cref="P:UnityEngine.Debug.unityLogger" />
            is returned.
            </returns></member>
        <member name="M:Google.Maps.Util.Debugging.GDebug.BuildDecoratedString(UnityEngine.LogType,Google.Maps.Util.Debugging.LogCode.Code,System.Object)">
            <summary>
            Decorates a log message to print to the Unity console.
            </summary>
            <param name="logType">The log type.</param>
            <param name="logCode">The log code.</param>
            <param name="message">The (undecorated) log message.</param>
            <returns>The decorated log message.</returns></member>
        <member name="M:Google.Maps.Util.Debugging.GDebug.BuildDecoratedString(Google.Maps.Util.Debugging.LogCode.Code,System.Object,Google.Maps.Util.Debugging.GDebug.DecoratedStringArgs)">
            <summary>
            Decorates a log message to print to the Unity console.
            </summary>
            <param name="logCode">The log code.</param>
            <param name="message">The (undecorated) log message.</param>
            <param name="args">The string decoration arguments.</param>
            <returns>The decorated log message.</returns></member>
        <member name="T:Google.Maps.Util.Debugging.LogCode">
            <summary>
            Log codes used to identify warnings and errors logged throughout Musk.
            https://developers.google.com/maps/documentation/gaming/support/error_codes
            </summary></member>
        <member name="T:Google.Maps.Util.Debugging.LogCode.Code">
            <summary>
            The possible error codes.
            </summary>
            <remarks>
            These must be kept in sync with our external documentation.
            </remarks></member>
        <member name="F:Google.Maps.Util.Debugging.LogCode.Code.UnknownObjectDestructionError">
            <summary>
            Tried to destroy a non-SDK object.
            </summary></member>
        <member name="F:Google.Maps.Util.Debugging.LogCode.Code.NoBaseMapShaderError">
            <summary>
            Couldn't find the base map shader.
            </summary></member>
        <member name="F:Google.Maps.Util.Debugging.LogCode.Code.AndroidCertificateFingerprintError">
            <summary>
            Failed to setup network connections on the Android device.
            </summary></member>
        <member name="F:Google.Maps.Util.Debugging.LogCode.Code.DeviceCountryProviderError">
            <summary>
            Failed to find the DeviceCountryProvider script.
            </summary></member>
        <member name="F:Google.Maps.Util.Debugging.LogCode.Code.DeviceCountryError">
            <summary>
            Failed to determine device country.
            </summary>
            <remarks>
            google3/geo/gaming/unity/project/Assets/GoogleMaps/Scripts/DeviceCountryProvider.cs
            hard-codes the error message for this log code. Ensure it is updated if this error code
            ever changes.
            </remarks></member>
        <member name="F:Google.Maps.Util.Debugging.LogCode.Code.InvalidAttributionStateError">
            <summary>
            Attribution GameObject has been modified externally and is now in an invalid state.
            </summary></member>
        <member name="F:Google.Maps.Util.Debugging.LogCode.Code.UnsupportedZoomLevelError">
            <summary>
            Using an unsupported zoom level. See
            <see cref="T:Google.Maps.Feature.Shape.GlobalCoordinate" />.
            </summary></member>
        <member name="M:Google.Maps.Util.Debugging.LogCode.ToLink(Google.Maps.Util.Debugging.LogCode.Code)">
            <summary>
            Generates a documentation link from a <see cref="T:Google.Maps.Util.Debugging.LogCode.Code" />.
            </summary>
            <param name="logCode">The log code.</param>
            <remarks>
            Example: Given LogCode.ExampleLogCodeToDemonstrateFormattedString, this method will
            return "<see cref="F:Google.Maps.Util.Debugging.LogCode.UrlPathString" />#example-log-code-to-demonstrate-formatted-string".
            </remarks></member>
        <member name="T:Google.Maps.Util.DecorationUtils">
            <summary>
            A set of utility methods for performing maps decoration.
            </summary></member>
        <member name="M:Google.Maps.Util.DecorationUtils.PlacePrefabOnGameObject(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.Vector3)">
            <summary>
            Places a Prefab on an <see cref="T:UnityEngine.GameObject" />.
            </summary>
            <remarks>
            Instantiates the Prefab as a child of specified <paramref name="containerGameObject" /> at
            specified position relative to <paramref name="containerGameObject" />.
            </remarks>
            <param name="containerGameObject">A <see cref="T:UnityEngine.GameObject" /> that will be the parent of the
            instance of <paramref name="prefab" />.</param>
            <param name="prefab">A Prefab that will be placed.</param>
            <param name="position">The position of the <see cref="T:UnityEngine.GameObject" /> to instantiate. The
            position coordinate is relative to the <paramref name="containerGameObject" />.</param></member>
        <member name="T:Google.Maps.Util.IEnumerableUtils">
            <summary>
            Utilities for working with <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary></member>
        <member name="M:Google.Maps.Util.IEnumerableUtils.Sum(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>
            Returns the sum of all the values in the given <see cref="T:System.Collections.Generic.IEnumerable`1" />.
            </summary>
            <param name="values">
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> containing the values to be summed.
            </param>
            <returns>The sum of all the values.</returns></member>
        <member name="T:Google.Maps.Util.Geometry.EarClipper">
            <summary>
            Ear clipper algorithm for triangulating polygons.
            </summary>
            <remarks>
            This algorithm runs in O(n^2) time, where n is the size of the vertex list passed to
            <see cref="M:Google.Maps.Util.Geometry.EarClipper.GetTriangles(System.Collections.Generic.IList{UnityEngine.Vector3},System.Int32)" />.
            </remarks></member>
        <member name="F:Google.Maps.Util.Geometry.EarClipper.Vertex.Position">
            <summary>
            The position of the vertex.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.EarClipper.Vertex.Index">
            <summary>
            The index of the vertex in its source list.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.EarClipper.Vertex.Convex">
            <summary>
            Whether the vertex is convex.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.EarClipper.Vertex.Next">
            <summary>
            The node containing the next clockwise-ordered vertex.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.EarClipper.Vertex.Previous">
            <summary>
            The node containing the previous clockwise-ordered vertex.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.EarClipper.Vertex.EarListNode">
            <summary>
            The ear node containing the node of this vertex, if it exists.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.EarClipper.GetTriangles(System.Collections.Generic.IList{UnityEngine.Vector3},System.Int32)">
            <summary>
            Finds the triangulation of the given vertex list.
            </summary>
            <remarks>
            The vertex list is assumed closed (i.e. the last vertex is not repeated), and the vertices
            are assumed to be on the x-z plane, with y values ignored.
            </remarks>
            <param name="vertices">The vertex list.</param>
            <param name="triangleIndexOffset">
            The offset to add to vertex indices in the triangles array.
            </param>
            <returns>The triangulation of the given vertex list.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.EarClipper.FindEars(System.Collections.Generic.LinkedList{Google.Maps.Util.Geometry.EarClipper.Vertex},System.Int32)">
            <summary>
            Finds the ears that triangulate the given vertex list.
            </summary>
            <param name="vertices">
            The vertex list. All convex vertices must come before any concave vertex in the list.
            </param>
            <param name="triangleIndexOffset">
            The offset to add to vertex indices in the triangles array.
            </param>
            <returns>The triangulation of the vertex list.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.EarClipper.IsEar(System.Collections.Generic.LinkedListNode{Google.Maps.Util.Geometry.EarClipper.Vertex})">
            <summary>
            Returns true if the given vertex node is an ear.
            </summary>
            <param name="node">The node to test.</param>
            <returns>True if the given vertex node is an ear.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.EarClipper.UpdateEarNodes(System.Collections.Generic.LinkedList{System.Collections.Generic.LinkedListNode{Google.Maps.Util.Geometry.EarClipper.Vertex}},System.Collections.Generic.LinkedListNode{Google.Maps.Util.Geometry.EarClipper.Vertex})">
            <summary>
            Updates a potential ear node, removing it from or adding it to <paramref name="earNodes" />
            where appropriate.
            </summary>
            <param name="earNodes">The list of ear nodes.</param>
            <param name="updateNode">The node to update.</param></member>
        <member name="M:Google.Maps.Util.Geometry.EarClipper.UpdateConvexityAfterRemoval(System.Collections.Generic.LinkedListNode{Google.Maps.Util.Geometry.EarClipper.Vertex})">
            <summary>
            Updates a vertex's convexity after a removal operation in the vertex list, and re-inserts
            it into the list if its convexity changed.
            </summary>
            <param name="vertexNode">The vertex to update.</param></member>
        <member name="M:Google.Maps.Util.Geometry.EarClipper.IsAnyPointInTriangle(Google.Maps.Util.Geometry.EarClipper.Vertex,Google.Maps.Util.Geometry.EarClipper.Vertex,Google.Maps.Util.Geometry.EarClipper.Vertex,System.Collections.Generic.LinkedList{Google.Maps.Util.Geometry.EarClipper.Vertex})">
            <summary>
            Returns true if any concave point in the vertex list is in the triangle.
            </summary>
            <param name="a">The first point of the triangle.</param>
            <param name="b">The second point of the triangle.</param>
            <param name="c">The third point of the triangle.</param>
            <param name="vertices">
            The vertex list to test against.  All convex vertices are assumed to come before any
            concave vertex in the list.
            </param>
            <returns>True if any vertex in the vertex list lies inside the triangle.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.EarClipper.IsConvex(Google.Maps.Util.Geometry.EarClipper.Vertex)">
            <summary>
            Returns true if the vertex at the given index is convex.
            </summary>
            <param name="vertex">The vertex in the collection to test.</param>
            <returns>True if the vertex is convex.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.EarClipper.IsConvex(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Returns true if the vertex b is convex.
            </summary>
            <param name="a">A vertex adjacent to b.</param>
            <param name="b">A vertex adjacent to a and c.</param>
            <param name="c">A vertex adjacent to a.</param>
            <returns>True if the vertex b is convex.</returns></member>
        <member name="T:Google.Maps.Util.ICoroutineStarter">
            <summary>Interface for objects that can be used to start a coroutine.</summary>
            <remarks>
            Used to avoid a direct dependency on MonoBehaviour for code that needs to call StartCoroutine
            but doesn't otherwise depend on Unity, so that it can be unit tested.
            Note that implementations may stop all the coroutines clients have started through them at
            any point, and it is not always immediately safe to start coroutines after this has happened.
            Use <see cref="T:Google.Maps.ICoroutineStarterListener" /> to deal with coroutine shutdown and to start
            coroutines up safely.
            </remarks></member>
        <member name="M:Google.Maps.Util.ICoroutineStarter.StartCoroutine(System.Collections.IEnumerator)">
            <summary>Starts a coroutine.</summary>
            <param name="coroutine">Coroutine to start.</param></member>
        <member name="M:Google.Maps.Util.ICoroutineStarter.AddCoroutineStarterListener(Google.Maps.ICoroutineStarterListener)">
            <summary>
            Adds a listener for events on the coroutine starter.
            </summary>
            <param name="listener">Listener to register.</param></member>
        <member name="M:Google.Maps.Util.ICoroutineStarter.RemoveCoroutineStarterListener(Google.Maps.ICoroutineStarterListener)">
            <summary>
            Removes a listener for events on the coroutine starter.
            </summary>
            <param name="listener">Listener to register.</param></member>
        <member name="T:Google.Maps.Util.IUnityEditorProxy">
            <summary>
            A proxy for UnityEditor functions. This allows us to skip a level of dependency.
            </summary></member>
        <member name="M:Google.Maps.Util.IUnityEditorProxy.IsBuildingPlayer">
            <summary>
            Is the player currently being built?
            </summary>
            <returns>True if the player is currently being built, false otherwise.</returns></member>
        <member name="M:Google.Maps.Util.IUnityEditorProxy.DisplayDialog(System.String,System.String,System.String,System.String)">
            <summary>
            Wrapper for *EditorUtility.DisplayDialog*.
            </summary></member>
        <member name="M:Google.Maps.Util.IUnityEditorProxy.CreateAssemblyReloadCallback(System.Action)">
            <summary>
            Creates a BeforeAssemblyReload action to be passed in for
            <see cref="M:Google.Maps.Util.IUnityEditorProxy.AddToBeforeAssemblyReload(System.Delegate)" /> and <see cref="M:Google.Maps.Util.IUnityEditorProxy.RemoveFromBeforeAssemblyReload(System.Delegate)" />
            </summary></member>
        <member name="M:Google.Maps.Util.IUnityEditorProxy.AddToBeforeAssemblyReload(System.Delegate)">
            <summary>
            Add the specified delegate to a static method to beforeAssemblyReload.
            </summary></member>
        <member name="M:Google.Maps.Util.IUnityEditorProxy.RemoveFromBeforeAssemblyReload(System.Delegate)">
            <summary>
            Remove the specified delegate to a static method to beforeAssemblyReload.
            </summary></member>
        <member name="M:Google.Maps.Util.IUnityEditorProxy.GetBeforeAssemblyReloadDelegates">
            <summary>
            Return delegates from invocation list for beforeAssemblyReload.
            </summary></member>
        <member name="M:Google.Maps.Util.IUnityEditorProxy.SetEditorUpdateEnabled(System.Boolean)">
            <summary>
            Enable or disable continuous player loop updates (applicable only to edit mode).
            </summary>
            <param name="enabled">
            Whether to enable or disable continuous player loop updates.
            </param></member>
        <member name="T:Google.Maps.Util.Localization.DeviceCultureInfoProvider">
            <summary>
            Returns an instance of <see cref="T:System.Globalization.CultureInfo" /> for the current device language.
            </summary></member>
        <member name="M:Google.Maps.Util.Localization.DeviceCultureInfoProvider.GetCultureInfo">
            <summary>
            Returns an instance of <see cref="T:System.Globalization.CultureInfo" /> for the current device language.
            </summary>
            <remarks>
            Falls back to <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> if the current device language
            is unsupported.
            </remarks>
            <returns>
            An instance of <see cref="T:System.Globalization.CultureInfo" /> for the current device language.
            </returns></member>
        <member name="T:Google.Maps.Util.Localization.ICultureInfoProvider">
            <summary>
            Returns an instance of <see cref="T:System.Globalization.CultureInfo" />.
            </summary></member>
        <member name="M:Google.Maps.Util.Localization.ICultureInfoProvider.GetCultureInfo">
            <summary>
            Returns an instance of <see cref="T:System.Globalization.CultureInfo" />.
            </summary>
            <returns>An instance of <see cref="T:System.Globalization.CultureInfo" />.</returns></member>
        <member name="T:Google.Maps.Util.Localization.LocalizationUtils">
            <summary>
            A set of utility methods for localization.
            </summary></member>
        <member name="M:Google.Maps.Util.Localization.LocalizationUtils.GetDeviceLanguageCode">
            <summary>
            Gets the device's CLDR language identifier.
            </summary>
            <remarks>
            Mapping generated from
            https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry
            Defaults to "en" if language could not be determined.
            </remarks></member>
        <member name="T:Google.Maps.Util.MonoBehaviourUtils">
            <summary>Utilities related to <see cref="T:UnityEngine.MonoBehaviour" />.</summary></member>
        <member name="M:Google.Maps.Util.MonoBehaviourUtils.YieldThenAction(System.Action)">
            <summary>
            Coroutine that yields once and then calls an <see cref="T:System.Action" />.
            </summary>
            <param name="action">The action to call after yielding.</param></member>
        <member name="M:Google.Maps.Util.MonoBehaviourUtils.ExecuteNextFrame(UnityEngine.MonoBehaviour,System.Action)">
            <summary>
            Executes an action next frame by scheduling a coroutine on the given MonoBehaviour.
            </summary>
            <param name="monoBehaviour">
            <see cref="T:UnityEngine.MonoBehaviour" /> to use to execute the action.
            </param>
            <param name="action">The action to execute next frame.</param></member>
        <member name="T:Google.Maps.Util.UrlBuilder">
            <summary>
            A builder that provides an easy interface for constructing URLs as strings. It constructs urls
            of the form
            "protocol://hostname/path/to/resource?param1=value1&amp;param2=value2&amp;param2=value3".
            </summary>
            <remarks>
            The supported URL format is inline with Google HTTP API Conventions. See
            "http://google3/google/api/http.proto?l=108&amp;rcl=242569597" for more information.
            </remarks></member>
        <member name="F:Google.Maps.Util.UrlBuilder.UriBuilder">
            <summary>
            <see cref="T:System.UriBuilder" /> wrapped by this class to facilitate the construction of Urls.
            </summary></member>
        <member name="F:Google.Maps.Util.UrlBuilder.QueryParameters">
            <summary>
            The query parameters.
            </summary>
            <remarks>
            Query parameters are appended to the URL in the order in which they were first added to the
            builder. This also applies to multiple values mapped to a single key.
            </remarks></member>
        <member name="M:Google.Maps.Util.UrlBuilder.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="uri">
            The base URI string that will be appended with query parameters.
            </param></member>
        <member name="M:Google.Maps.Util.UrlBuilder.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="scheme">The scheme/protocol for the URL.</param>
            <param name="hostAndPort">
            The name of the host containing the resource being requested, optionally including the port
            number in the form host:port.
            </param>
            <param name="path">
            The path within the host to the resource. Defaults to the empty string for urls that don't
            require a path.
            </param>
            <exception cref="T:System.ArgumentException">If an invalid host/port is provided.</exception></member>
        <member name="M:Google.Maps.Util.UrlBuilder.AddQueryParameter(System.String,System.String)">
            <summary>
            Adds a query parameter to the URL. Can be called multiple times to add multiple values to
            the same parameter name.
            </summary>
            <remarks>
            Query parameter names and values are url escaped.
            </remarks>
            <param name="name">The name of the query parameter to add.</param>
            <param name="value">
            The value of the query parameter to add. Defaults to null for parameters that do not require
            a value.
            </param>
            <returns>Itself, for chaining operations.</returns></member>
        <member name="M:Google.Maps.Util.UrlBuilder.Build">
            <summary>
            Constructs a url string using the contents of the <see cref="T:Google.Maps.Util.UrlBuilder" />.
            </summary></member>
        <member name="M:Google.Maps.Util.UrlBuilder.BuildQueryString">
            <summary>
            Constructs OnePlatform compliant URL query string for the query parameters stored in the
            <see cref="T:Google.Maps.Util.UrlBuilder" />.
            </summary></member>
        <member name="T:Google.Maps.Util.PreviewUtils">
            <summary>
            Utils for creating previewable SDK components.
            </summary></member>
        <member name="M:Google.Maps.Util.PreviewUtils.CreatePreviewableGameObject">
            <summary>
            Creates a new <see cref="T:UnityEngine.GameObject" /> suitable for use with previewable SDK components.
            If in edit mode the <see cref="T:UnityEngine.GameObject" /> will be marked with
            <see cref="F:UnityEngine.HideFlags.HideAndDontSave" />, otherwise a regular <see cref="T:UnityEngine.GameObject" /> will
            be returned. This ensures that the user's scene isn't clobbered with preview objects while
            in edit mode.
            </summary>
            <returns>The new <see cref="T:UnityEngine.GameObject" /> instance.</returns></member>
        <member name="M:Google.Maps.Util.PreviewUtils.CreatePreviewableTerrainGameObject(UnityEngine.TerrainData)">
            <summary>
            Creates a new <see cref="T:UnityEngine.GameObject" /> containing a <see cref="T:UnityEngine.Terrain" />
            suitable for use with previewable SDK components.
            </summary>
            <returns>The new <see cref="T:UnityEngine.GameObject" /> instance.</returns></member>
        <member name="M:Google.Maps.Util.PreviewUtils.MakeGameObjectPreviewable(UnityEngine.GameObject,System.Boolean)">
            <summary>
            Makes an existing <see cref="T:UnityEngine.GameObject" /> compatible with previewable SDK components.
            If in edit mode, the <see cref="T:UnityEngine.GameObject" /> will be marked with
            <see cref="F:UnityEngine.HideFlags.DontSave" />, otherwise, it is left untouched.
            </summary>
            <param name="gameObject">
            The <see cref="T:UnityEngine.GameObject" /> to make compatible with edit-time preview.
            </param>
            <param name="isHidden">
            If true and in edit mode, the <see cref="T:UnityEngine.GameObject" /> will also be marked with
            <see cref="F:UnityEngine.HideFlags.HideInInspector" /> and <see cref="F:UnityEngine.HideFlags.HideInHierarchy" />
            mode. This ensures that the scene isn't clobbered with preview objects.
            </param></member>
        <member name="M:Google.Maps.Util.PreviewUtils.Destroy(UnityEngine.Object)">
            <summary>
            Destroy an object using <see cref="M:UnityEngine.Object.Destroy(UnityEngine.Object)" /> while playing. Otherwise,
            destroy using <see cref="M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)" />.
            </summary>
            <param name="obj">The object to be destroyed.</param></member>
        <member name="T:Google.Maps.Util.DictionaryTranslatedComparer`2">
            <summary>
            A comparer that compares values after first translating them using a dictionary.
            </summary>
            <typeparam name="K">The type of the untranslated values.</typeparam>
            <typeparam name="V">The type of the translated values.</typeparam></member>
        <member name="F:Google.Maps.Util.DictionaryTranslatedComparer`2.Dictionary">
            <summary>
            The dictionary to use for translation.
            </summary></member>
        <member name="M:Google.Maps.Util.DictionaryTranslatedComparer`2.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
            <summary>
            Constructor.
            </summary>
            <param name="dictionary">The dictionary to use for translation.</param></member>
        <member name="M:Google.Maps.Util.DictionaryTranslatedComparer`2.Compare(`0,`0)">
            <summary>
            Compare two values after first translating them using a dictionary. If either value
            doesn't exist in the dictionary then the result is unspecified.
            </summary>
            <param name="x">The first value.</param>
            <param name="y">The second value.</param></member>
        <member name="T:Google.Maps.Util.GeometryUtils">
            <summary>
            A set of geometry related utility methods and classes.
            </summary></member>
        <member name="T:Google.Maps.Util.GeometryUtils.Vector2Comparer">
            <summary>
            An equality comparer for <see cref="T:UnityEngine.Vector2" /> objects that uses the == operator.
            </summary>
            <remarks>
            Using the == operator results in epsilon comparison. The == operator documentation states:
            two vectors are considered equal if the magnitude of their difference is less than 1e-5.
            </remarks></member>
        <member name="F:Google.Maps.Util.GeometryUtils.Vector2Comparer.Default">
            <summary>Default singleton.</summary></member>
        <member name="M:Google.Maps.Util.GeometryUtils.Vector2Comparer.Equals(UnityEngine.Vector2,UnityEngine.Vector2)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.GeometryUtils.Vector2Comparer.GetHashCode(UnityEngine.Vector2)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Util.GeometryUtils.Vector3Comparer">
            <summary>
            An equality comparer for <see cref="T:UnityEngine.Vector3" /> objects that uses the == operator.
            </summary>
            <remarks>
            Using the == operator results in epsilon comparison. The == operator documentation states:
            two vectors are considered equal if the magnitude of their difference is less than 1e-5.
            </remarks></member>
        <member name="F:Google.Maps.Util.GeometryUtils.Vector3Comparer.Default">
            <summary>Default singleton.</summary></member>
        <member name="M:Google.Maps.Util.GeometryUtils.Vector3Comparer.Equals(UnityEngine.Vector3,UnityEngine.Vector3)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.GeometryUtils.Vector3Comparer.GetHashCode(UnityEngine.Vector3)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Util.GeometryUtils.IndexedEdge">
            <summary>
            An immutable struct representing an edge within a <see cref="T:Google.Maps.Feature.Shape.MapFeatureShape" />.
            </summary>
            <remarks>
            Stores indices into the <see cref="T:Google.Maps.Feature.Shape.MapFeatureShape" />'s vertices array.
            Guarantees that <see cref="F:Google.Maps.Util.GeometryUtils.IndexedEdge.VertexIndex1" /> is always less than <see cref="F:Google.Maps.Util.GeometryUtils.IndexedEdge.VertexIndex2" /> so
            that a comparison between two <see cref="T:Google.Maps.Util.GeometryUtils.IndexedEdge" />s will always be equal iff it is
            composed of the same two vertex indices.
            </remarks></member>
        <member name="F:Google.Maps.Util.GeometryUtils.IndexedEdge.VertexIndex1">
            <summary>
            First index.
            </summary></member>
        <member name="F:Google.Maps.Util.GeometryUtils.IndexedEdge.VertexIndex2">
            <summary>
            Second index.
            </summary></member>
        <member name="M:Google.Maps.Util.GeometryUtils.IndexedEdge.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="vertexIndex1">The first vertex.</param>
            <param name="vertexIndex2">The second vertex.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.IndexedEdge.ToString">
            <summary>
            Converts the indexed edge to a human-readable string.
            </summary></member>
        <member name="T:Google.Maps.Util.GeometryUtils.Circle">
            <summary>
            An immutable struct representing a circle in 2D space.
            </summary></member>
        <member name="F:Google.Maps.Util.GeometryUtils.Circle.Position">
            <summary>
            A position of the center of the circle.
            </summary></member>
        <member name="F:Google.Maps.Util.GeometryUtils.Circle.Radius">
            <summary>
            A radius of the circle.
            </summary></member>
        <member name="M:Google.Maps.Util.GeometryUtils.Circle.#ctor(UnityEngine.Vector2,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="position">The position of the center of the circle.</param>
            <param name="radius">The radius of the circle.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.TryRandomPointInArea(Google.Maps.Feature.Shape.Area,System.Single,System.Int32,UnityEngine.Vector2@)">
            <summary>
            Tries choosing a random point within a given <see cref="T:Google.Maps.Feature.Shape.Area" /> with a distance from the
            <see cref="T:Google.Maps.Feature.Shape.Area" />'s boundary not less than the specified distance value. This use the
            randomized algorithm with specified number of tries (see go/musk-roof-dec).
            </summary>
            <remarks>
            In case of success, this method returns <c>true</c> and pass out the resulting
            <see cref="T:UnityEngine.Vector2" /> via <paramref name="randomPoint" /> parameter. Otherwise, returns
            <c>false</c>.
            </remarks>
            <param name="area">An area to random a point inside.</param>
            <param name="marginSize">A minimum distance from the boundary of an <see cref="T:Google.Maps.Feature.Shape.Area" />.
            </param>
            <param name="numberOfTries">A maximum number of tries to random a point.</param>
            <param name="randomPoint">A resulting random point.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.TryRandomCircleInArea(Google.Maps.Feature.Shape.Area,Google.Maps.Util.GeometryUtils.IndexedEdge[],System.Single,System.Single,System.Int32,System.Collections.Generic.ICollection{Google.Maps.Util.GeometryUtils.Circle},UnityEngine.Vector2@)">
            <summary>
            Tries choosing a random circle with specified radius.
            </summary>
            <remarks>
            Must meet the following conditions:
            * The circle is completely inside a specified <paramref name="area" />.
            * The nearest distance from any point on the circumference to the
            <paramref name="area" />'s boundary is not less than <paramref name="marginSize" />.
            * The circle does not collide with any circle given in <paramref name="existingCircles" />.
            This use the randomized algorithm with specified number of tries.
            In case of success, this method returns <c>true</c> and pass out the resulting
            <see cref="T:UnityEngine.Vector2" /> representing the position of the center of the randomised circle via
            <paramref name="resultingCenterPoint" /> parameter. Otherwise, returns <c>false</c>.
            </remarks>
            <param name="area">An area in which to randomly place a circle.</param>
            <param name="boundaryEdges">The boundary edges of the <paramref name="area" />.</param>
            <param name="radius">A radius of the circle to place.</param>
            <param name="marginSize">A minimum distance from the boundary of an <see cref="T:Google.Maps.Feature.Shape.Area" />.
            </param>
            <param name="numberOfTries">A maximum number of tries to random a circle.</param>
            <param name="existingCircles">A collection of existing circles.</param>
            <param name="resultingCenterPoint">A position of the center of the resulting circle.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.IsInStrokingArea(Google.Maps.Feature.Shape.Area,UnityEngine.Vector2,Google.Maps.Util.GeometryUtils.IndexedEdge[],System.Single)">
            <summary>
            Checks whether a given point is in the stroking area.
            </summary>
            <remarks>
            Internal for testing.
            </remarks>
            <param name="area">An area to be checked.</param>
            <param name="point">A given point to be checked. The location is relative to the
            <paramref name="area" />'s <see cref="P:Google.Maps.Feature.Shape.MapFeatureShape.Origin" />.</param>
            <param name="boundaryEdges">An array containing boundary edges.</param>
            <param name="marginSize">A margin size, i.e. stroking size.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.RandomPointInArea(Google.Maps.Feature.Shape.Area)">
            <summary>
            Randomises a point within a specified <see cref="T:Google.Maps.Feature.Shape.Area" />.
            </summary>
            <param name="area">An area to random a point inside.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.GetBoundaryEdges(Google.Maps.Feature.Shape.Area)">
            <summary>
            Gets an array of boundary edges of an <see cref="T:Google.Maps.Feature.Shape.Area" />.
            </summary>
            <remarks>
            Boundary edge is an edge that is shared with only one triangle (face) in an <see cref="T:Google.Maps.Feature.Shape.Area" />.
            </remarks>
            <param name="area">An area to find boundary edges.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.ExtrudeLine(UnityEngine.Vector2[],System.Single,UnityEngine.Vector2[]@,UnityEngine.Vector2[]@)">
            <summary>
            Creates two boundaries parallel to a <see cref="T:Google.Maps.Feature.Shape.Line" /> (one on either side of the
            line) by extruding the each segment in the line out by a provided width.
            </summary>
            <param name="line">The vertices that define the line to extrude.</param>
            <param name="width">Desired perpendicular distance between the extruded boundaries.</param>
            <param name="left">The first boundary of the extrapolated segment.</param>
            <param name="right">The other boundary of the extrapolated segment.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.ExtrudeLineSegment(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)">
            <summary>
            Creates two boundaries parallel to a <see cref="T:Google.Maps.Feature.Shape.Line" /> segment (one on either side of the
            segment) by extruding the segment out by a provided width.
            </summary>
            <param name="start">Vertex that defines the start of the line segment to extrude.</param>
            <param name="end">Vertex that defines the end of the line segment to extrude.</param>
            <param name="width">Desired perpendicular distance between the extruded line segments.
            </param>
            <param name="leftStart">Vertex that defines the start of the first extruded line segment.
            </param>
            <param name="leftEnd">Vertex that defines the end of the first extruded line segment.
            </param>
            <param name="rightStart">Vertex that defines the start of the second extruded line segment.
            </param>
            <param name="rightEnd">Vertex that defines the end of the second extruded line segment.
            </param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.RandomlyPickFaceInArea(Google.Maps.Feature.Shape.Area,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Randomly picks a face (triangle) in a specified <see cref="T:Google.Maps.Feature.Shape.Area" />.
            </summary>
            <remarks>
            This method randomises a face uniformly based on each triangle's area.
            </remarks>
            <param name="area">An area to pick a face.</param>
            <param name="v1Index">An array's index of the first vertex of the picked face.</param>
            <param name="v2Index">An array's index of the second vertex of the picked face.</param>
            <param name="v3Index">An array's index of the third vertex of the picked face.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.CalculateTriangleArea(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Calculates the area of the given triangle.
            </summary>
            <param name="v1">The first vertex of the triangle.</param>
            <param name="v2">The second vertex of the triangle.</param>
            <param name="v3">The third vertex of the triangle.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.RandomPointInTriangle(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Uniformly chooses a random point within the triangle area specified by 3 given vertices.
            </summary>
            <param name="v1">The first vertex of given triangle.</param>
            <param name="v2">The second vertex of given triangle.</param>
            <param name="v3">The third vertex of given triangle.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.IsPointOnLineSegment(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Checks if a point sits acceptably close to the line segment between <paramref name="v1" />
            and <paramref name="v2" /> to be considered sitting on top of the line segment.
            </summary>
            <param name="v1">The start of the line segment.</param>
            <param name="v2">The end of the line segment.</param>
            <param name="point">Given point to be checked</param>
            <returns>True if the point is on the line segment, false otherwise.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.Close(UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Checks if two <see cref="T:UnityEngine.Vector2" /> points are close enough together to be considered equal.
            </summary>
            <param name="v1">First <see cref="T:UnityEngine.Vector2" /> to check.</param>
            <param name="v2">Second <see cref="T:UnityEngine.Vector2" /> to check.</param>
            <returns>True if the vectors are close enough to be considered equal.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.IsProjectedPointOnLineSegment(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Checks whether the orthogonal projection of the given point onto the line passing through v1
            and v2 lies between v1 and v2.
            </summary>
            <param name="v1">A first point on the line.</param>
            <param name="v2">A second point on the line.</param>
            <param name="point">Given point to be checked.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.DistanceFromLineToPoint(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Calculates the orthogonal distance from the given point to the line passing through
            <paramref name="v1" /> and <paramref name="v2" />. In case of <paramref name="v1" /> equals to
            <paramref name="v2" />, the distance from <paramref name="v1" /> to <paramref name="point" />
            is returned instead.
            </summary>
            <param name="v1">The first point that lies on the line.</param>
            <param name="v2">The second point that lies on the line.</param>
            <param name="point">Given point.</param></member>
        <member name="M:Google.Maps.Util.GeometryUtils.AreaDeterminant(UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Uses the determinant rule to calculate the area of the rhombus determined by the supplied
            2D vectors. See, e.g., https://en.wikipedia.org/wiki/Exterior_algebra#Areas_in_the_plane.
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>The area of the rhombus defined by the supplied vectors.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.AreaDeterminantXZ(UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Uses the determinant rule to calculate the area of the rhombus determined by the supplied
            2D vectors. See, e.g., https://en.wikipedia.org/wiki/Exterior_algebra#Areas_in_the_plane.
            </summary>
            <remarks>The line segments are assumed to be on the XZ plane</remarks>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>The area of the rhombus defined by the supplied vectors.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.FindLineSegmentIntersection(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)">
            <summary>
            Determines any intersection between two 2D line segments specified by their end points,
            returning false if no intersection exists.
            </summary>
            <param name="p1">One end of first line segment</param>
            <param name="p2">Other end of first line segment</param>
            <param name="q1">One end of second line segment</param>
            <param name="q2">Other end of second line segment</param>
            <param name="intersection">Output parameter for location of intersection if found</param>
            <returns>Whether the supplied line segments intersect</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.FindLineSegmentIntersection(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single@)">
            <summary>
            Determines any intersection between two 2D line segments specified by their end points,
            returning false if no intersection exists.
            </summary>
            <param name="p1">One end of first line segment</param>
            <param name="p2">Other end of first line segment</param>
            <param name="q1">One end of second line segment</param>
            <param name="q2">Other end of second line segment</param>
            <param name="intersection">Output parameter for location of intersection if found</param>
            <param name="parametric">
            Output parameter for the parametric distance of the intersection from p to q if an
            intersection is found.
            </param>
            <returns>Whether the supplied line segments intersect</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.FindLineSegmentIntersectionXZ(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3@)">
            <summary>
            Determines any intersection between two 2D line segments specified by their end points,
            returning false if no intersection exists.
            </summary>
            <remarks>The line segments are assumed to be on the XZ plane</remarks>
            <param name="p1">One end of first line segment</param>
            <param name="p2">Other end of first line segment</param>
            <param name="q1">One end of second line segment</param>
            <param name="q2">Other end of second line segment</param>
            <param name="intersection">Output parameter for location of intersection if found</param>
            <returns>Whether the supplied line segments intersect</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.FindLineSegmentIntersectionXZ(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3@,System.Single@)">
            <summary>
            Determines any intersection between two 2D line segments specified by their end points,
            returning false if no intersection exists.
            </summary>
            <remarks>The line segments are assumed to be on the XZ plane</remarks>
            <param name="p1">One end of first line segment</param>
            <param name="p2">Other end of first line segment</param>
            <param name="q1">One end of second line segment</param>
            <param name="q2">Other end of second line segment</param>
            <param name="intersection">Output parameter for location of intersection if found</param>
            <param name="parametric">
            Output parameter for the parametric distance of the intersection from p to q if an
            intersection is found.
            </param>
            <returns>Whether the supplied line segments intersect</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.GetVerticesFromBounds(UnityEngine.Bounds)">
            <summary>
            Returns the vertices that encapsulate a given bounds.
            </summary>
            <param name="bounds">The bounds to compute the vertices of.</param>
            <returns>The array of vertices encapsulating the given bounds.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.ConstructBoundsFromVertices(System.Collections.Generic.IEnumerable{UnityEngine.Vector3})">
            <summary>
            Constructs the smallest possible bounds to encapsulate a given vertex array.
            </summary>
            <param name="vertices">The vertex array the bounds should encapsulate.</param>
            <returns>The smallest possible bounds encapsulating the vertex array.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.GetClosestPointOnLineSegment(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single@)">
            <summary>
            Returns the point on a line segment closest to a given point.
            </summary>
            <param name="v1">One end of the line segment.</param>
            <param name="v2">The other end of the line segment.</param>
            <param name="point">
            The point to test against to find the nearest point on the line segment.
            </param>
            <param name="dist">The distance along the line where the closest point was found.</param>
            <returns>The point on the line segment closest to the given point.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.GetClosestPointOnLine(System.Collections.Generic.IList{UnityEngine.Vector3},UnityEngine.Vector3,System.Single@)">
            <summary>
            Returns the point on a line closest to a given point.
            </summary>
            <param name="line">The vertices that define the line.</param>
            <param name="point">The point to test against to find the nearest point on the line.</param>
            <param name="dist">The distance along the line where the closest point was found.</param>
            <returns>The point on the line closest to the given point.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.GetPointAlongLine(System.Collections.Generic.IList{UnityEngine.Vector3},System.Single)">
            <summary>
            Returns the point along the line after tracing it by a given distance from a given start
            point on the line.
            </summary>
            <param name="line">The line to trace.</param>
            <param name="dist">The distance to trace the line by.</param>
            <remarks>
            The line is assumed to start from the vertex at index 0.
            A negative distance will return the start of the line, while a distance exceeding the length
            of the line or a start point not on the line will return the end of the line.
            </remarks>
            <returns>
            The point along the line after tracing it by a given distance from a given start point on
            the line.
            </returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.SliceLine(System.Collections.Generic.IList{UnityEngine.Vector3},System.Single,System.Single)">
            <summary>
            Slices the line to be a specified length from a given start distance, removing all other
            points outside this interval.
            </summary>
            <remarks>
            If the start and end points of the sliced line don't exist in the original line, they are
            added.
            </remarks>
            <param name="line">The line to slice.</param>
            <param name="sliceLength">The length of the sliced line.</param>
            <param name="startLength">The length along the line to start from.</param>
            <returns>The sliced line.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.GetLength(System.Collections.Generic.IList{UnityEngine.Vector3})">
            <summary>
            Returns the length of the given line.
            </summary>
            <param name="line">The line to calculate the length of.</param>
            <returns>The length of the given line.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.MinMaxRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a <see cref="T:UnityEngine.RectInt" /> with the given min and max points.
            </summary>
            <param name="xMin">The minimum point of the rect.</param>
            <param name="yMin">The minimum point of the rect.</param>
            <param name="xMax">The minimum point of the rect.</param>
            <param name="yMax">The minimum point of the rect.</param>
            <returns>The rectangle with the given min and max points.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.Overlaps(UnityEngine.RectInt,UnityEngine.RectInt)">
            <summary>
            Returns true if the two rectangles overlap.
            </summary>
            <remarks>
            This method also returns true if the two rectangles overlap only at their boundaries.
            </remarks>
            <param name="a">The first rectangle to test.</param>
            <param name="b">The second rectangle to test.</param>
            <returns>True if the two rectangles overlap.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.Contains(UnityEngine.RectInt,UnityEngine.Vector2Int)">
            <summary>
            Returns true if the given rectangle contains the given point.
            </summary>
            <remarks>
            This method also returns true if the point lies on the boundary of the rectangle. If you do
            not want this behaviour, use <see cref="M:UnityEngine.RectInt.Contains(UnityEngine.Vector2Int)" />.
            </remarks>
            <param name="rect">The rectangle to test.</param>
            <param name="point">The point to test.</param>
            <returns>True if this rectangle contains the given point.</returns></member>
        <member name="M:Google.Maps.Util.GeometryUtils.RectFromPoint(UnityEngine.Vector2Int)">
            <summary>
            Returns the minimum <see cref="T:UnityEngine.RectInt" /> encapsulating the given point.
            </summary>
            <param name="point">The point to encapsulate.</param>
            <returns>The minimum <see cref="T:UnityEngine.RectInt" /> encapsulating the given point.</returns></member>
        <member name="T:Google.Maps.Util.Geometry.Edge`1">
            <summary>
            A directed pair of <typeparamref name="T" />.
            </summary>
            <typeparam name="T">The type of the elements this edge connects.</typeparam></member>
        <member name="T:Google.Maps.Util.Geometry.Insetting.Event">
            <summary>
            An event that occurs in the process of the scan plane algorithm implemented in
            TriangulationInsetter used to maintain a triangulation of the inset polygon as time
            progresses.
            </summary></member>
        <member name="T:Google.Maps.Util.Geometry.Insetting.Event.EventType">
            <summary>
            The type of event.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Event.EventType.Point">
            <summary>
            Point events occur when a triangle collapses to a point.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Event.EventType.Edge">
            <summary>
            Edge events occur when one edge of a triangle collapses to a point.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Event.EventType.Split">
            <summary>
            Split events occur when an edge is split in two by a vertex.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Event.EventType.Flip">
            <summary>
            Flip events occur when the triangulation would contain a negative triangle.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Event.EventType.Stop">
            <summary>
            A stop event is used to signal an early exit from the algorithm.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Event.Point">
            <summary>
            The point in 2+1D space-time at which the event occurs.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Event.Type">
            <summary>
            The type of the event.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Event.Orientation">
            <summary>
            The edge of the triangle involved in the event.
            Applicable to Edge, Split, and Flip events.
            </summary></member>
        <member name="P:Google.Maps.Util.Geometry.Insetting.Event.Time">
            <summary>
            The time at which the event occurs.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Event.Equals(Google.Maps.Util.Geometry.Insetting.Event)">
            <summary>
            Implements the <see cref="T:System.IEquatable`1" /> interface.
            </summary>
            <param name="other">An `Event` object to compare with this one.</param>
            <returns>Indicates whether the specified `Event` is equal to this
            `Event`.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Event.GetHashCode">
            <summary>
            Overrides the `%GetHashCode()` method.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Event.#ctor(System.Single,Google.Maps.Util.Geometry.Insetting.Event.EventType,Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Constructs an event of the given type at the given time.
            </summary>
            <param name="time">The time at which the event occurs.</param>
            <param name="type">The type of the event.</param>
            <param name="orientation">The edge involved in the event, if applicable.</param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Event.#ctor(UnityEngine.Vector3,Google.Maps.Util.Geometry.Insetting.Event.EventType,Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Constructs an event of the given type and edge at the given point in 2+1D space-time.
            </summary>
            <param name="point">The point at which the event occurs.</param>
            <param name="type">The type of the event.</param>
            <param name="orientation">The edge involved in the event, if applicable.</param></member>
        <member name="T:Google.Maps.Util.Geometry.Insetting.OrientedTriangle">
            <summary>
            A triangle with some specific orientation.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.OrientedTriangle.Triangle">
            <summary>
            The base triangle with arbitrary orientation.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.OrientedTriangle.Orientation">
            <summary>
            The orientation of this triangle relative to the base.
            </summary></member>
        <member name="P:Google.Maps.Util.Geometry.Insetting.OrientedTriangle.A">
            <summary>
            The A vertex of this triangle, accounting for its orientation relative to its base triangle.
            </summary></member>
        <member name="P:Google.Maps.Util.Geometry.Insetting.OrientedTriangle.B">
            <summary>
            The B vertex of this triangle, accounting for its orientation relative to its base triangle.
            </summary></member>
        <member name="P:Google.Maps.Util.Geometry.Insetting.OrientedTriangle.C">
            <summary>
            The C vertex of this triangle, accounting for its orientation relative to its base triangle.
            </summary></member>
        <member name="P:Google.Maps.Util.Geometry.Insetting.OrientedTriangle.Item(Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Gives the vertices of the triangle by orientation, accounting for its orientation relative
            to its base triangle.
            </summary>
            <param name="orientation">The orientation of the desired vertex.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when an invalid orientation is given.
            </exception></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.OrientedTriangle.#ctor(Google.Maps.Util.Geometry.Insetting.Triangle,Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Constructs an oriented triangle given a base triangle and a relative orientation.
            </summary>
            <param name="triangle">The base triangle.</param>
            <param name="orientation">
            The orientation of this triangle relative to <paramref name="triangle" />
            </param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.OrientedTriangle.#ctor(Google.Maps.Util.Geometry.Insetting.OrientedTriangle,Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Constructs an oriented triangle given an oriented triangle and a relative orientation.
            </summary>
            <param name="oriented">The original oriented triangle.</param>
            <param name="orientation">
            The orientation of this triangle relative to <paramref name="oriented" />
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when an invalid orientation is specified.
            </exception></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.OrientedTriangle.GetEdge(Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Gives the edge corresponding to the given orientation. Specifically, the edge from the
            vertex specified by the orientation to the following vertex.
            </summary>
            <param name="orientation">The orientation of the desired edge.</param>
            <returns>The edge between the specified vertices.</returns></member>
        <member name="T:Google.Maps.Util.Geometry.Insetting.Plane">
            <summary>
            Internal representation of a Plane defined by a normal vector and dot product with normal.
            Unity's Plane representation normalizes the normal vector to get a unit vector and hence
            introduces floating point error that causes stability issues.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Plane.Normal">
            <summary>
            The normal vector of the plane. Not required to be a unit vector.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Plane.Distance">
            <summary>
            The constant value produced by the dot product of any point in the plane with the normal.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Plane.#ctor(UnityEngine.Vector3,System.Single)">
            <summary>
            Constructs a plane perpendicular to the given vector with constant dot product with normal.
            </summary>
            <param name="normal">The normal vector of the plane.</param>
            <param name="distance">
            The constant value for the dot product of the normal with any point in the plane.
            </param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Plane.#ctor(System.Single)">
            <summary>
            Constructs an x-y aligned plane at <paramref name="height" /> above the origin.
            </summary>
            <param name="height">The height of the plane above the origin.</param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Plane.IntersectionPoint(Google.Maps.Util.Geometry.Insetting.Plane,Google.Maps.Util.Geometry.Insetting.Plane,Google.Maps.Util.Geometry.Insetting.Plane)">
            <summary>
            Computes the intersection point of the three given planes, if it exists.
            </summary>
            <param name="a">The first plane.</param>
            <param name="b">The second plane.</param>
            <param name="c">The third plane.</param>
            <returns>The intersection point of the three planes.</returns></member>
        <member name="T:Google.Maps.Util.Geometry.Insetting.StraightSkeleton">
            <summary>
            An indexed straight skeleton into a list of vertices.
            https://en.wikipedia.org/wiki/Straight_skeleton
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.StraightSkeleton.Vertices">
            <summary>
            The vertices of the skeleton.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.StraightSkeleton.Edges">
            <summary>
            A list of pairs of indices into the vertex array specifying each edge.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.StraightSkeleton.#ctor(UnityEngine.Vector3[],System.Int32[])">
            <summary>
            Constructs a straight skeleton given the underlying vertex and edge index arrays.
            </summary>
            <param name="vertices">The vertex array.</param>
            <param name="edges">The edge index array.</param></member>
        <member name="T:Google.Maps.Util.Geometry.Insetting.Triangle">
            <summary>
            A counter-clockwise oriented triplet of vertices representing a triangle.
            </summary></member>
        <member name="T:Google.Maps.Util.Geometry.Insetting.Triangle.Orientation">
            <summary>
            Used to specify a vertex or edge of the triangle relative to the arbitrary base orientation
            of vertex A.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Triangle.NextOrientation(Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Returns the orientation of the vertex following the given orientation.
            </summary>
            <param name="orientation">The original orientation.</param>
            <returns>The new orientation.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if orientation is invalid.</exception></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Triangle.PreviousOrientation(Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Returns the orientation of the vertex preceding the given orientation.
            </summary>
            <param name="orientation">The original orientation.</param>
            <returns>The new orientation.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if orientation is invalid.</exception></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Triangle.A">
            <summary>
            A vertex of the triangle.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Triangle.B">
            <summary>
            A vertex of the triangle.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Triangle.C">
            <summary>
            A vertex of the triangle.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.Triangle.Event">
            <summary>
            The next event this triangle is involved in, or null if none or unknown.
            </summary></member>
        <member name="P:Google.Maps.Util.Geometry.Insetting.Triangle.Item(Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Gives the vertices of the triangle by orientation.
            </summary>
            <param name="orientation">The orientation of the desired vertex.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Thrown when an invalid orientation is given.
            </exception></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Triangle.IsClosed">
            <summary>
            Checks whether or not this triangle is a standalone, closed polygon.
            </summary>
            <returns>Whether or not this triangle is closed.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Triangle.GetEdge(Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Gives the edge corresponding to the given orientation. Specifically, the edge from the
            vertex specified by the orientation to the following vertex.
            </summary>
            <param name="orientation">The orientation of the desired edge.</param>
            <returns>The edge between the specified vertices.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.Triangle.#ctor(Google.Maps.Util.Geometry.Insetting.WavefrontVertex,Google.Maps.Util.Geometry.Insetting.WavefrontVertex,Google.Maps.Util.Geometry.Insetting.WavefrontVertex)">
            <summary>
            Constructs a Triangle given a triplet of vertices assuming counter-clockwise orientations
            are positive and clockwise are negative.
            </summary>
            <param name="a">The first vertex.</param>
            <param name="b">The second vertex.</param>
            <param name="c">The third vertex.</param></member>
        <member name="T:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter">
            <summary>
            Utility class for insetting triangulations.
            Given a triangulation and optional wavefront edge velocities is able to compute the resulting
            polygon after allowing the wavefront edges to propagate inwards for some amount of time.
            Additionally computes the straight skeleton of the polygon
            (https://en.wikipedia.org/wiki/Straight_skeleton).
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.DefaultVelocity">
            <summary>
            Default velocity of the <see cref="T:Google.Maps.Util.Geometry.Insetting.WavefrontEdge" />s if none is specified.
            </summary></member>
        <member name="P:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.Time">
            <summary>
            The current time to which the polygon has been inset relative to the original polygon.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.InitialTriangulation">
            <summary>
            The initial triangulation used to construct the insetter.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.Owners">
            <summary>
            For each directed edge in the triangulation, the triangle to which it belongs, oriented
            such that the edge in question is the AB edge of the triangle.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.EventQueue">
            <summary>
            The event queue for the scanplane algorithm.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.StraightSkeletonAdjacencies">
            <summary>
            For each vertex in the straight skeleton, the set of vertices with an edge to this one.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.StraightSkeletonFrontier">
            <summary>
            For each wavefront vertex in the straight skeleton, the vertex from which it originated.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.#ctor(Google.Maps.Util.Geometry.Triangulation2,System.Collections.Generic.Dictionary{Google.Maps.Util.Geometry.Edge{System.Int32},System.Single})">
            <summary>
            Constructs an insetter at zero inset distance.
            Assumes a perfect triangulation of a simple polygon with holes.
            A perfect triangulation contains no internal vertices, including vertices between pairs of
            collinear edges.
            </summary>
            <param name="triangulation">The triangulation to inset.</param>
            <param name="velocities">Optional velocities for each external edge.</param>
            <exception cref="T:System.ArgumentException">Thrown when the triangulation is invalid.</exception></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.Run(System.Single)">
            <summary>
            Inset the polygon until the given time, then stop.
            </summary>
            <param name="time">The time to inset to.</param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.HandlePointEvent(Google.Maps.Util.Geometry.Insetting.Event,Google.Maps.Util.Geometry.Insetting.OrientedTriangle)">
            <summary>
            Point events occur when a triangle collapses to a point.
            The relevant triangle is removed from the triangulation.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.HandleEdgeEvent(Google.Maps.Util.Geometry.Insetting.Event,Google.Maps.Util.Geometry.Insetting.OrientedTriangle)">
            <summary>
            Edge events occur when one edge of a triangle collapses to a point.
            The vertices at either end of the edge are replaced with a new vertex and the triangle is
            removed from the triangulation.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.HandleSplitEvent(Google.Maps.Util.Geometry.Insetting.Event,Google.Maps.Util.Geometry.Insetting.OrientedTriangle)">
            <summary>
            Split events occur when an edge is split in two by a vertex.
            The relevant vertex is split into two and its adjacent triangles updated depending on
            which side of the original triangle they are on. The original triangle is then removed.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.HandleFlipEvent(Google.Maps.Util.Geometry.Insetting.Event,Google.Maps.Util.Geometry.Insetting.OrientedTriangle)">
            <summary>
            Flip events occur when the triangulation would contain a negative triangle.
            The quad formed by the two triangles that share this edge is flipped to be triangulated
            the other way around to avoid one of the triangles becoming negative.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.GetInitialTriangulation">
            <summary>
            Get the initial triangulation that is being inset.
            </summary>
            <returns>The initial triangulation.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.GetTriangulation">
            <summary>
            Get the triangulation at the current time.
            </summary>
            <returns>The triangulation at the current time.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.GetStraightSkeleton">
            <summary>
            Get the straight skeleton at the current time. The frontier vertices are converted to static
            vertices by computing their location at time <see cref="T:UnityEngine.Time" />.
            </summary>
            <returns>The straight skeleton at the current time.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.LowerBound``1(System.Collections.Generic.List{``0},``0,System.Collections.Generic.IComparer{``0})">
            <summary>
            Finds the index of the first element in the sorted <paramref name="list" /> that does not
            compare less than <paramref name="value" /> (by <paramref name="comp" />, if provided).
            If no element does not compare less than <paramref name="value" />, returns the list length.
            </summary>
            <param name="list">The sorted list of elements to search in.</param>
            <param name="value">The value to search for.</param>
            <param name="comp">The comparer by which the list is sorted, if not by default.</param>
            <typeparam name="T">The type of elements in the list.</typeparam>
            <returns>The index of the first element not less than the search value.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.GetDifferenceTriangulation">
            <summary>
            Get the triangulation of the difference between the initial polygon and the polygon at the
            current time.
            </summary>
            <remarks>
            This represents the border region between the original boundary and the inset boundary.
            </remarks>
            <returns>
            The triangulation of the difference between the initial and current triangulations.
            </returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.ComputeAndUpdateNextEvent(Google.Maps.Util.Geometry.Insetting.Triangle)">
            <summary>
            Computes the next event for a given triangle and updates the relevant data structures.
            </summary>
            <param name="triangle">The triangle in question.</param>
            <returns>The next event for the given triangle.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.MinEvent(System.Nullable{Google.Maps.Util.Geometry.Insetting.Event},System.Nullable{Google.Maps.Util.Geometry.Insetting.Event})">
            <summary>
            Returns the lesser of the arguments where null is considered greater than everything.
            </summary>
            <param name="a">The first <see cref="T:System.Nullable`1" />.</param>
            <param name="b">The second <see cref="T:System.Nullable`1" />.</param>
            <returns>The lesser of <paramref name="a" /> and <paramref name="b" />.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.NextEvent(Google.Maps.Util.Geometry.Insetting.Triangle)">
            <summary>
            Returns the next event that will occur for this triangle.
            </summary>
            <param name="triangle">The triangle in question.</param>
            <returns>The next event for this triangle.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.NextPointEvent(Google.Maps.Util.Geometry.Insetting.Triangle)">
            <summary>
            Helper function to compute the time at which a point event will occur for a given triangle.
            A ______ B
            \    /
            \  /     ------&gt;     .
            \/
            C
            </summary>
            <param name="triangle">The triangle for which the event occurs.</param>
            <returns>The time at which the event occurs.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.NextEdgeEvent(Google.Maps.Util.Geometry.Insetting.Triangle)">
            <summary>
            Helper function to compute the time at which an edge event will occur for a given triangle.
            C                                   C
            \                /\                /         \       |       /
            \                                /           \             /
            \            /    \            /             \     |     /
            \                            /               \         /
            \        /        \        /     ------&gt;     \   |   /
            \                        /                   \     /
            \    /            \    /                     \ | /
            \                    /                       \ /
            \/________________\/                         V
            A                  B                        new
            </summary>
            <param name="triangle">The triangle for which the event occurs.</param>
            <returns>The time at which the event occurs.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.NextSplitEvent(Google.Maps.Util.Geometry.Insetting.Triangle)">
            <summary>
            Helper function to compute the time at which a split event will occur for a given triangle.
            B                    B
            \        /|                \   |
            \        |                 \  |
            \    /  |                  \ |
            \      |                   \| new
            C \/    |    ------&gt;
            /\    |
            /      |                   /| new
            /    \  |                  / |
            /        |                 /  |
            /        \|                /   |
            A                    A
            </summary>
            <param name="triangle">The triangle for which the event occurs.</param>
            <returns>The time at which the event occurs.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.NextFlipEvent(Google.Maps.Util.Geometry.Insetting.Triangle)">
            <summary>
            Helper function to compute the time at which a flip event will occur for a given triangle.
            B                    B
            /|\                   |\
            / | \                  | \
            /  |  \                 |  \
            /   |   \                |   \
            C /    |    \   ------&gt;   C |____\
            \    |    /               |    /
            \   |   /                |   /
            \  |  /                 |  /
            \ | /                  | /
            \|/                   |/
            A                    A
            </summary>
            <param name="triangle">The triangle for which the event occurs.</param>
            <returns>The time at which the event occurs.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.GetNeighbour(Google.Maps.Util.Geometry.Insetting.OrientedTriangle,Google.Maps.Util.Geometry.Insetting.Triangle.Orientation)">
            <summary>
            Helper function to get the triangle that shares the specified edge with the given triangle.
            </summary>
            <param name="triangle">The triangle for which to find the neighbour.</param>
            <param name="orientation">The edge of the triangle shared with the neighbour.</param>
            <returns>The neighbouring triangle, oriented such that AB is the shared edge.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.RemoveTriangle(Google.Maps.Util.Geometry.Insetting.Triangle)">
            <summary>
            Helper method to remove a triangle from the triangulation and clear its event.
            </summary>
            <param name="triangle">The triangle to remove.</param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.UpdateTriangleVertex(Google.Maps.Util.Geometry.Insetting.OrientedTriangle,Google.Maps.Util.Geometry.Insetting.Triangle.Orientation,Google.Maps.Util.Geometry.Insetting.WavefrontVertex)">
            <summary>
            Helper function to update a vertex of a triangle while maintaining <see cref="F:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.Owners" />.
            </summary>
            <param name="triangle">The triangle to update.</param>
            <param name="orientation">The vertex of the triangle to update.</param>
            <param name="vertex">The new value for the vertex.</param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.FlipQuad(Google.Maps.Util.Geometry.Edge{Google.Maps.Util.Geometry.Insetting.WavefrontVertex})">
            <summary>
            Helper function to switch a quad to its other triangulation. Used to handle flip events.
            </summary>
            <param name="edge">The common edge of the two triangles in the quad.</param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.TriangulationInsetter.CloseStraightSkeletonEdge(Google.Maps.Util.Geometry.Insetting.WavefrontVertex,UnityEngine.Vector3)">
            <summary>
            Finalizes and closes the frontier edge ending in <paramref name="frontierVertex" /> by
            removing the frontier edge and adding a static skeleton edge from the start of the frontier
            edge to <paramref name="skeletonVertex" />.
            </summary>
            <param name="frontierVertex">The wavefront vertex at the open end of the edge.</param>
            <param name="skeletonVertex">The static vertex with which to close the edge.</param></member>
        <member name="T:Google.Maps.Util.Geometry.Insetting.WavefrontEdge">
            <summary>
            An exterior edge of the triangulation that moves inwards with some velocity.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.WavefrontEdge.Edge">
            <summary>
            The original edge of the triangulation.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.WavefrontEdge.Velocity">
            <summary>
            The velocity with which the edge is moving to its left (inwards).
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.WavefrontEdge.#ctor(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
            <summary>
            Constructs a wavefront edge that starts between tail and head and moves inwards at the
            specified velocity.
            </summary>
            <param name="tail">The start of the edge at time 0.</param>
            <param name="head">The end of the edge at time 0.</param>
            <param name="velocity">The velocity with which the edge moves.</param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.WavefrontEdge.#ctor(Google.Maps.Util.Geometry.Edge{System.Int32},System.Collections.Generic.IList{UnityEngine.Vector2},System.Single)">
            <summary>
            Constructs a wavefront edge from an indexed edge and a list of vertices.
            </summary>
            <param name="edge">An indexed edge.</param>
            <param name="vertices">The vertex list <paramref name="edge" /> indexes into.</param>
            <param name="velocity">The velocity with which the edge moves.</param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.WavefrontEdge.Normal">
            <summary>
            The (non-unit) normal vector of the plane swept by the edge as it moves through time.
            </summary>
            <returns>The normal vector of the plane.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.WavefrontEdge.Plane">
            <summary>
            The plane swept by the edge as it moves through time.
            </summary>
            <returns>The plane.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.WavefrontEdge.IntersectionTime(Google.Maps.Util.Geometry.Insetting.WavefrontEdge,Google.Maps.Util.Geometry.Insetting.WavefrontEdge,Google.Maps.Util.Geometry.Insetting.WavefrontEdge)">
            <summary>
            The time at which all three given edges intersect at a common point, if one exists.
            </summary>
            <param name="a">The first edge.</param>
            <param name="b">The second edge.</param>
            <param name="c">The third edge.</param>
            <returns>The time at which the edges intersect at a common point.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.WavefrontEdge.IntersectionPoint(Google.Maps.Util.Geometry.Insetting.WavefrontEdge,Google.Maps.Util.Geometry.Insetting.WavefrontEdge,Google.Maps.Util.Geometry.Insetting.WavefrontEdge)">
            <summary>
            The unique point in two spatial dimensions and one time at which the three planes intersect,
            if it exists.
            </summary>
            <param name="a">The first plane.</param>
            <param name="b">The second plane.</param>
            <param name="c">The third plane.</param>
            <returns>The point in space-time at which the planes intersect.</returns></member>
        <member name="T:Google.Maps.Util.Geometry.Insetting.WavefrontVertex">
            <summary>
            A vertex in the inset triangulation, defined by the intersection of a pair of
            <see cref="T:Google.Maps.Util.Geometry.Insetting.WavefrontEdge" />s.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.WavefrontVertex.Incident">
            <summary>
            The wavefront edge directed towards this vertex on which this vertex lies.
            </summary>
            <remarks>
            Incident (adj.): Falls upon or into. From the latin in- + cado ("to fall").
            </remarks></member>
        <member name="F:Google.Maps.Util.Geometry.Insetting.WavefrontVertex.Excident">
            <summary>
            The wavefront edge directed away from this vertex on which this vertex lies.
            </summary>
            <remarks>
            Excident (adj.): Falls out or from. From the latin ex- + cado ("to fall").
            </remarks></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.WavefrontVertex.#ctor(Google.Maps.Util.Geometry.Insetting.WavefrontEdge,Google.Maps.Util.Geometry.Insetting.WavefrontEdge)">
            <summary>
            Constructs a WavefrontVertex given its incident and excident <see cref="T:Google.Maps.Util.Geometry.Insetting.WavefrontEdge" />s.
            </summary>
            <param name="incident">
            The wavefront edge on which this vertex lies that is directed towards this vertex.
            </param>
            <param name="excident">
            The wavefront edge on which this vertex lies that is directed away from this vertex.
            </param></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.WavefrontVertex.PositionAtTime(System.Single)">
            <summary>
            Computes the position of this vertex at the given time.
            </summary>
            <param name="time">The time for which to find the position.</param>
            <returns>The position of the vertex at the given time.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.WavefrontVertex.Position">
            <summary>
            The initial position of the vertex at time 0, if it is well defined.
            </summary>
            <returns>The position of the vertex at time 0.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Insetting.WavefrontVertex.Velocity">
            <summary>
            The velocity of the vertex, if it is well defined, derived from the velocities and
            orientations of the edges that define this vertex.
            </summary>
            <returns>The velocity of the vertex.</returns></member>
        <member name="T:Google.Maps.Util.Geometry.MonotoneTriangulator">
            <summary>
            Utility class for triangulating monotone polygons.
            </summary></member>
        <member name="T:Google.Maps.Util.Geometry.MonotoneTriangulator.MonotoneComparer">
            <summary>
            Compares <see cref="T:UnityEngine.Vector2" />s by distance along the given direction vector.
            Breaks ties using distance along the perpendicular.
            This is like sorting first by x, then by y, but where the x-axis is in the given direction.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.MonotoneTriangulator.MonotoneComparer.Direction">
            <summary>
            The direction in which to compare elements.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.MonotoneTriangulator.MonotoneComparer.#ctor(UnityEngine.Vector2)">
            <summary>
            Constructs a new comparer with the given <paramref name="direction" />.
            </summary>
            <param name="direction">The direction in which to compare elements.</param></member>
        <member name="M:Google.Maps.Util.Geometry.MonotoneTriangulator.MonotoneComparer.Compare(UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Compares a pair of <see cref="T:UnityEngine.Vector2" />s by distance along <see cref="F:Google.Maps.Util.Geometry.MonotoneTriangulator.MonotoneComparer.Direction" />.
            Breaks ties using distance along the vector perpendicular to <see cref="F:Google.Maps.Util.Geometry.MonotoneTriangulator.MonotoneComparer.Direction" />.
            </summary>
            <param name="l">Left hand <see cref="T:UnityEngine.Vector2" />.</param>
            <param name="r">Right hand <see cref="T:UnityEngine.Vector2" />.</param>
            <returns>
            -1 if <paramref name="l" /> comes before <paramref name="r" />, 0 if equal, and 1 if after.
            </returns></member>
        <member name="M:Google.Maps.Util.Geometry.MonotoneTriangulator.Triangulate(UnityEngine.Vector2[],UnityEngine.Vector2)">
            <summary>
            Computes an indexed triangulation of the given <paramref name="polygon" />, which must be
            monotone in the given <paramref name="direction" />.
            </summary>
            <param name="polygon">The boundary loop of the polygon.</param>
            <param name="direction">The direction in which the polygon is monotone.</param>
            <returns>The triangle index array.</returns></member>
        <member name="T:Google.Maps.Util.Geometry.RadialComparison.RadialComparer">
            <summary>
            Compares Vector2s radially around a given origin.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.RadialComparison.RadialComparer.#ctor(UnityEngine.Vector2)">
            <summary>
            Constructs a new RadialComparer around the given point.
            </summary>
            <param name="origin">The origin around which to compare vectors.</param></member>
        <member name="M:Google.Maps.Util.Geometry.RadialComparison.RadialComparer.Pseudoangle(UnityEngine.Vector2)">
            <summary>
            A monotonic function in the range [0, 4) on the angle of <paramref name="vector" />.
            Based on the piecewise-monotonic function f((x, y)) = x / (abs(x) + abs(y)).
            Observe that we can scale the vector without changing the result of this function, so it
            is purely dependent on direction. Consider now some unit-length vector rotated by some
            angle around the origin.
            For the range [0, PI/2], x decreases monotonically, and the denominator never drops faster
            than x, as it is simply (x + y) in this quadrant, and y must be increasing, so the rate of
            change of (x + y) is strictly greater than that of x. It follows that f decreases
            monotonically from 1 to 0.
            Similar arguments exist for the other quadrants to show that f is monotonic in each
            quadrant, and indeed that it monotonically decreases over the domain [0, PI] and
            monotonically increases over [PI, 2PI].
            As the vector rotates, f describes a V-shape from (0, 1) to (PI, -1) and back to (2PI, 1).
            By negating the section of this function in the domain [0, PI] (where y &gt;= 0), we get a
            piecewise monotonically increasing function. Adding 1 in the domain [0, PI) and 3 in the
            domain [PI, 2PI), we can make this function continuous and strictly positive.
            As such we now have a monotonically increasing, continuous, and strictly positive function
            in the angle of the vector which we refer to as the pseudoangle due to its relationship to
            the angle of the vector itself.
            </summary>
            <remarks>
            This is theoretically more stable than Unity's trigonometric functions.
            </remarks>
            <param name="vector">The vector to find the pseudoangle of.</param>
            <returns>The pseudoangle of the vector.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.RadialComparison.RadialComparer.Compare(UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Compares <paramref name="l" /> and <paramref name="r" /> radially around
            <see cref="F:Google.Maps.Util.Geometry.RadialComparison.RadialComparer.Origin" />, in the continuous range of angles [0, 2*PI).
            </summary>
            <param name="l">The left hand vector.</param>
            <param name="r">The right hand vector.</param>
            <returns>
            Negative if <paramref name="l" /> is less than <paramref name="r" />, 0 if equal, and
            positive if greater.
            </returns></member>
        <member name="T:Google.Maps.Util.Geometry.RadialComparison.RadialComparerXY">
            <summary>
            Compares Vector3s radially in the x-y plane around the given origin.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.RadialComparison.RadialComparerXY.#ctor(UnityEngine.Vector3)">
            <summary>
            Constructs a new RadialComparerXY around the given point.
            </summary>
            <param name="origin">The origin around which to compare vectors.</param></member>
        <member name="M:Google.Maps.Util.Geometry.RadialComparison.RadialComparerXY.Compare(UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Compares <paramref name="l" /> and <paramref name="r" /> radially in the x-y plane around
            the given origin, in the continuous range of angles [0, 2*PI).
            </summary>
            <param name="l">The left hand vector.</param>
            <param name="r">The right hand vector.</param>
            <returns>
            Negative if <paramref name="l" /> is less than <paramref name="r" />, 0 if equal, and
            positive if greater.
            </returns></member>
        <member name="T:Google.Maps.Util.Geometry.TriangleUtils">
            <summary>
            Utilities for working with triangles.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.TriangleUtils.Area(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
            <summary>
            Computes the signed area of the triangle described by the given vertices.
            </summary>
            <param name="a">The first vertex.</param>
            <param name="b">The second vertex.</param>
            <param name="c">The third vertex.</param>
            <returns>The signed area of the triangle.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.TriangleUtils.IsPointInTriangle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Returns true if the given point lies inside the the given 2D triangle.
            </summary>
            <remarks>
            The triangle is assumed to be on the x-z plane.
            </remarks>
            <param name="v1">The first point of the triangle.</param>
            <param name="v2">The second point of the triangle.</param>
            <param name="v3">The third point of the triangle.</param>
            <param name="test">The point to test.</param>
            <returns>True if the test point lies inside the triangle.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.TriangleUtils.AreaDeterminant(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Computes the signed area determinant of the triangle described by the given vertices.
            </summary>
            <param name="a">The first vertex.</param>
            <param name="b">The second vertex.</param>
            <param name="c">The third vertex.</param>
            <returns>The signed area determinant of the triangle.</returns></member>
        <member name="T:Google.Maps.Util.Geometry.Triangulation2">
            <summary>
            An indexed triangulation into a list of vertices.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Triangulation2.Vertices">
            <summary>
            The vertices of the triangulation.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Triangulation2.Triangles">
            <summary>
            A list of triples of indices into the vertex array specifying each triangle.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Triangulation2.#ctor(UnityEngine.Vector2[],System.Int32[])">
            <summary>
            Constructs a triangulation given the underlying vertex and triangle index arrays.
            </summary>
            <param name="vertices">The vertex array.</param>
            <param name="triangles">The triangle index array.</param></member>
        <member name="M:Google.Maps.Util.Geometry.Triangulation2.TriangleEdges">
            <summary>
            Gives all indexed edges of all triangles in the triangulation.
            </summary>
            <returns>The edges of the triangles.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Triangulation2.BoundaryEdges">
            <summary>
            Gives the set of all external edges in the triangulation.
            That is, all edges that have just one incident triangle.
            </summary>
            <returns>The set of all edges on the boundary of the triangulation.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.Triangulation2.ProjectFromXY(System.Single)">
            <summary>
            Project the triangulation from the x-y plane by the specified distance.
            </summary>
            <param name="z">The distance to project from the x-y plane.</param>
            <returns>The projected triangulation.</returns></member>
        <member name="T:Google.Maps.Util.Geometry.Triangulation3">
            <summary>
            An indexed triangulation into a list of three dimensional vertices.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Triangulation3.Vertices">
            <summary>
            The vertices of the triangulation.
            </summary></member>
        <member name="F:Google.Maps.Util.Geometry.Triangulation3.Triangles">
            <summary>
            A list of triples of indices into the vertex array specifying each triangle.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.Triangulation3.#ctor(UnityEngine.Vector3[],System.Int32[])">
            <summary>
            Constructs a triangulation given the underlying vertex and triangle index arrays.
            </summary>
            <param name="vertices">The vertex array.</param>
            <param name="triangles">The triangle index array.</param></member>
        <member name="M:Google.Maps.Util.Geometry.Triangulation3.ProjectOntoXY">
            <summary>
            Project the triangulation onto the x-y plane.
            </summary>
            <returns>The projected triangulation.</returns></member>
        <member name="T:Google.Maps.Util.Geometry.TriangulationSimplifier">
            <summary>
            Utilities for computing simple triangulations of polygons.
            </summary></member>
        <member name="T:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle">
            <summary>
            A triangle with three vertices specified by indices.
            </summary></member>
        <member name="P:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.AB">
            <summary>
            The indexed edge from <see cref="F:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.A" /> to <see cref="F:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.B" />.
            </summary></member>
        <member name="P:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.BC">
            <summary>
            The indexed edge from <see cref="F:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.B" /> to <see cref="F:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.C" />.
            </summary></member>
        <member name="P:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.CA">
            <summary>
            The indexed edge from <see cref="F:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.C" /> to <see cref="F:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.A" />.
            </summary></member>
        <member name="M:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.IsCanonical">
            <summary>
            Returns whether or not this is the canonical orientation of the polygon.
            We define the canonical form to be the one where A is minimum, and break ties by where B
            is minimum.
            </summary>
            <returns>Whether or not this triangle is in the canonical orientation.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.TriangulationSimplifier.IndexedTriangle.PermutedClockwise">
            <summary>
            Constructs a permutation of the triangle vertices by shuffling them all to their left, so
            A takes the value of B, B of C, and C of A.
            </summary>
            <returns>The permuted triangle.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.TriangulationSimplifier.TriangulateStar(UnityEngine.Vector2[],UnityEngine.Vector2)">
            <summary>
            Triangulates a star polygon with supplied kernel using only its perimeter vertices.
            </summary>
            <remarks>
            Operates by finding the pair of triangles that contain the edge from the kernel to some
            vertex. If the quad formed by this pair of triangles is convex, then we are able to flip
            its triangulation to clip an ear and remove the vertex from the polygon.
            </remarks>
            <param name="vertices">
            The perimeter vertices of the star polygon in counterclockwise order around the kernel.
            </param>
            <param name="kernel">
            A central point that has line of sight to every perimeter vertex.
            </param>
            <returns>An indexed triangulation of the polygon int <paramref name="vertices" />.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.TriangulationSimplifier.RemoveUnusedVertices(Google.Maps.Util.Geometry.Triangulation3)">
            <summary>
            Returns an equivalent triangulation with any unused or duplicate vertices removed.
            </summary>
            <param name="triangulation">The original triangulation.</param>
            <returns>The reduced triangulation.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.TriangulationSimplifier.RemoveUnusedVertices(Google.Maps.Util.Geometry.Triangulation2)">
            <summary>
            Returns an equivalent triangulation with any unused vertices removed.
            </summary>
            <param name="triangulation">The original triangulation.</param>
            <returns>The reduced triangulation.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.TriangulationSimplifier.SimplifyTriangles(UnityEngine.Vector2[],System.Int32[])">
            <summary>
            Computes a new triangle array for the polygon given by triangulation, but containing no
            internal vertices. Vertices are also considered internal if their incident external edges
            are collinear.
            </summary>
            <param name="vertices">The vertex array of the original triangulation.</param>
            <param name="triangles">The indexed triangle array of the original triangulation.</param>
            <returns>A simplified indexed triangle array into <paramref name="vertices" />.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.TriangulationSimplifier.Simplify(Google.Maps.Util.Geometry.Triangulation3)">
            <summary>
            Simplifies the given triangulation by removing all internal and/or unused vertices.
            Internal vertices includes those vertices where their incident external edges are collinear.
            </summary>
            <param name="triangulation">The original triangulation.</param>
            <returns>The simplified triangulation.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.TriangulationSimplifier.Simplify(Google.Maps.Util.Geometry.Triangulation2)">
            <summary>
            Simplifies the given triangulation by removing all internal and/or unused vertices.
            Internal vertices includes those vertices where their incident external edges are collinear.
            </summary>
            <param name="triangulation">The original triangulation.</param>
            <returns>The simplified triangulation.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.ToXZ3D(UnityEngine.Vector2)">
            <summary>
            Projects a <see cref="T:UnityEngine.Vector2" /> from the x-y plane by some distance along the y-axis.
            </summary>
            <remarks>Note that the ground plane in Unity World Space is x-z, not x-y.</remarks>
            <param name="vector">The original vector.</param>
            <returns>The projected vector.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.ToXZ3D(System.Collections.Generic.ICollection{UnityEngine.Vector2})">
            <summary>
            Projects a collection of <see cref="T:UnityEngine.Vector2" />s from the x-y plane by some distance along
            the y-axis.
            </summary>
            <remarks>Note that the ground plane in Unity World Space is x-z, not x-y.</remarks>
            <param name="vectors">The original vectors.</param>
            <returns>The projected vectors.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.ProjectOntoXY2D(UnityEngine.Vector3)">
            <summary>
            Projects a <see cref="T:UnityEngine.Vector3" /> onto the x-y plane and converts it to a
            <see cref="T:UnityEngine.Vector2" />.
            </summary>
            <param name="vector">The original vector.</param>
            <returns>The projected vector.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.ProjectOntoXY2D(System.Collections.Generic.ICollection{UnityEngine.Vector3})">
            <summary>
            Projects a collection of <see cref="T:UnityEngine.Vector3" />s onto the x-y plane to get an array of
            <see cref="T:UnityEngine.Vector2" />s.
            </summary>
            <param name="vectors">The original vectors.</param>
            <returns>The projected vectors.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.ProjectOntoOffsetXY3D(UnityEngine.Vector2,System.Single)">
            <summary>
            Projects a <see cref="T:UnityEngine.Vector2" /> from the x-y plane by some distance along the z-axis.
            </summary>
            <remarks>Note that the ground plane in Unity World Space is x-z, not x-y.</remarks>
            <param name="vector">The original vector.</param>
            <param name="z">The distance to project along the z-axis.</param>
            <returns>The projected vector.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.ProjectOntoOffsetXY3D(System.Collections.Generic.ICollection{UnityEngine.Vector2},System.Single)">
            <summary>
            Projects a collection of <see cref="T:UnityEngine.Vector2" />s from the x-y plane by some distance along
            the z-axis.
            </summary>
            <remarks>Note that the ground plane in Unity World Space is x-z, not x-y.</remarks>
            <param name="vectors">The original vectors.</param>
            <param name="z">The distance to project along the z-axis.</param>
            <returns>The projected vectors.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.IsEqualOrNaN(UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Checks the provided Vector3s for equality, treating NaN == NaN as equality.
            This matches the behaviour of Vector3.Equals in Unity 2018_4 but not Unity 2019_2.
            </summary>
            <param name="a">The first vector to compare.</param>
            <param name="b">The second vector to compare.</param>
            <returns>Whether the two are equal.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.CalculateLeftPerpendicularVector(UnityEngine.Vector2)">
            <summary>
            Returns the left-hand perpendicular vector to a vector.
            </summary>
            <param name="vector">Vector2 to find perpendicular vector to.</param>
            <returns>Left perpendicular vector.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.CalculateRightPerpendicularVector(UnityEngine.Vector2)">
            <summary>
            Returns the right-hand perpendicular vector to a vector.
            </summary>
            <param name="vector">Vector2 to find perpendicular vector to.</param>
            <returns>Right perpendicular vector.</returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.AreClose(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
            <summary>
            Returns true if the two given vectors are close, defined by a given squared distance.
            </summary>
            <param name="a">The first vector.</param>
            <param name="b">The second vector.</param>
            <param name="epsilon">
            The maximum squared magnitude of the difference between two vectors that are considered
            similar.
            </param>
            <returns>
            True if the squared distance between the two vectors is less than the given epsilon.
            </returns></member>
        <member name="M:Google.Maps.Util.Geometry.VectorUtils.ContainsVectorCloseTo(System.Collections.Generic.IEnumerable{UnityEngine.Vector2},UnityEngine.Vector2,System.Single)">
            <summary>
            Returns whether a collection of vectors contains any vector similar to a given vector.
            </summary>
            <remarks>
            Vectors A and B are considered similar if Magnitude(A-B) is less than the supplied epsilon
            </remarks>
            <param name="vectors">The collection of vectors to test against.</param>
            <param name="testVector">The vector to test.</param>
            <param name="epsilon">
            The maximum squared magnitude of the difference between two vectors that are considered
            similar.
            </param>
            <returns>If the collection contains a vector similar to the test vector.</returns></member>
        <member name="T:Google.Maps.Util.ICancellable">
            <summary>
            Interface for a hierarchy of processes that can be cancelled, and will in turn cancel their
            sub-processes.
            </summary>
            <remarks>
            This is to allow <see cref="T:Google.Maps.Util.CoroutineResult`1" /> to have a collection of children that don't
            share the same type parameter.
            </remarks></member>
        <member name="M:Google.Maps.Util.ICancellable.Cancel">
            <summary>Cancels this and its children.</summary></member>
        <member name="M:Google.Maps.Util.ICancellable.AddChild(Google.Maps.Util.ICancellable)">
            <summary>
            Adds a child that should be cancelled if this is cancelled.
            </summary>
            <param name="child">Child cancellable object.</param></member>
        <member name="M:Google.Maps.Util.ICancellable.WaitUntilAllDone">
            <summary>Waits for this and its children to be done.</summary>
            <remarks>
            It is implicit that coroutines should wait for child routines that they care about the
            result of to be done before returning. This method is useful for tests.
            </remarks></member>
        <member name="T:Google.Maps.Util.IClock">
            <summary>Interface for an injectable coroutine-friendly clock.</summary></member>
        <member name="M:Google.Maps.Util.IClock.WaitForSeconds(System.Single)">
            <summary>Suspends coroutine execution for the given number of seconds.</summary>
            <param name="seconds">Number of seconds to wait.</param></member>
        <member name="M:Google.Maps.Util.IClock.Now">
            <summary>Returns the current timestamp.</summary></member>
        <member name="T:Google.Maps.Util.Material.BaseMapMaterialUtils">
            <summary>
            Utility methods for constructing <see cref="T:UnityEngine.Material" /> instances compatible
            with base map features.
            </summary></member>
        <member name="M:Google.Maps.Util.Material.BaseMapMaterialUtils.CreateUniformColoredMaterial(UnityEngine.Color)">
            <summary>
            Create a new <see cref="T:UnityEngine.Material" /> instance for applying a uniform color to
            base map features. Returns *null* if the necessary shaders cannot be loaded (e.g. if
            they were not included in the Unity project the application was built from).
            </summary>
            <param name="color">Color of material.</param>
            <returns>Base map compatible <see cref="T:UnityEngine.Material" /> instance with the specified
            color, or null if the necessary shaders cannot be loaded.</returns></member>
        <member name="M:Google.Maps.Util.Material.BaseMapMaterialUtils.FindShaderWithFallback(System.String,System.String)">
            <summary>
            Finds a shader by name; or, if that shader can't be found, logs a warning and finds a
            fallback shader instead.
            </summary>
            <param name="name">Name of the shader to find.</param>
            <param name="fallback">Name of the fallback shader.</param>
            <exception cref="T:System.InvalidOperationException">
            If the fallback shader can't be found.
            </exception></member>
        <member name="T:Google.Maps.Util.MatrixUtils">
            <summary>
            Utilities for doing matrix calculations with 2D arrays of doubles.
            </summary></member>
        <member name="M:Google.Maps.Util.MatrixUtils.IdentityMatrix(System.Int32)">
            <summary>
            Constructs and returns an <paramref name="n" /> by <paramref name="n" /> identity matrix.
            </summary>
            <param name="n">Matrix dimension.</param>
            <returns>An <paramref name="n" /> by <paramref name="n" /> identity matrix.</returns></member>
        <member name="M:Google.Maps.Util.MatrixUtils.RowVector(System.Double[])">
            <summary>
            Converts a 1D double array to a 2D row vector matrix (a 1 x N matrix).
            </summary>
            <param name="vector">1D vector to convert.</param>
            <returns>2D row vector matrix form.</returns></member>
        <member name="M:Google.Maps.Util.MatrixUtils.ColVector(System.Double[])">
            <summary>
            Converts a 1D double array to a 2D column vector matrix (an N x 1 matrix).
            </summary>
            <param name="vector">1D vector to convert.</param>
            <returns>2D column vector matrix form.</returns></member>
        <member name="M:Google.Maps.Util.MatrixUtils.Product(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Computes the matrix product of a pair of matrices stored as 2D arrays of doubles.
            </summary>
            <param name="lhs">The left hand matrix.</param>
            <param name="rhs">The right hand matrix.</param>
            <returns>The product of <paramref name="lhs" /> and <paramref name="rhs" />.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="lhs" /> and
            <paramref name="rhs" /> are of incompatible sizes.</exception></member>
        <member name="M:Google.Maps.Util.MatrixUtils.SwapRows(System.Double[0:,0:]@,System.Int32,System.Int32)">
            <summary>
            Swaps rows <paramref name="i" /> and <paramref name="j" /> of <paramref name="matrix" />.
            If <paramref name="i" /> and <paramref name="j" /> are equal, does nothing.
            </summary>
            <param name="matrix">A matrix.</param>
            <param name="i">Row index.</param>
            <param name="j">Row index.</param></member>
        <member name="M:Google.Maps.Util.MatrixUtils.SwapCols(System.Double[0:,0:]@,System.Int32,System.Int32)">
            <summary>
            Swaps columns <paramref name="i" /> and <paramref name="j" /> of <paramref name="matrix" />.
            If <paramref name="i" /> and <paramref name="j" /> are equal, does nothing.
            </summary>
            <param name="matrix">A matrix.</param>
            <param name="i">Column index.</param>
            <param name="j">Column index.</param></member>
        <member name="M:Google.Maps.Util.MatrixUtils.MultiplyRow(System.Double[0:,0:]@,System.Int32,System.Double)">
            <summary>
            Multiplies the specified <paramref name="row" /> of <paramref name="matrix" /> by
            <paramref name="coefficient" />.
            </summary>
            <param name="matrix">The matrix to mutate.</param>
            <param name="row">The index of the row to scale.</param>
            <param name="coefficient">The coefficient to multiply by.</param></member>
        <member name="M:Google.Maps.Util.MatrixUtils.AddRows(System.Double[0:,0:]@,System.Int32,System.Int32,System.Double)">
            <summary>
            Adds a <paramref name="coefficient" /> multiple of row <paramref name="j" /> to row
            <paramref name="i" /> of <paramref name="matrix." />.
            </summary>
            <param name="matrix">The matrix to mutate.</param>
            <param name="i">The row to mutate.</param>
            <param name="j">The row to add to row <paramref name="i" />.</param>
            <param name="coefficient">The coefficient for <paramref name="j" /></param></member>
        <member name="M:Google.Maps.Util.MatrixUtils.GaussianElimination(System.Double[0:,0:],System.Double[0:,0:])">
            <inheritdoc cref="GaussianElimination(double[,],double[,],out double)" /></member>
        <member name="M:Google.Maps.Util.MatrixUtils.GaussianElimination(System.Double[0:,0:],System.Double[0:,0:],System.Double@)">
            <summary>
            Performs Gaussian Elimination (https://en.wikipedia.org/wiki/Gaussian_elimination)
            with full pivoting.
            Solves systems of linear equations of the form AX = B for X given A and B.
            The determinant of A is computed as a side effect.
            Runs in O(N^3)
            </summary>
            <param name="aMatrix">An N by N matrix A.</param>
            <param name="bMatrix">An N by M matrix B.</param>
            <param name="determinant">The determinant of A, which is zero if no solution exists.</param>
            <returns>The solution X such that AX = B, or null if no solution exists.</returns>
            <exception cref="T:System.ArgumentException">When the given matrices are the wrong shape.</exception></member>
        <member name="M:Google.Maps.Util.MatrixUtils.MatrixInverse(System.Double[0:,0:])">
            <inheritdoc cref="MatrixInverse(double[,],out double)" /></member>
        <member name="M:Google.Maps.Util.MatrixUtils.MatrixInverse(System.Double[0:,0:],System.Double@)">
            <summary>
            Computes the matrix inverse of <paramref name="matrix" />, or null if none exists.
            Matrices must be square to be invertible. The inverse of an N x N matrix is another N x N
            matrix such that their product is the identity matrix, I.
            The determinant of <paramref name="matrix" /> is computed as a side effect.
            </summary>
            <param name="matrix">The matrix to compute the inverse of.</param>
            <param name="determinant">The determinant of <paramref name="matrix" />, which is
            zero if <paramref name="matrix" /> is not invertible.</param>
            <returns>The inverse of <paramref name="matrix" />, or null if <paramref name="matrix" />
            is not invertible.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="matrix" /> is not square.
            </exception></member>
        <member name="M:Google.Maps.Util.FakeRequest.#ctor(System.Boolean,System.String,System.Byte[],System.Int32)">
            <summary>
            Fake request for use in testing.
            </summary></member>
        <member name="T:Google.Maps.Util.FakeRequestFactory">
            <summary>
            Fake request factory for use in testing.
            </summary></member>
        <member name="F:Google.Maps.Util.FakeRequestFactory.CreatedRequests">
            <summary>
            All requests created by this factory.
            </summary></member>
        <member name="M:Google.Maps.Util.FakeRequestFactory.createPostRequest(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Returns the next enqueued request.
            </summary></member>
        <member name="M:Google.Maps.Util.FakeRequestFactory.createGetRequest(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Returns the next enqueued request.
            </summary></member>
        <member name="M:Google.Maps.Util.FakeRequestFactory.Enqueue(Google.Maps.Util.RequestBase)">
            <summary>
            Enqueue a request (usually FakeRequest) to return in a createPostRequest call.
            </summary></member>
        <member name="T:Google.Maps.Util.IRequestFactory">
            <summary>
            Factory for creating network requests.
            </summary></member>
        <member name="M:Google.Maps.Util.IRequestFactory.createGetRequest(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Creates a new GET network request.
            </summary>
            <param name="url">URL.</param>
            <param name="headers">Request headers.</param>
            <param name="timeoutSeconds">Request timeout in seconds.</param>
            <returns></returns></member>
        <member name="M:Google.Maps.Util.IRequestFactory.createPostRequest(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Creates a new POST network request.
            </summary>
            <param name="url">URL.</param>
            <param name="postData">Request body data.</param>
            <param name="headers">Request headers.</param>
            <param name="timeoutSeconds">Request timeout in seconds.</param>
            <returns></returns></member>
        <member name="T:Google.Maps.Util.LoopBreakIterator">
            <summary>
            A convenience class for dealing with loop break lists (arrays of indices) such as VertexBreaks
            in <see cref="N:Google.Maps.Feature.Shape" />.
            </summary>
            <remarks>
            Provides an index iterator that monitors the array of loop breaks and provides IsLoopStart and
            IsLoopEnd predicates.
            </remarks></member>
        <member name="F:Google.Maps.Util.LoopBreakIterator.Breaks">
            <summary>
            Loop breaks, indicating indices that correspond to the start of a loop.
            </summary>
            <remarks>
            The 0 index is implied, but may be explicitly included.
            </remarks></member>
        <member name="F:Google.Maps.Util.LoopBreakIterator.MaxValue">
            <summary>
            The upper bound (inclusive) of the iterator.
            </summary></member>
        <member name="F:Google.Maps.Util.LoopBreakIterator.CurrentValue">
            <summary>
            The current iterator value. Initialised to -1 before iteration begins.
            </summary>
            <remarks>
            A value equal to <see cref="F:Google.Maps.Util.LoopBreakIterator.MaxValue" /> indicates the iterator is exhausted.
            </remarks></member>
        <member name="F:Google.Maps.Util.LoopBreakIterator.BreaksIndex">
            <summary>
            Index into the <see cref="F:Google.Maps.Util.LoopBreakIterator.Breaks" /> array of the start of the next loop that starts at a
            value greater than or equal to <see cref="F:Google.Maps.Util.LoopBreakIterator.CurrentValue" />.
            </summary>
            <remarks>
            If CurrentValue is not at the start of a loop, this will refer to the start of the next
            loop. When the iterator moves past the first index of a loop, this value is updated to refer
            to the start of the next loop.  Initially, CurrentValue == -1, and BreaksIndex == 0.
            </remarks></member>
        <member name="M:Google.Maps.Util.LoopBreakIterator.#ctor(System.Int32,System.Int32[],System.Boolean)">
            <summary>
            Create a new iterator using the supplied breaks array.
            </summary>
            <param name="maxValue">The maximum value returned by this iterator.</param>
            <param name="breaks">An array of indices, each corresponding to the start of a loop.</param>
            <param name="copy">Optional parameter indicating whether to take a local copy of the
            breaks array. Defaults to false, so the original breaks array is used, requiring that
            the array not be modified while the iterator is being used.</param></member>
        <member name="M:Google.Maps.Util.LoopBreakIterator.GetEnumerator">
            <summary>
            Allows iterator to be used in foreach loops. This object is its own IEnumerator.
            </summary>
            <returns>Reference to this object</returns></member>
        <member name="M:Google.Maps.Util.LoopBreakIterator.MoveNext">
            <summary>
            Moves the iterator to the next value while updating the <see cref="F:Google.Maps.Util.LoopBreakIterator.BreaksIndex" /> field if
            necessary.
            </summary>
            <remarks>
            If the current iterator value corresponds to the start of a loop break,
            <see cref="F:Google.Maps.Util.LoopBreakIterator.BreaksIndex" /> is incremented to refer to the next loop break start.
            </remarks>
            <returns>False if the iterator is exhausted.</returns></member>
        <member name="M:Google.Maps.Util.LoopBreakIterator.Reset">
            <summary>
            Resets the iterator. Apparently only used for COM interoperability in DotNet.
            </summary></member>
        <member name="P:Google.Maps.Util.LoopBreakIterator.System#Collections#IEnumerator#Current">
            <inheritdoc /></member>
        <member name="P:Google.Maps.Util.LoopBreakIterator.Current">
            <summary>
            Returns the current value in a type safe way.
            </summary></member>
        <member name="P:Google.Maps.Util.LoopBreakIterator.IsLoopStart">
            <summary>
            Returns whether the iterator's current value refers to the first index of a loop.
            </summary></member>
        <member name="P:Google.Maps.Util.LoopBreakIterator.IsLoopEnd">
            <summary>
            Returns whether the iterator's current value refers to the last of a loop.
            </summary></member>
        <member name="M:Google.Maps.Util.LoopBreakIterator.CheckInRange">
            <summary>
            General guard function to prevent the iterator being used in an invalid state, e.g., before
            the iterator has moved to the first item, or after the iterator is exhausted.
            </summary>
            <exception cref="T:System.InvalidOperationException">If iterator value undefined.</exception></member>
        <member name="T:Google.Maps.Unity.AreaMeshFactory">
            <summary>
            A factory for creating Unity GameObjects from Areas.
            </summary></member>
        <member name="F:Google.Maps.Unity.AreaMeshFactory.RenderOrderManager">
            <summary>
            A shared cache used to minimise the number of created materials.
            </summary></member>
        <member name="F:Google.Maps.Unity.AreaMeshFactory.MeshBuilder">
            <summary>
            A helper object for building a Mesh for Unity's <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.AreaMeshFactory.FinalizerRegister">
            <summary>
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </summary></member>
        <member name="F:Google.Maps.Unity.AreaMeshFactory.DefaultMaterial">
            <summary>
            Default material.
            </summary></member>
        <member name="M:Google.Maps.Unity.AreaMeshFactory.#ctor(Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject})">
            <summary>Constructor.</summary>
            <param name="renderOrderManager">Manager for sorting features..</param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param></member>
        <member name="M:Google.Maps.Unity.AreaMeshFactory.BuildMeshForGameObject(UnityEngine.GameObject,Google.Maps.Feature.Shape.Area,Google.Maps.Feature.Style.RegionishStyle)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.AreaMeshFactory.GenerateMesh(Google.Maps.Feature.Shape.Area)">
            <summary>
            Constructs a Unity Mesh from the specified Area and styling information.
            </summary>
            <returns>The mesh.</returns>
            <param name="shape">Area containing geometry data.</param></member>
        <member name="M:Google.Maps.Unity.AreaMeshFactory.BuildUVs(Google.Maps.Unity.MeshBuilder)">
            <summary>
            Constructs UV coordinates for the Area polygon. The UVs generated are of the following form:
            Channel 0: (x, y, width, height). (x, y) is the coordinates of each vertex relative to the
            bottom-left corner of the axis-aligned bounding box for the Area. (width, height) is the
            size of the bounding box.
            </summary>
            <param name="meshBuilder">MeshBuilder constructing the area.</param></member>
        <member name="T:Google.Maps.Unity.ExtrudedAreaMeshFactory">
            <summary>
            A factory for creating Unity GameObjects from ExtrudedAreas.
            </summary></member>
        <member name="F:Google.Maps.Unity.ExtrudedAreaMeshFactory.MeshBuilder">
            <summary>
            A helper object for building a Mesh for Unity's <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.ExtrudedAreaMeshFactory.FinalizerRegister">
            <summary>
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </summary></member>
        <member name="F:Google.Maps.Unity.ExtrudedAreaMeshFactory.RenderOrderManager">
            <summary>
            The render order manager to use for game objects created by this factory.
            </summary></member>
        <member name="M:Google.Maps.Unity.ExtrudedAreaMeshFactory.#ctor(Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject})">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.Unity.ExtrudedAreaMeshFactory.BuildMeshForGameObject(UnityEngine.GameObject,Google.Maps.Feature.Shape.ExtrudedArea,Google.Maps.Feature.Style.ExtrudedStructureStyle,Google.Maps.Feature.ExtrudedStructure,System.Single)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.ExtrudedAreaMeshFactory.DetermineMaterials(Google.Maps.Feature.Style.ExtrudedStructureStyle)">
            <summary>
            Returns the collection of Materials to apply to an ExtrudedArea as determined from the
            supplied style, with wall material before roof material.
            </summary>
            <remarks>
            If the same material is used for walls and roofs, a single material is returned.
            </remarks>
            <param name="style">The style from which to determine materials</param>
            <returns>An array of materials to apply to an ExtrudedArea</returns></member>
        <member name="M:Google.Maps.Unity.ExtrudedAreaMeshFactory.AdjustShapeHeightFromStyle(Google.Maps.Feature.Shape.ExtrudedArea,Google.Maps.Feature.Style.ExtrudedStructureStyle)">
            <summary>
            Applies height styling options to extruded areas.
            </summary>
            <param name="shape">An ExtrudedArea to adjust if necessary.</param>
            <param name="style">The style from which to get the height styling options.</param>
            <returns>The adjusted ExtrudedArea</returns></member>
        <member name="M:Google.Maps.Unity.ExtrudedAreaMeshFactory.ApplyMinBaseHeightToShape(Google.Maps.Feature.Shape.ExtrudedArea,System.Single)">
            <summary>
            Applies a minimum height to the base level of the provided <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea" />.
            </summary>
            <param name="shape">An <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea" /> to adjust.</param>
            <param name="minBaseHeight">
            The minimum height of the base level of the <see cref="T:Google.Maps.Feature.Shape.ExtrudedArea" />.
            </param></member>
        <member name="M:Google.Maps.Unity.ExtrudedAreaMeshFactory.GenerateMesh(Google.Maps.Feature.Shape.ExtrudedArea,Google.Maps.Unity.UvSpace3D,System.Int32)">
            <summary>
            Constructs a Unity Mesh from the specified ExtrudedArea and styling information.
            </summary>
            <param name="shape">ExtrudedArea containing geometry data.</param>
            <param name="uvSpace3D">The UV reference frame used to generate UV coordinates.</param>
            <param name="roofSubmeshIndex">Specified the index of the submesh to which the roof
            triangles will be added, allowing for ExtrudedAreas with a single material, or differing
            materials for roof and walls.
            </param></member>
        <member name="M:Google.Maps.Unity.ExtrudedAreaMeshFactory.CreateUvSpace3D(Google.Maps.Feature.Shape.ExtrudedArea,Google.Maps.Feature.Style.ExtrudedStructureStyle.RoofMaterialAlignmentType)">
            <summary>
            Creates a new <see cref="T:Google.Maps.Unity.UvSpace3D" /> for the supplied shape either aligned to the direction
            of the shape (longest edge) or aligned to world space coordinates.
            </summary>
            <param name="shape">The shape for which to create a UvSpace3D</param>
            <param name="alignment">Whether to align to world space or shape direction.</param>
            <returns>The UV coordinate space.</returns></member>
        <member name="M:Google.Maps.Unity.ExtrudedAreaMeshFactory.LongestEdge(UnityEngine.Vector2[])">
            <summary>Returns the direction of longest edge between two adjacent vertices.</summary>
            <remarks>
            If the vertices are intended to represent a closed curve, the last vertex must be a copy of
            the first vertex.
            </remarks>
            <param name="vertices">Vertices</param>
            <returns>A Vector2 representing the longest edge direction.</returns></member>
        <member name="M:Google.Maps.Unity.ExtrudedAreaMeshFactory.AddWall(UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,Google.Maps.Unity.MeshBuilder)">
            <summary>
            Adds a wall to the supplied mesh builder.
            </summary>
            <remarks>
            The supplied vertices vStart2D and vEnd2D are assumed to be in anticlockwise winding order
            (so that the outward normal points to the right of the segment) and relative to the supplied
            origin.
            </remarks>
            <param name="vStart2D">The initial vertex of the wall segment.</param>
            <param name="vEnd2D">The end vertex of the wall segment.</param>
            <param name="origin">The origin of the shape from which this wall is derived.</param>
            <param name="minZ">The height to which the wall should extend downwards.</param>
            <param name="maxZ">The height of the top of the wall.</param>
            <param name="meshBuilder">The mesh to which the wall should be added.</param></member>
        <member name="T:Google.Maps.Unity.LineGroupMeshFactory">
            <summary>
            A factory for creating Unity GameObjects from <see cref="T:Google.Maps.Feature.Shape.LineGroup" />s.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.RoadZOrder">
            <summary>
            Z-order to use for roads.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.RoadBorderZOrder">
            <summary>
            Z-order to use for road borders.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.MaxNonMiteredJointScale">
            <summary>
            The maximum distance, as a multiple of half line width, that the outer point of a line
            corner can be from the center point of the join before the outer corner will be mitered.
            This value is slightly larger than 1 / sin(60), allowing corners up to 60 degrees to be
            un-mitered.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.InnerJointLimit">
            <summary>
            A value used to limit a dot product in the corner inner point calculation expressed in
            multiples of the segment width.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.SegmentDefaultMaterial">
            <summary>
            Default color assigned to segments when no styling material is provided.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.RenderOrderManager">
            <summary>
            The render order manager to use for game objects created by this factory.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.MeshBuilder">
            <summary>
            A helper object for building a Mesh for Unity's <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.FinalizerRegister">
            <summary>
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </summary></member>
        <member name="M:Google.Maps.Unity.LineGroupMeshFactory.#ctor(Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject})">
            <summary>Constructor.</summary>
            <param name="renderOrderManager">Manager for sorting features.</param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param></member>
        <member name="M:Google.Maps.Unity.LineGroupMeshFactory.#ctor(Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},UnityEngine.Material)">
            <summary>Constructor.</summary>
            <param name="renderOrderManager">Manager for sorting features.</param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="defaultMaterial">
            Default material assigned to segments when no styling material is provided.
            </param></member>
        <member name="M:Google.Maps.Unity.LineGroupMeshFactory.BuildMeshForGameObject(UnityEngine.GameObject,Google.Maps.Feature.Shape.LineGroup,Google.Maps.Feature.Style.SegmentishStyle)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Unity.LineGroupMeshFactory.IsValidShape(Google.Maps.Feature.Shape.LineGroup)">
            <summary>
            Verifies whether the provided <see cref="T:Google.Maps.Feature.Shape.LineGroup" /> can be used to construct a
            <see cref="T:UnityEngine.Mesh" /> using <see cref="T:Google.Maps.Unity.LineGroupMeshFactory" />.
            </summary>
            <param name="shape">Line shape to verify.</param></member>
        <member name="M:Google.Maps.Unity.LineGroupMeshFactory.GenerateMesh(Google.Maps.Feature.Shape.LineGroup,Google.Maps.Feature.Style.SegmentishStyle,System.Single)">
            <summary>
            Constructs a Unity Mesh from the specified Line and styling information.
            </summary>
            <remarks>
            In the event the provided <see cref="T:Google.Maps.Feature.Style.SegmentishStyle" /> has no material set, the mesh will
            be generated without UV coordinates.
            </remarks>
            <param name="shape">LineShape containing geometry data.</param>
            <param name="style">Styling inforation.</param>
            <param name="width">The width of the Line geometry to generate.</param></member>
        <member name="M:Google.Maps.Unity.LineGroupMeshFactory.AddEndCap(System.Int32,System.Int32,Google.Maps.Unity.MeshBuilder,Google.Maps.Unity.LineGroupMeshFactory.EndcapUvSpace,UnityEngine.Vector3,UnityEngine.Vector3)">
            <summary>
            Adds a semi-circular endcap to a mesh.
            </summary>
            <param name="v0">Index into the mesh representing one of the vertices at the end of the road
            segment. The triangle v0, v1, (v0 + <see cref="F:Google.Maps.Unity.LineGroupMeshFactory.EndcapUvSpace.forward" />) should have a
            clockwise winding order.
            </param>
            <param name="v1">Index into the mesh representing one of the vertices at the end of the road
            segment. The triangle v0, v1, (v0 + <see cref="F:Google.Maps.Unity.LineGroupMeshFactory.EndcapUvSpace.forward" />) should have a
            clockwise winding order.
            </param>
            <param name="meshBuilder">Mesh builder to which vertices are added.</param>
            <param name="uvSpace">UV space for working out UV coordinates.</param>
            <param name="center">The center vertex of the endcap relative to the object center.</param>
            <param name="offset">An offset added to all generated vertices.</param></member>
        <member name="M:Google.Maps.Unity.LineGroupMeshFactory.BuildExtrudedVertices(Google.Maps.Unity.MeshBuilder,Google.Maps.Feature.Shape.LineGroup,System.Single)">
            <summary>
            Creates a 2D extrusion of the specified line, axis aligned with respect to the X and Z
            axes.
            </summary>
            <param name="meshBuilder">MeshBuilder the vertices are constructed in.</param>
            <param name="shape">LineGroup to extrude.</param>
            <param name="widthMeters">Width of the extrusion in meters.</param></member>
        <member name="T:Google.Maps.Unity.LineGroupMeshFactory.LineExtrusion">
            <summary>
            Represents an extrusion of a polyline.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.LineExtrusion.Polyline">
            <summary>
            The polyline the extrusion was made from.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.LineExtrusion.Left">
            <summary>
            The left side of the extrusion.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.LineExtrusion.Right">
            <summary>
            The right side of the extrusion.
            </summary></member>
        <member name="F:Google.Maps.Unity.LineGroupMeshFactory.LineExtrusion.Endcaps">
            <summary>
            The endcaps of the extrusion.
            </summary></member>
        <member name="M:Google.Maps.Unity.LineGroupMeshFactory.LineExtrusion.#ctor(System.Collections.Generic.IList{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector3})">
            <summary>
            Constructor.
            </summary>
            <param name="polyline">The polyline the extrusion was made from.</param>
            <param name="left">The left side of the extrusion.</param>
            <param name="right">The right side of the extrusion.</param>
            <param name="endcaps"></param></member>
        <member name="M:Google.Maps.Unity.LineGroupMeshFactory.ExtrudeVertices(System.Single,System.Collections.Generic.IList{UnityEngine.Vector3},UnityEngine.Vector3,System.Boolean,System.Boolean)">
            <summary>
            Extrudes the given polyline.
            </summary>
            <param name="widthMeters">The width of the extrusion in meters.</param>
            <param name="lineVertices">The line to extrude.</param>
            <param name="offset">An offset added to all generated vertices.</param>
            <param name="startCap">Whether to add an endcap to the start of the line.</param>
            <param name="endCap">Whether to add an endcap to the end of the line.</param>
            <returns>The extrusion of the line.</returns></member>
        <member name="M:Google.Maps.Unity.LineGroupMeshFactory.CalculateLineDirections(System.Collections.Generic.IList{UnityEngine.Vector3})">
            <summary>
            Calculates the direction that each edge in the specified Line is pointing.
            </summary>
            <remarks>
            An edge points from its first vertex to its second.
            </remarks>
            <param name="lineVertices">The vertices that describe the Line.</param></member>
        <member name="T:Google.Maps.Unity.ModeledVolumeMeshFactory">
            <summary>
            A factory for creating Unity GameObjects from ModelledVolumes.
            </summary></member>
        <member name="F:Google.Maps.Unity.ModeledVolumeMeshFactory.MeshBuilder">
            <summary>
            A helper object for building a Mesh for Unity's <see cref="T:UnityEngine.GameObject" />.
            </summary></member>
        <member name="F:Google.Maps.Unity.ModeledVolumeMeshFactory.FinalizerRegister">
            <summary>
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </summary></member>
        <member name="M:Google.Maps.Unity.ModeledVolumeMeshFactory.#ctor(Google.Maps.Unity.RenderOrderManager,Google.Maps.Unity.FinalizerRegister{UnityEngine.GameObject},System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="renderOrderManager">
            The render order manager to use for game objects created by this factory.
            </param>
            <param name="finalizerRegister">
            Register for <see cref="T:UnityEngine.GameObject" /> finalizers.
            </param>
            <param name="use32BitMeshIndexBuffers">
            Whether to use 32-bit index buffers when creating a mesh (i.e. support more than 65536
            vertices).
            </param></member>
        <member name="F:Google.Maps.Unity.ModeledVolumeMeshFactory.RenderOrderManager">
            <summary>
            The render order manager to use for game objects created by this factory.
            </summary></member>
        <member name="M:Google.Maps.Unity.ModeledVolumeMeshFactory.BuildMeshForGameObject(UnityEngine.GameObject,Google.Maps.Feature.Shape.ModeledVolume,Google.Maps.Feature.Style.ModeledStructureStyle)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Util.MathsUtils">
            <summary>
            Static maths utils.
            </summary>
            <remarks>
            This class doesn't use generics because .Net generics don't natively support arithmetic
            operators.
            </remarks></member>
        <member name="M:Google.Maps.Util.MathsUtils.BiLerpUnclamped(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Performs a bi-linear interpolation of the four provided values.</summary>
            <remarks>
            The parameters exist on a
            square as follows:
            x1y1                    x2y1
            +----------------------+
            |                |     |
            |                |     |
            |                |     |
            |       yPercent |     |
            |                |     |
            |                |     |
            |                |     |
            |    xPercent    |     |
            |----------------+-----|
            |                |     |
            |                |     |
            +----------------------+
            x1y2                    x2y2
            </remarks>
            <param name="x1y1">The top-left value to interpolate.</param>
            <param name="x2y1">The top-right value to interpolate.</param>
            <param name="x1y2">The bottom-left value to interpolate.</param>
            <param name="x2y2">The bottom-right value to interpolate.</param>
            <param name="xLerp">
            A value indicating how far to linearly interpolate horizontally, when between 0 and 1.
            When outside this range, a linear extrapolation is performed.
            </param>
            <param name="yLerp">
            A value indicating how far to linearly interpolate vertically, when between 0 and 1. when
            outside of this range, a linear extrapolation is performed.
            </param></member>
        <member name="M:Google.Maps.Util.MathsUtils.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Clamps the given value to the closed interval [min, max].
            </summary>
            <remarks>
            Values less than min become min, values greater than max become max, and values in between
            min and max are unchanged.
            </remarks>
            <param name="val">Value to clamp</param>
            <param name="min">Minimum value</param>
            <param name="max">Maximum value</param>
            <returns>The clamped value</returns></member>
        <member name="M:Google.Maps.Util.MathsUtils.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            Clamps the given value to the closed interval [min, max].
            </summary>
            <remarks>
            Values less than min become min, values greater than max become max, and values in between
            min and max are unchanged.
            </remarks>
            <param name="val">Value to clamp</param>
            <param name="min">Minimum value</param>
            <param name="max">Maximum value</param>
            <returns>The clamped value</returns></member>
        <member name="M:Google.Maps.Util.MathsUtils.Wrap(System.Double,System.Double,System.Double)">
            <summary>
            Wraps the given value into the half-open interval [min, max).
            </summary>
            <remarks>
            For example, with an interval of [-180, 180), -190 becomes 170, 190 becomes -170, and 180
            becomes -180.
            </remarks>
            <param name="val">Value to wrap</param>
            <param name="min">Minimum value</param>
            <param name="max">Maximum value</param>
            <returns>The wrapped value</returns></member>
        <member name="M:Google.Maps.Util.MathsUtils.Wrap(System.Int32,System.Int32,System.Int32)">
            <summary>
            Wraps the given value into the half-open interval [min, max).
            </summary>
            <remarks>
            For example, with an interval of [-180, 180), -190 becomes 170, 190 becomes -170, and 180
            becomes -180.
            </remarks>
            <param name="val">Value to wrap</param>
            <param name="min">Minimum value</param>
            <param name="max">Maximum value</param>
            <returns>The wrapped value</returns></member>
        <member name="M:Google.Maps.Util.MathsUtils.NonNegativeMod(System.Double,System.Double)">
            <summary>
            Returns the non-negative remainder of x / m.
            </summary></member>
        <member name="M:Google.Maps.Util.MathsUtils.NonNegativeMod(System.Int32,System.Int32)">
            <summary>
            Returns the non-negative remainder of x / m.
            </summary></member>
        <member name="M:Google.Maps.Util.MathsUtils.ClosestPowerOfTwo(System.Int32)">
            <summary>
            Equivilant to <see cref="M:UnityEngine.Mathf.ClosestPowerOfTwo(System.Int32)" /> but does not depend on a native
            implementation (so it can be called from our unit tests not running inside Unity).
            </summary></member>
        <member name="M:Google.Maps.Util.MathsUtils.NextPowerOfTwo(System.Int32)">
            <summary>
            Equivilant to <see cref="M:UnityEngine.Mathf.NextPowerOfTwo(System.Int32)" /> but does not depend on a native
            implementation (so it can be called from our unit tests not running inside Unity).
            </summary></member>
        <member name="F:Google.Maps.Util.MathsUtils.ToRadians">
            <summary>
            Constant for converting decimal degrees to radians (as expected by .NET trig functions).
            </summary></member>
        <member name="F:Google.Maps.Util.MathsUtils.FromRadians">
            <summary>
            Constant for converting radians to decimal degrees. Inverse of <see cref="F:Google.Maps.Util.MathsUtils.ToRadians" />.
            </summary></member>
        <member name="T:Google.Maps.Util.RetryingRequest">
            <summary>
            Network request that supports retrying on failure.
            </summary>
            <remarks>
            Similar to WWW class but with support for retrying on failure and testing. Like WWW it is a
            coroutine.
            On completion the caller can access IsError, Error and Response variables.
            </remarks></member>
        <member name="T:Google.Maps.Util.RetryingRequest.State">
            <summary>
            State the request is in.
            </summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.State.NotStarted">
            <summary>
            Initial state, before the coroutine has started.
            </summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.State.SendingRequest">
            <summary>
            Network request is in flight.
            </summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.State.Waiting">
            <summary>
            Waiting before retrying a failed request.
            </summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.State.Finished">
            <summary>
            Request is done, either because it finished successfully or it failed maxAttempts times.
            </summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.MaxAttempts">
            <summary>Maximum number of attempts to make before failing.</summary>
            <remarks>Setting to 0 gives infinite attempts.</remarks></member>
        <member name="F:Google.Maps.Util.RetryingRequest.TimeoutSeconds">
            <summary>Request timeout in seconds.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.DelayJitterSeconds">
            <summary>Maximum random delay in seconds added to delaySeconds.</summary>
            <remarks>
            The actual additional delay will be a random number between 0 and delayJitterSeconds.
            </remarks></member>
        <member name="F:Google.Maps.Util.RetryingRequest.RetryIntervalSeconds">
            <summary>
            Delay in seconds to wait after a failed attempt. Doubles after every failed request.
            </summary>
            <remarks>
            Additional random delay of up to delayJittersSeconds is added to delaySeconds.
            </remarks></member>
        <member name="F:Google.Maps.Util.RetryingRequest.MaxRetryIntervalSeconds">
            <summary>Maximum retry interval in seconds to wait after a failed attempt.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.DefaultMaxAttempts">
            <summary>Default value for <see cref="F:Google.Maps.Util.RetryingRequest.MaxAttempts" />.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.DefaultMaxRetryIntervalSeconds">
            <summary>Default value for <see cref="F:Google.Maps.Util.RetryingRequest.MaxRetryIntervalSeconds" />.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.DefaultDelayJitterSeconds">
            <summary>Default value for <see cref="F:Google.Maps.Util.RetryingRequest.DelayJitterSeconds" />.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.DefaultTimeoutSeconds">
            <summary>Default value of <see cref="F:Google.Maps.Util.RetryingRequest.TimeoutSeconds" />.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.DefaultInitialRetryIntervalSeconds">
            <summary>Default initial value for <see cref="F:Google.Maps.Util.RetryingRequest.RetryIntervalSeconds" />.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.DefaultPostHeaders">
            <summary>Default request header specifying the post data content type.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.Attempt">
            <summary>Current attempt to send the request.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.CurrentState">
            <summary>Current state of the request.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.CurrentRequest">
            <summary>Current in-flight network request.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest._Current">
            <summary>Current coroutine that Unity should process before continuing.</summary></member>
        <member name="P:Google.Maps.Util.RetryingRequest.Current">
            <inheritdoc /></member>
        <member name="F:Google.Maps.Util.RetryingRequest.Url">
            <summary>Request URL.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.Method">
            <summary>The HTTP request method to use.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.PostData">
            <summary>Request body data.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.Headers">
            <summary>Request headers.</summary></member>
        <member name="F:Google.Maps.Util.RetryingRequest.RequestFactory">
            <summary>Factory used to create individual network requests.</summary></member>
        <member name="M:Google.Maps.Util.RetryingRequest.CreatePostRequest(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Single,System.Single,System.Int32,System.Int32,System.Single)">
            <summary>
            Creates a POST request.
            </summary>
            <param name="url">URL.</param>
            <param name="postData">Request body data.</param>
            <param name="headers">
            Request headers. Null corresponds to using the x-protobuf header.
            </param>
            <param name="initialRetryIntervalSeconds">The initial retry interval in seconds.</param>
            <param name="maxRetryIntervalSeconds">The maximum retry interval in seconds.</param>
            <param name="maxAttempts">The maximum number of attempts to make.</param>
            <param name="timeoutSeconds">Request timeout in seconds.</param>
            <param name="delayJitterSeconds">The maximum random extra delay in seconds.</param>
            <returns>The created POST request.</returns></member>
        <member name="M:Google.Maps.Util.RetryingRequest.CreateGetRequest(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Single,System.Single,System.Int32,System.Int32,System.Single)">
            <summary>
            Creates a GET request.
            </summary>
            <param name="url">URL.</param>
            <param name="headers">Request headers.</param>
            <param name="initialRetryIntervalSeconds">The initial retry interval in seconds.</param>
            <param name="maxRetryIntervalSeconds">The maximum retry interval in seconds.</param>
            <param name="maxAttempts">The maximum number of attempts to make.</param>
            <param name="timeoutSeconds">Request timeout in seconds.</param>
            <param name="delayJitterSeconds">The maximum random extra delay in seconds.</param>
            <returns>The created GET request.</returns></member>
        <member name="M:Google.Maps.Util.RetryingRequest.#ctor(System.String,Google.Maps.Util.RequestBase.MethodType,System.Collections.Generic.Dictionary{System.String,System.String},System.Single,System.Single,System.Int32,System.Int32,System.Single,System.Byte[])">
            <summary>Constructor.</summary>
            <param name="url">URL.</param>
            <param name="method">The HTTP method to use.</param>
            <param name="headers">Request headers.</param>
            <param name="initialRetryIntervalSeconds">The initial retry interval in seconds.</param>
            <param name="maxRetryIntervalSeconds">The maximum retry interval in seconds.</param>
            <param name="maxAttempts">The maximum number of attempts to make.</param>
            <param name="timeoutSeconds">Request timeout in seconds.</param>
            <param name="delayJitterSeconds">The maximum random extra delay in seconds.</param>
            <param name="postData">Request body data.</param></member>
        <member name="M:Google.Maps.Util.RetryingRequest.SetRequestFactoryForTesting(Google.Maps.Util.IRequestFactory)">
            <summary>
            Sets a fake request factory for use in tests.
            </summary></member>
        <member name="M:Google.Maps.Util.RetryingRequest.MoveNext">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Util.RequestBase">
            <summary>
            Base class for requests.
            </summary></member>
        <member name="T:Google.Maps.Util.RequestBase.MethodType">
            <summary>
            Types of network requests available.
            </summary></member>
        <member name="F:Google.Maps.Util.RequestBase.IsDone">
            <summary>
            Whether the network request is finished.
            </summary></member>
        <member name="F:Google.Maps.Util.RequestBase.IsError">
            <summary>
            Whether there was an error making the request. Only set when finished.
            </summary></member>
        <member name="F:Google.Maps.Util.RequestBase.Error">
            <summary>
            Error message received in case of failure.
            </summary></member>
        <member name="F:Google.Maps.Util.RequestBase.Response">
            <summary>
            Response received if successful.
            </summary></member>
        <member name="F:Google.Maps.Util.RequestBase.ResponseCode">
            <summary>
            Response code received. In case of retries or redirects, this is the last response code
            received.
            </summary></member>
        <member name="F:Google.Maps.Util.RequestBase.ResponseHeaders">
            <summary>
            Response headers received if successful.
            </summary></member>
        <member name="M:Google.Maps.Util.RequestBase.MoveNext">
            <inheritdoc /></member>
        <member name="P:Google.Maps.Util.RequestBase.Current">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.RequestBase.Reset">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Util.WwwRequest">
            <summary>
            A wrapper around the UnityWebRequest object to help with testing. Should not be used by client
            code because it does not support retrying on failure. Use Request instead.
            </summary></member>
        <member name="T:Google.Maps.Util.WwwRequest.State">
            <summary>
            State the request is in.
            </summary></member>
        <member name="F:Google.Maps.Util.WwwRequest.State.NotStarted">
            <summary>
            Initial state, before the coroutine has started.
            </summary></member>
        <member name="F:Google.Maps.Util.WwwRequest.State.Started">
            <summary>
            Network request is in flight.
            </summary></member>
        <member name="F:Google.Maps.Util.WwwRequest.State.Finished">
            <summary>
            Request is done.
            </summary></member>
        <member name="F:Google.Maps.Util.WwwRequest.CurrentState">
            <summary>
            Current state of the request.
            </summary></member>
        <member name="F:Google.Maps.Util.WwwRequest.Request">
            <summary>
            Network request.
            </summary></member>
        <member name="F:Google.Maps.Util.WwwRequest.RequestOperation">
            <summary>
            Network request coroutine.
            </summary></member>
        <member name="M:Google.Maps.Util.WwwRequest.CreatePostRequest(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Creates a new POST request.
            </summary>
            <param name="url">URL.</param>
            <param name="headers">Request headers.</param>
            <param name="postData">Request body data.</param>
            <param name="timeoutSeconds">Request timeout in seconds.</param>
            <returns>A WwwRequest.</returns></member>
        <member name="M:Google.Maps.Util.WwwRequest.CreateGetRequest(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            Creates a new GET request.
            </summary>
            <param name="url">URL.</param>
            <param name="headers">Request headers.</param>
            <param name="timeoutSeconds">Request timeout in seconds.</param>
            <returns>A WwwRequest.</returns></member>
        <member name="M:Google.Maps.Util.WwwRequest.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Byte[],System.Int32,Google.Maps.Util.RequestBase.MethodType)">
            <summary>
            Constructor.
            </summary>
            <param name="url">URL.</param>
            <param name="headers">Request headers.</param>
            <param name="postData">Request body data.</param>
            <param name="timeoutSeconds">Request timeout in seconds.</param>
            <param name="method">The request method to use.</param></member>
        <member name="M:Google.Maps.Util.WwwRequest.MoveNext">
            <inheritdoc /></member>
        <member name="P:Google.Maps.Util.WwwRequest.Current">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Util.WwwRequestFactory">
            because it does not support retrying on failure. Use RequestFactory instead.</member>
        <member name="M:Google.Maps.Util.WwwRequestFactory.createGetRequest(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.WwwRequestFactory.createPostRequest(System.String,System.Byte[],System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Util.OrderPreservingMap">
            <summary>
            Automatically builds a partial map from a finite integer domain to a finite integer codomain
            (both contiguous ranges) such that the mapping is order-preserving. The domain and codomain
            are specified by the user, but the image and the individual mappings are generated. When
            adding a new value, the map is extended if there is a free space in the codomain that allows
            order to be preserved. If not, existing inputs are remapped  to accommodate the new value if
            possible. In this case <see cref="E:Google.Maps.Util.OrderPreservingMap.RemapEvent" /> is triggered. If the codomain is too small to
            accommodate the new value <see cref="T:Google.Maps.Util.OrderPreservingMap.CodomainExhaustedException" /> is thrown.
            </summary></member>
        <member name="T:Google.Maps.Util.OrderPreservingMap.CodomainExhaustedException">
            <summary>
            Thrown when the codomain is completely exhausted.
            </summary></member>
        <member name="T:Google.Maps.Util.OrderPreservingMap.Node">
            <summary>
            Binary tree node.
            </summary></member>
        <member name="F:Google.Maps.Util.OrderPreservingMap.Node.Left">
            <summary>
            Left child.
            </summary></member>
        <member name="F:Google.Maps.Util.OrderPreservingMap.Node.Right">
            <summary>
            Right child.
            </summary></member>
        <member name="F:Google.Maps.Util.OrderPreservingMap.Node.X">
            <summary>
            Value.
            </summary></member>
        <member name="M:Google.Maps.Util.OrderPreservingMap.Node.#ctor(Google.Maps.Util.OrderPreservingMap.Node,Google.Maps.Util.OrderPreservingMap.Node,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="left">Left child.</param>
            <param name="right">Right child.</param>
            <param name="x">Value.</param></member>
        <member name="F:Google.Maps.Util.OrderPreservingMap.CodomainMin">
            <summary>
            The minimum value in the codomain.
            </summary></member>
        <member name="F:Google.Maps.Util.OrderPreservingMap.CodomainMax">
            <summary>
            The maximum value in the codomain.
            </summary></member>
        <member name="F:Google.Maps.Util.OrderPreservingMap.Map">
            <summary>
            The current map.
            </summary></member>
        <member name="F:Google.Maps.Util.OrderPreservingMap.Root">
            <summary>
            The root node of a binary tree containing all of the values in the domain.
            </summary></member>
        <member name="T:Google.Maps.Util.OrderPreservingMap.RemapArgs">
            <summary>
            Arguments for <see cref="E:Google.Maps.Util.OrderPreservingMap.RemapEvent" />.
            </summary></member>
        <member name="E:Google.Maps.Util.OrderPreservingMap.RemapEvent">
            <summary>
            Triggered when previous mappings need to be remapped to accommodate a new value.
            </summary></member>
        <member name="M:Google.Maps.Util.OrderPreservingMap.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.Util.OrderPreservingMap.EnsureNode(System.Int32,Google.Maps.Util.OrderPreservingMap.Node@)">
            <summary>
            Ensure that there's a node corresponding to the given value in the binary tree rooted at
            the supplied node.
            </summary></member>
        <member name="M:Google.Maps.Util.OrderPreservingMap.TryExtendImage(System.Int32,Google.Maps.Util.OrderPreservingMap.Node@,System.Int32,System.Int32)">
            <summary>
            Attempt to extend the map to accommodate a new value x.
            </summary></member>
        <member name="M:Google.Maps.Util.OrderPreservingMap.TryExtendDomain(System.Int32)">
            <summary>
            Adds a value to the domain of the map, changing the individual mappings as necessary. Tries
            to extend the map without changing any existing mappings. Triggers <see cref="E:Google.Maps.Util.OrderPreservingMap.RemapEvent" />
            and returns false if  existing mappings must be changed in order to accommodate the new
            value. Returns true otherwise. Throws <see cref="T:Google.Maps.Util.OrderPreservingMap.CodomainExhaustedException" /> if there is
            no room left in the codomain for another value.
            </summary>
            <param name="x">The value to add to the domain.</param></member>
        <member name="M:Google.Maps.Util.OrderPreservingMap.Apply(System.Int32)">
            <summary>
            Applies the map to a value. Throws <see cref="T:System.Collections.Generic.KeyNotFoundException" /> if value doesn't
            exist in map.
            </summary>
            <param name="x">The value to apply the map to.</param>
            <returns>The result of applying the map to the value.</returns></member>
        <member name="M:Google.Maps.Util.OrderPreservingMap.Populate(System.Collections.Generic.List{System.Int32})">
            <summary>
            Populate the map such that it contains all of the specified values. Try to spread the
            values out to avoid future remappings. Triggers <see cref="E:Google.Maps.Util.OrderPreservingMap.RemapEvent" />. Throws
            <see cref="T:Google.Maps.Util.OrderPreservingMap.CodomainExhaustedException" /> if the codomain is too small for the given
            values.
            </summary></member>
        <member name="T:Google.Maps.Util.Profiler">
            <summary>
            A manual profiling class that collects timing data for named events.
            </summary>
            <remarks>
            Can be used to track time used in selected code sections through the use of named counters.
            These counters record total time spent, and number of intervals measured.
            A report (string) may be generated giving the total time, average time and number of recorded
            intervals for each named timer.
            </remarks></member>
        <member name="T:Google.Maps.Util.Profiler.RealtimeProvider">
            <summary>
            An injectable time provider type used to determine elapsed time since startup.
            </summary></member>
        <member name="T:Google.Maps.Util.Profiler.IntervalTimer">
            <summary>
            The interval recording class.
            </summary></member>
        <member name="F:Google.Maps.Util.Profiler.IntervalTimer.Name">
            <summary>
            The name of the event whose timing is being profiled.
            </summary></member>
        <member name="P:Google.Maps.Util.Profiler.IntervalTimer.Ticks">
            <summary>
            The number of event intervals that have been recorded.
            </summary></member>
        <member name="P:Google.Maps.Util.Profiler.IntervalTimer.TotalTime">
            <summary>
            The total, combined time taken by all recorded intervals.
            </summary></member>
        <member name="P:Google.Maps.Util.Profiler.IntervalTimer.AverageTime">
            <summary>
            Returns the average elapsed time per recorded interval.
            </summary></member>
        <member name="F:Google.Maps.Util.Profiler.IntervalTimer.LastStart">
            <summary>
            Start time of the most recent, or current interval.
            </summary></member>
        <member name="M:Google.Maps.Util.Profiler.IntervalTimer.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">The name of the constructed interval timer.</param></member>
        <member name="M:Google.Maps.Util.Profiler.IntervalTimer.TickStart(System.Single)">
            <summary>
            Record the start of an interval.
            </summary>
            <param name="realtimeSinceStartup"></param></member>
        <member name="M:Google.Maps.Util.Profiler.IntervalTimer.TickEnd(System.Single)">
            <summary>
            Record the end of an interval.
            </summary>
            <param name="realtimeSinceStartup"></param></member>
        <member name="F:Google.Maps.Util.Profiler.TimeProvider">
            <summary>
            An injectable provided of elapsed time since startup.
            </summary>
            <remarks>
            May be used for testing, or to replace the default Time.realtimeSinceStartup with a more
            accurate or more appropriate time provider.
            </remarks></member>
        <member name="F:Google.Maps.Util.Profiler.IntervalTimers">
            <summary>
            Map from names to interval timers.
            </summary></member>
        <member name="M:Google.Maps.Util.Profiler.#ctor">
            <summary>
            Constructor using default time provider.
            </summary></member>
        <member name="M:Google.Maps.Util.Profiler.#ctor(Google.Maps.Util.Profiler.RealtimeProvider)">
            <summary>
            Constructor using an injected time provider.
            </summary>
            <param name="timeProvider">Provider of real time since startup.</param></member>
        <member name="M:Google.Maps.Util.Profiler.BuiltinRealtimeSinceStartup">
            <summary>
            Default time provider.
            </summary>
            <returns>Seconds since startup.</returns></member>
        <member name="M:Google.Maps.Util.Profiler.Add(System.String)">
            <summary>
            Add a new, named timer to this <see cref="T:Google.Maps.Util.Profiler" />
            </summary>
            <remarks>
            Using a pre-existing timer name will cause all information from that existing timer to
            be thrown away, including any currently in progress timing interval.
            </remarks>
            <param name="name">Name of the timer to add.</param></member>
        <member name="M:Google.Maps.Util.Profiler.TickStart(System.String)">
            <summary>
            Start recording an interval for the timer with the supplied name.
            </summary>
            <remarks>
            <see cref="M:Google.Maps.Util.Profiler.Add(System.String)" /> must be called with the given name before timing can be performed.
            </remarks>
            <param name="name">The name of the timer.</param></member>
        <member name="M:Google.Maps.Util.Profiler.TickEnd(System.String)">
            <summary>
            Record the end of a timing interval for the timer with the supplied name.
            </summary>
            <param name="name">The name of the timer.</param></member>
        <member name="M:Google.Maps.Util.Profiler.Report">
            <summary>
            Generates a string reporting the current state of all registered timers.
            </summary>
            <returns>A string containing the report.</returns></member>
        <member name="T:Google.Maps.Util.RealtimeClock">
            <summary>Realtime UTC clock.</summary></member>
        <member name="F:Google.Maps.Util.RealtimeClock.Utc">
            <summary>
            Whether <see cref="M:Google.Maps.Util.RealtimeClock.Now" /> returns the time in UTC.
            </summary></member>
        <member name="M:Google.Maps.Util.RealtimeClock.#ctor(System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="utc">Whether <see cref="M:Google.Maps.Util.RealtimeClock.Now" /> returns the time in UTC.</param></member>
        <member name="M:Google.Maps.Util.RealtimeClock.WaitForSeconds(System.Single)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.RealtimeClock.Now">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Util.RenderToTextureUtils">
            <summary>
            Utilities for rendering to textures.
            </summary></member>
        <member name="T:Google.Maps.Util.RenderToTextureUtils.RenderTargetContext">
            <summary>
            <see cref="T:System.IDisposable" /> that sets the active render target to a specific texture on
            disposal.
            </summary></member>
        <member name="F:Google.Maps.Util.RenderToTextureUtils.RenderTargetContext.RenderTexture">
            <summary>
            <see cref="T:UnityEngine.RenderTexture" /> to set as active on disposal.
            </summary></member>
        <member name="M:Google.Maps.Util.RenderToTextureUtils.RenderTargetContext.#ctor(UnityEngine.RenderTexture)">
            <summary>
            Constructor.
            </summary>
            <param name="renderTexture">
            <see cref="T:UnityEngine.RenderTexture" /> to restore on disposal.
            </param></member>
        <member name="M:Google.Maps.Util.RenderToTextureUtils.RenderTargetContext.Dispose">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.RenderToTextureUtils.SetRenderTarget(UnityEngine.RenderTexture)">
            <summary>
            Set the active render target to the specified <see cref="T:UnityEngine.RenderTexture" /> and return an
            <see cref="T:System.IDisposable" /> to restore the active render target to the previous value.
            </summary>
            <param name="renderTexture">
            <see cref="T:UnityEngine.RenderTexture" /> to set as active render target.
            </param>
            <returns>
            <see cref="T:System.IDisposable" /> to restore the active render target to the previous value.
            </returns></member>
        <member name="T:Google.Maps.Util.Searching.AStar`1">
            <summary>
            A generic implementation of an A-star search algorithm.
            </summary>
            <typeparam name="TN">The node type of the graph over which searching is performed.</typeparam></member>
        <member name="F:Google.Maps.Util.Searching.AStar`1.HeapMetric`1.CostToGoal">
            <summary>
            A mapping from node to the estimated cost to reach the goal from that node.
            </summary></member>
        <member name="T:Google.Maps.Util.Searching.AStar`1.Metric">
            <summary>
            A delegate defining a metric for measuring the search cost between two nodes.
            </summary>
            <param name="source">The source node.</param>
            <param name="destination">The target node.</param></member>
        <member name="T:Google.Maps.Util.Searching.AStar`1.GetNeighbors">
            <summary>
            A delegate for fetching the reachable neighbors for a given node.
            </summary>
            <param name="node">The node whose neighbors are returned.</param></member>
        <member name="M:Google.Maps.Util.Searching.AStar`1.FindPath(System.Int32,`0,`0,Google.Maps.Util.Searching.AStar{`0}.GetNeighbors,Google.Maps.Util.Searching.AStar{`0}.Metric,Google.Maps.Util.Searching.AStar{`0}.Metric)">
            <summary>
            Find the optimal path from <paramref name="start" /> to <paramref name="goal" /> using a
            standard A-Star search. See, e.g., https://en.wikipedia.org/wiki/A*_search_algorithm
            </summary>
            <param name="searchLimit">
            The maximum number of nodes that will be searched.
            </param>
            <param name="start">The initial node.</param>
            <param name="goal">The goal node.</param>
            <param name="getNeighbors">A delegate that returns reachable neighbors of a node.</param>
            <param name="metric">
            A delegate returning the cost of moving from one node to another. Only needs to be accurate
            when source and destination nodes are neighbours.
            </param>
            <param name="heuristic">
            A delegate returning the heuristic estimate of moving from one node to another, used to
            estimate the cost of reaching the goal from any given node. Must be conservative. If left as
            the default null value <paramref name="metric" /> will also be used as the heuristic.
            </param>
            <returns>
            Optimal path from start to goal (inclusive) or null if no path exists.
            </returns></member>
        <member name="T:Google.Maps.Util.DictionaryUtils">
            <summary>
            Utility methods for dictionaries.
            </summary></member>
        <member name="M:Google.Maps.Util.DictionaryUtils.Add``2(System.Collections.Generic.Dictionary{``0,System.Collections.Generic.HashSet{``1}},``0,``1)">
            <summary>
            Given a dictionary that maps its keys to a set of values, this method adds the specified
            value to the set that the key maps to.
            </summary>
            <remarks>
            If the provided key is not present in the dictionary, a new entry is added to the
            dictionary that maps the key to a new set containing the value.
            </remarks>
            <param name="dictionary">Dictionary to add value to.</param>
            <param name="key">Key to add value against.</param>
            <param name="singleValue">Value to add to the set.</param></member>
        <member name="M:Google.Maps.Util.DictionaryUtils.CreateIdentityMap``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a dictionary that maps a sequence of items to themselves.
            </summary>
            <param name="items">Items to map to themselves.</param></member>
        <member name="T:Google.Maps.Util.SimpleBenchmarker">
            <summary>
            A simple real time tracker for benchmark logging.
            </summary></member>
        <member name="F:Google.Maps.Util.SimpleBenchmarker.Stopwatch">
            <summary>
            System stopwatch used to track timing.
            </summary></member>
        <member name="M:Google.Maps.Util.SimpleBenchmarker.#ctor">
            <summary>
            Constructor.
            </summary></member>
        <member name="M:Google.Maps.Util.SimpleBenchmarker.ResetInterval">
            <summary>
            Resets elapsed time counting.
            </summary></member>
        <member name="M:Google.Maps.Util.SimpleBenchmarker.ElapsedInterval">
            <summary>
            Returns the interval (in seconds) since last call to ElapsedInterval.
            </summary>
            <remarks>
            Resets the interval measurement to zero.
            </remarks>
            <returns>Number of seconds since last call.</returns></member>
        <member name="M:Google.Maps.Util.SimpleBenchmarker.LogTime(System.String)">
            <summary>
            Logs the time elapsed since last call to LogTime or ElapsedInterval.
            </summary>
            <param name="prefix">String prepended to elapsed time value.</param></member>
        <member name="T:Google.Maps.Unity.IMeshFactory`2">
            <summary>
            A factory interface for creating Unity GameObjects from MapFeatureShapes.
            </summary></member>
        <member name="M:Google.Maps.Unity.IMeshFactory`2.BuildMeshForGameObject(UnityEngine.GameObject,`0,`1)">
            <summary>
            Constructs a new GameObject from the data specified in the provided MapFeatureShape.
            </summary>
            <param name="gameObject">GameObject to attach a Mesh to.</param>
            <param name="shape">MapFeatureShape containing the geometry data.</param>
            <param name="style">Styling object which controls the appearance of the generated
            GameObject.</param></member>
        <member name="T:Google.Maps.Util.SimulableBeforeAssemblyReloadHook">
            <summary>
            A mechanism for hooking *AssemblyReloadEvents.beforeAssemblyReload* that can be simulated
            for testing purposes.
            </summary></member>
        <member name="F:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.UnityEditorProxy">
            <summary>
            Dynamic interface to UnityEditor assembly.
            </summary></member>
        <member name="F:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.callbacks">
            <summary>
            A delegate containing all the registered callbacks.
            </summary></member>
        <member name="F:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.DelegateRegistered">
            <summary>
            Is <see cref="F:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.BeforeAssemblyReloadDelegate" /> registered with
            *UnityEditor.beforeAssemblyReload*?
            </summary></member>
        <member name="M:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.#ctor">
            <summary>
            Initialize the instance
            </summary></member>
        <member name="M:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.ExecuteCallbacks">
            <summary>
            Execute all registered callbacks.
            </summary></member>
        <member name="M:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.Register(System.Action)">
            <summary>
            Registers a callback to be called immediately before assembly reload. Has no
            effect if the callback is already registered.
            </summary>
            <param name="callback">Callback to be registered.</param></member>
        <member name="M:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.Unregister(System.Action)">
            <summary>
            Unregister a callback registered with <see cref="M:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.Register(System.Action)" />. Has no effect
            if the callback is not registered.
            </summary>
            <param name="callback">Callback to be unregistered.</param></member>
        <member name="M:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.Simulate">
            <summary>
            Simulate assembly reload.
            </summary></member>
        <member name="M:Google.Maps.Util.SimulableBeforeAssemblyReloadHook.Close">
            <summary>
            Close the instance.
            </summary></member>
        <member name="T:Google.Maps.Util.SubTypeUpperClosure">
            <summary>
            The upper closure of a set of types ordered by the (non-strict) subtype relation. The upper
            closure can be queried, e.g. for all subtypes of a given type within the closure.
            </summary></member>
        <member name="T:Google.Maps.Util.SubTypeUpperClosure.TypeNode">
            <summary>
            Node used to build a tree of the closure with links from a type its subtypes.
            </summary></member>
        <member name="F:Google.Maps.Util.SubTypeUpperClosure.TypeNode.Type">
            <summary>
            The type associated with this node.
            </summary></member>
        <member name="F:Google.Maps.Util.SubTypeUpperClosure.TypeNode.SubTypes">
            <summary>
            The guids of the subtypes of the node's type.
            </summary></member>
        <member name="M:Google.Maps.Util.SubTypeUpperClosure.TypeNode.#ctor(System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="type">The type associated with this node.</param></member>
        <member name="F:Google.Maps.Util.SubTypeUpperClosure.TypeNodes">
            <summary>
            A mapping from type guid to the associated type node.
            </summary></member>
        <member name="M:Google.Maps.Util.SubTypeUpperClosure.GetDirectSuperTypes(System.Type)">
            <summary>
            Enumerate all of the direct supertypes of a given type. This includes all of the direct
            supertypes, not just those contained in the upper closure.
            </summary></member>
        <member name="M:Google.Maps.Util.SubTypeUpperClosure.AddType(System.Type)">
            <summary>
            Add a new type to the set, while maintaining the upper closure.
            </summary>
            <param name="type">The type to add to the set.</param></member>
        <member name="M:Google.Maps.Util.SubTypeUpperClosure.GetSubTypesInUpperClosure(System.Type)">
            <summary>
            Enumerate all of the subtypes of a given type that are included in the upper closure.
            </summary></member>
        <member name="T:Google.Maps.Util.TerrainUtils">
            <summary>
            Utilities relating to <see cref="N:Google.Maps.Terrain" />.
            </summary></member>
        <member name="F:Google.Maps.Util.TerrainUtils.MinSupportedTerrainMeshResolution">
            <summary>
            The minimum supported resolution for terrain mesh generation.
            </summary>
            <remarks>
            A terrain mesh resolution must be a power of 2 + 1.
            </remarks></member>
        <member name="F:Google.Maps.Util.TerrainUtils.MaxSupportedTerrainMeshResolution">
            <summary>
            The maximum supported resolution for terrain mesh generation.
            </summary>
            <remarks>
            A terrain mesh resolution must be a power of 2 + 1.
            </remarks></member>
        <member name="F:Google.Maps.Util.TerrainUtils.MinSupportedTerrainBaseMapResolution">
            <summary>
            The minimum supported resolution for the <see cref="T:UnityEngine.Terrain" /> base map texture. This
            is the composite texture used on the terrain when viewed from a distance greater than the
            base map distance, as defined in the terrain's <see cref="T:UnityEngine.TerrainData" /> object.
            </summary>
            <remarks>
            Unity enforces a power-of-two square texture size for the base map texture. The minimum size
            that Unity allows is 16 pixels.
            </remarks></member>
        <member name="F:Google.Maps.Util.TerrainUtils.MaxSupportedTerrainBaseMapResolution">
            <summary>
            The maximum supported resolution for the <see cref="T:UnityEngine.Terrain" /> base map texture. This
            is the composite texture used on the terrain when viewed from a distance greater than the
            base map distance, as defined in the terrain's <see cref="T:UnityEngine.TerrainData" /> object.
            </summary>
            <remarks>
            Unity enforces a power-of-two square texture size for the base map texture. The maximum size
            that Unity allows is 2048 pixels.
            </remarks></member>
        <member name="F:Google.Maps.Util.TerrainUtils.MinSupportedTerrainAlphaMapResolution">
            <summary>
            The minimum supported resolution for the <see cref="T:UnityEngine.Terrain" /> alpha map textures.
            The alpha map textures are used to mask different <see cref="T:UnityEngine.TerrainLayer" />s on top of the
            terrain.
            </summary>
            <remarks>
            Unity enforces a power-of-two square texture size for alpha map textures. The minimum size
            that Unity allows is 16 pixels.
            </remarks></member>
        <member name="F:Google.Maps.Util.TerrainUtils.MaxSupportedTerrainAlphaMapResolution">
            <summary>
            The maximum supported resolution for the <see cref="T:UnityEngine.Terrain" /> alpha map textures.
            The alpha map textures are used to mask different <see cref="T:UnityEngine.TerrainLayer" />s on top of the
            terrain.
            </summary>
            <remarks>
            Unity enforces a power-of-two square texture size for alpha map textures. The maximum size
            that Unity allows is 2048 pixels.
            </remarks></member>
        <member name="M:Google.Maps.Util.TerrainUtils.MetersPerPointToMeshResolution(System.Single,System.Int32)">
            <summary>
            Returns a power of two + 1 mesh resolution for a terrain tile of the specified zoom level.
            The returned resolution is decided such that if a mesh of that resolution were applied to
            such a terrain tile, it would match the provided meters per point value as closely as
            possible.
            </summary>
            <param name="metersPerPoint">The desired distance between each point in meters.</param>
            <param name="zoomLevel">
            The resolution will be calculated to apply to tiles of this zoom level.
            </param></member>
        <member name="M:Google.Maps.Util.TerrainUtils.MetersPerPixelToBaseMapResolution(System.Single,System.Int32)">
            <summary>
            Returns a power of two resolution for a base map texture to be applied to a terrain tile of
            the specified zoom level. The returned resolution is decided such that if a texture of that
            resolution were applied to such a terrain tile, it would match the provided meters per pixel
            value as closely as possible.
            </summary>
            <param name="metersPerPixel">The desired distance between each pixel in meters.</param>
            <param name="zoomLevel">
            The resolution will be calculated to apply to tiles of this zoom level.
            </param></member>
        <member name="M:Google.Maps.Util.TerrainUtils.MetersPerPixelToAlphaMapResolution(System.Single,System.Int32)">
            <summary>
            Returns a power of two resolution for an alpha map texture to be applied to a terrain tile
            of the specified zoom level. The returned resolution is decided such that if a texture of
            that resolution were applied to such a terrain tile, it would match the provided meters per
            pixel value as closely as possible.
            </summary>
            <param name="metersPerPixel">The desired distance between each pixel in meters.</param>
            <param name="zoomLevel">
            The resolution will be calculated to apply to tiles of this zoom level.
            </param></member>
        <member name="M:Google.Maps.Util.TerrainUtils.MetersPerPixelToPowerOfTwoResolution(System.Single,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a power of two resolution for a terrain tile of the specified zoom level, The
            returned resolution is decided such that if a texture of that resolution were applied to
            such a terrain tile, it would match the provided meters per pixel value as closely as
            possible.
            </summary>
            <param name="metersPerPixel">The desired distance between each pixel in meters.</param>
            <param name="zoomLevel">
            The resolution will be calculated to apply to tiles of this zoom level.
            </param>
            <param name="minResolution">The minimum allowed resolution.</param>
            <param name="maxResolution">The maximum allowed resolution.</param></member>
        <member name="T:Google.Maps.Util.TerrainUtils.AdjacentDirection">
            <summary>
            Used to indicate which side a neighboring tile adjoins.
            </summary></member>
        <member name="T:Google.Maps.Util.TerrainUtils.DiagonalDirection">
            <summary>
            Used to indicate which corner a diagonally neighboring tile adjoins.
            </summary></member>
        <member name="M:Google.Maps.Util.TerrainUtils.AlignSideToNeighbor(System.Single[0:,0:],Google.Maps.Util.TerrainUtils.AdjacentDirection,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single[])">
            <summary>
            Aligns a single side of a terrain tile to the specified neighbor.
            </summary>
            <param name="altitudes">The altitudes to align.</param>
            <param name="direction">Which direction to align to.</param>
            <param name="blendAltitudeCount">How many pixels into altitudes should be blended.tu</param>
            <param name="resolution">The resolution of the altitude raster.</param>
            <param name="startX">The starting x position of the rectangle to blend.</param>
            <param name="endX">The ending x position of the rectangle to blend.</param>
            <param name="startY">The starting y position of the rectangle to blend.</param>
            <param name="endY">The ending y position of the rectangle to blend.</param>
            <param name="edgeCoordinate">
            The coordinate of the edge which is being blended (x coordinate when blending the left and
            right edges; y coordinate when blending the top or bottom edge.)
            </param>
            <param name="neighborEdgeAltitudes">
            The altitudes of the neighboring tile which we want to match.
            </param></member>
        <member name="M:Google.Maps.Util.TerrainUtils.AlignCornerToTwoNeighbors(System.Single[0:,0:],Google.Maps.Util.TerrainUtils.DiagonalDirection,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single[],System.Single[])">
            <summary>
            Align the corner of a tile to two adjacent neighbors at once.
            </summary>
            <param name="altitudes">The altitudes to align.</param>
            <param name="direction">Which direction to align to.</param>
            <param name="blendAltitudeCount">How many pixels into altitudes should be blended.</param>
            <param name="resolution">The resolution of the altitude raster.</param>
            <param name="startX">The starting x position of the rectangle to blend.</param>
            <param name="endX">The ending x position of the rectangle to blend.</param>
            <param name="startY">The starting y position of the rectangle to blend.</param>
            <param name="endY">The ending y position of the rectangle to blend.</param>
            <param name="horizontalBoundary">
            The x coordinate of the horizontal boundary of this corner.
            </param>
            <param name="verticalBoundary">
            The y coordinate of the vertical boundary of this corner.
            </param>
            <param name="horizontalNeighborEdgeAltitudes">
            The altitudes of the horizontally neighboring tile which we want to match.
            </param>
            <param name="verticalNeighborEdgeAltitudes">
            The altitudes of the vertically neighboring tile which we want to match.
            </param></member>
        <member name="M:Google.Maps.Util.TerrainUtils.AlignCornerToDiagonalNeighbor(System.Single[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Align the corner of a tile to a single diagonal neighbor.
            </summary>
            <param name="altitudes">The altitudes to align.</param>
            <param name="blendAltitudeCount">How many pixels into altitudes should be blended.</param>
            <param name="startX">The starting x position of the rectangle to blend.</param>
            <param name="endX">The ending x position of the rectangle to blend.</param>
            <param name="startY">The starting y position of the rectangle to blend.</param>
            <param name="endY">The ending y position of the rectangle to blend.</param>
            <param name="horizontalBoundary">
            The x coordinate of the horizontal boundary of this corner.
            </param>
            <param name="verticalBoundary">
            The y coordinate of the vertical boundary of this corner.
            </param>
            <param name="diagonalAltitude">
            The altitude of the adjoining corner of the diagonally adjacent tile.
            </param></member>
        <member name="M:Google.Maps.Util.TerrainUtils.AlignAltitudesWithNeighbors(System.Single[0:,0:],Google.Maps.Unity.UnityTerrainState,Google.Maps.Unity.UnityTerrainState,Google.Maps.Unity.UnityTerrainState,Google.Maps.Unity.UnityTerrainState,Google.Maps.Unity.UnityTerrainState,Google.Maps.Unity.UnityTerrainState,Google.Maps.Unity.UnityTerrainState,Google.Maps.Unity.UnityTerrainState)">
            <summary>
            Aligns the altitudes in the provided array with the altitudes in the neighboring
            <see cref="T:UnityEngine.Terrain" /> tiles.
            </summary>
            <param name="altitudes">The altitudes to align.</param>
            <param name="leftNeighbor">The left (west) Terrain neighbor.</param>
            <param name="topLeftNeighbor">The top left (northwest) Terrain neighbor.</param>
            <param name="topNeighbor">The top (north) Terrain neighbor.</param>
            <param name="topRightNeighbor">The top right (northeast) Terrain neighbor.</param>
            <param name="rightNeighbor">The right (east) Terrain neighbor.</param>
            <param name="bottomRightNeighbor">The bottom right (sounteast) Terrain neighbor.</param>
            <param name="bottomNeighbor">The bottom (south) Terrain neighbor.</param>
            <param name="bottomLeftNeighbor">The bottom left (southwest) Terrain neighbor.</param></member>
        <member name="M:Google.Maps.Util.TerrainUtils.GetMinGridCoveringHeightRangeForBounds(UnityEngine.Bounds,UnityEngine.Terrain,System.Single@,System.Single@)">
            <summary>
            Finds the minimum and maximum height values in the Terrain tile within the minimal Terrain
            vertex covering for the specified <see cref="T:UnityEngine.Bounds" />.
            </summary>
            <remarks>
            The minimum vertex covering is the minimum group of Terrain mesh vertices that must be
            considered to fully contain the supplied <see cref="T:UnityEngine.Bounds" />. For example:
            Terrain Grid
            +------+------+------+------+
            |      |      |      |      |
            |      |      |      |      |
            |      |      |      |      |
            +------$------$------$------$
            |      |      |      |      |
            |      |  +-------------+   |
            |      |  |   |      |  |   |
            +------$------$------$------$
            |      |  |   |      |  |   |
            |      |  |   |Bounds|  |   |
            |      |  |   |      |  |   |
            +------$------$------$------$
            |      |  |   |      |  |   |
            |      |  +-------------+   |
            |      |      |      |      |
            +------$------$------$------$
            All vertices marked with a $ represent the minimum covering of the Bounds contained within.
            </remarks>
            <param name="bounds">The worldspace <see cref="T:UnityEngine.Bounds" /> to constrain the search to.</param>
            <param name="unityTerrain">The <see cref="T:UnityEngine.Terrain" /> tile to search.</param>
            <param name="minHeight">
            The minimum returned height from the <see cref="T:UnityEngine.Terrain" /> tile.
            </param>
            <param name="maxHeight">
            The maximum returned height from the <see cref="T:UnityEngine.Terrain" /> tile.
            </param></member>
        <member name="T:Google.Maps.Util.TransformUtils">
            <summary>
            Utilities for working with <see cref="T:UnityEngine.Transform" />s.
            </summary></member>
        <member name="M:Google.Maps.Util.TransformUtils.TransformBounds(UnityEngine.Bounds,UnityEngine.Transform)">
            <summary>
            Returns a <see cref="T:UnityEngine.Bounds" /> in worldspace coordinates that exactly encloses the
            <see cref="T:UnityEngine.Bounds" /> provided in the specified <see cref="T:UnityEngine.Transform" />'s space.
            </summary>
            <remarks>
            As <see cref="T:UnityEngine.Bounds" /> objects are axis-aligned, this is not the same as doing a
            raw transform of the object itself. Rather, a new <see cref="T:UnityEngine.Bounds" /> is created in
            worldspace that is exactly the right size to encapsulate the provided one. The returned
            <see cref="T:UnityEngine.Bounds" /> itself will likely differ in size.
            </remarks>
            <param name="bounds"></param>
            <param name="transform"></param>
            <returns></returns></member>
        <member name="T:Google.Maps.Util.UnityEditorProxySingleton">
            <summary>
            Loads the UnityEditorProxy through reflection.
            </summary></member>
        <member name="T:Google.Maps.Util.DynamicLoadException">
            <summary>
            Exception that will be thrown on failed reflection loads.
            </summary></member>
        <member name="M:Google.Maps.Util.DynamicLoadException.#ctor">
            <summary>
            Default constructor.
            </summary></member>
        <member name="M:Google.Maps.Util.DynamicLoadException.#ctor(System.String)">
            <summary>
            Constructor with message
            </summary></member>
        <member name="T:Google.Maps.Util.UnityEditorProxyStub">
            <summary>
            Stub class to throw exceptions if UnityEditor functions are called in non-editor mode.
            </summary></member>
        <member name="M:Google.Maps.Util.UnityEditorProxyStub.IsBuildingPlayer">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.UnityEditorProxyStub.DisplayDialog(System.String,System.String,System.String,System.String)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.UnityEditorProxyStub.CreateAssemblyReloadCallback(System.Action)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.UnityEditorProxyStub.AddToBeforeAssemblyReload(System.Delegate)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.UnityEditorProxyStub.RemoveFromBeforeAssemblyReload(System.Delegate)">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.UnityEditorProxyStub.GetBeforeAssemblyReloadDelegates">
            <inheritdoc /></member>
        <member name="M:Google.Maps.Util.UnityEditorProxyStub.SetEditorUpdateEnabled(System.Boolean)">
            <inheritdoc /></member>
        <member name="T:Google.Maps.Util.UnityInfo">
            <summary>
            Utility class to provide information about the running Unity
            player or editor.
            </summary></member>
        <member name="T:Google.Maps.Util.UnityInfo.UnityVersion">
            <summary>
            A Unity version.
            </summary></member>
        <member name="F:Google.Maps.Util.UnityInfo.UnityVersion.Major">
            <summary>
            The major version number.
            </summary></member>
        <member name="F:Google.Maps.Util.UnityInfo.UnityVersion.Minor">
            <summary>
            The minor version number.
            </summary></member>
        <member name="M:Google.Maps.Util.UnityInfo.GetUnityVersion">
            <summary>
            Get the version of the running Unity player or editor.
            </summary>
            <returns>The version of the running Unity player or editor.</returns></member>
        <member name="T:Google.Maps.Util.ValueWrapper`1">
            <summary>
            Wrap a value so that it can be passed by reference.
            </summary>
            <typeparam name="T">Type of value to wrap.</typeparam>
            <remarks>
            This allows passing by reference to coroutines, since they can't have ref parameters.
            </remarks></member>
        <member name="F:Google.Maps.Util.ValueWrapper`1.Value">
            <summary>
            Wrapped value.
            </summary></member>
        <member name="M:Google.Maps.Util.ValueWrapper`1.#ctor(`0)">
            <summary>
            Constructor.
            </summary>
            <param name="value">Value to be wrapped.</param></member>
        <member name="T:Google.Maps.Util.VisibleForTesting">
            <summary>
            This element has broad visibility (public, internal) only so that tests have access to it.
            </summary></member>
    </members>
</doc>
